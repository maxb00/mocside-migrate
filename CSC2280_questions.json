[
  {
    "id": 16368,
    "title": "Lab10_Problem10: Count Occurrences",
    "prompt_md": "## Statement\n\nWrite a program that reads a single line of integers from the user (each separated by a space and each being between 1 and 100). Your program should then count the number of occurrences of each number and print the results accordingly.\n\n### Sample Run #1\n\n```plaintext\nEnter integers between 1 and 100: 2 5 6 5 4 3 23 43 2\n2 occurs 2 times\n3 occurs 1 time\n4 occurs 1 time\n5 occurs 2 times\n6 occurs 1 time\n23 occurs 1 time\n43 occurs 1 time\n```\n\n### Sample Run #2\n\n```plaintext\nEnter integers between 1 and 100: 15 7 7 7 12 12 2 2 2 2\n2 occurs 4 times\n7 occurs 3 times\n12 occurs 2 times\n15 occurs 1 time\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter integers between 1 and 100: \\n50 occurs 1 time\\n51 occurs 1 time\\n52 occurs 1 time\\n53 occurs 1 time\\n54 occurs 1 time\\n55 occurs 1 time\\n56 occurs 1 time\\n57 occurs 1 time\\n58 occurs 1 time\\n59 occurs 1 time\\n60 occurs 1 time\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"50 51 52 53 54 55 56 57 58 59 60\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter integers between 1 and 100: \\n1 occurs 5 times\\n2 occurs 5 times\\n3 occurs 5 times\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter integers between 1 and 100: \\n5 occurs 10 times\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5 5 5 5 5 5 5 5 5 5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter integers between 1 and 100: \\n2 occurs 2 times\\n3 occurs 1 time\\n4 occurs 1 time\\n5 occurs 2 times\\n6 occurs 1 time\\n23 occurs 1 time\\n43 occurs 1 time\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2 5 6 5 4 3 23 43 2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def main():\\n    line = input(\\\"Enter integers between 1 and 100: \\\")\\n    numbers = [eval(x) for x in line.split()]\\n\\n    distinct_numbers = []\\n\\n    for num in numbers:\\n        if num not in distinct_numbers:\\n            distinct_numbers.append(num)\\n\\n    # Sort distinct_numbers\\n    distinct_numbers.sort()\\n\\n    for num in distinct_numbers:\\n        count = numbers.count(num)\\n        if count == 1:\\n            print(\\\"{} occurs {} time\\\".format(num, count))\\n        else:\\n            print(\\\"{} occurs {} times\\\".format(num, count))\\n\\nmain()\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1619194058000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16369,
    "title": "test4",
    "prompt_md": "",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"manual\",\"title\":\"Manual Grading\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":null}}"
  },
  {
    "id": 16370,
    "title": "Program 3 - Repl.it Submission",
    "prompt_md": "\n# Description\n\nProgram 3 is fully described in the PDF provided on Canvas. In order for your program to be graded and receive full credit, you must:\n\n\n\n1. Submit your program on **<u>Canvas</u>** as usual, and\n2. Submit your program here on Repl.it and pass all the test cases.\n\n\n\nThis means that your program must have the exact same look and format, character for character. To help in this regard, you can simply copy/paste from the provided text file.\n\n\n\n# Sample Run\n\n```\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: let's enter some text to see what happens\n\nInvalid input: please select a valid choice (1, 2, 3, or 4)\n\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: 5\n\nInvalid input: please select a valid choice (1, 2, 3, or 4)\n\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: 0\n\nInvalid input: please select a valid choice (1, 2, 3, or 4)\n\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: -3\n\nInvalid input: please select a valid choice (1, 2, 3, or 4)\n\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: 4\n\nThanks for playing! Goodbye!\n```\n\n\n\n# Sample Run #2\n\n```\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: 1\n\n----------------------------------------------------\n|              Rock, Paper, Scissors               |\n----------------------------------------------------\n\nYou get to play the computer in the famous game:\nRock, Paper, Scissors!\n\nReminder of the rules:\n    --> rock beats scissors\n    --> paper beats rock\n    --> scissors beats paper\n\nThe first player to win 3 games wins the full match.\nLet's go!\n\n----- Game #1 -----\nEnter your choice (rock, paper, or scissors): intentional bad input\nInvalid choice. Please enter rock, paper, or scissors.\n\n----- Game #1 -----\nEnter your choice (rock, paper, or scissors): rock\n    Your choice: rock\n    Computer choice: paper\n    Computer wins!\n\n    Match stats:\n    Games won by you: 0\n    Games won by cpu: 1\n\n----- Game #2 -----\nEnter your choice (rock, paper, or scissors): scissors\n    Your choice: scissors\n    Computer choice: paper\n    You win!\n\n    Match stats:\n    Games won by you: 1\n    Games won by cpu: 1\n\n----- Game #3 -----\nEnter your choice (rock, paper, or scissors): scissors\n    Your choice: scissors\n    Computer choice: paper\n    You win!\n\n    Match stats:\n    Games won by you: 2\n    Games won by cpu: 1\n\n----- Game #4 -----\nEnter your choice (rock, paper, or scissors): rock\n    Your choice: rock\n    Computer choice: scissors\n    You win!\n\n    Match stats:\n    Games won by you: 3\n    Games won by cpu: 1\n\nWinner of the match: You!\n\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: 4\n\nThanks for playing! Goodbye!\n```\n\n\n\n# Sample Run #3\n\n```\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: 2\n\n----------------------------------------------------\n|               Number Guessing Game               |\n----------------------------------------------------\n    Guess a number between 1 and 100.\n\n    Enter your guess: 50\n    Too low.\n\n    Enter your guess: 75\n    Too low.\n\n    Enter your guess: 87\n    That is correct. 87 was the computer's number.\n    Time taken: 5.5 seconds\n\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: 2\n\n----------------------------------------------------\n|               Number Guessing Game               |\n----------------------------------------------------\n    Guess a number between 1 and 100.\n\n    Enter your guess: 50\n    Too low.\n\n    Enter your guess: 75\n    Too high.\n\n    Enter your guess: 62\n    Too high.\n\n    Enter your guess: 57\n    Too high.\n\n    Enter your guess: 53\n    Too low.\n\n    Enter your guess: 55\n    Too low.\n\n    Enter your guess: 56\n    That is correct. 56 was the computer's number.\n    Time taken: 20.1 seconds\n\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: 4\n\nThanks for playing! Goodbye!\n```\n\n\n\n# Sample Run #4\n\n```\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: 3\n\n----------------------------------------------------\n|                      Craps                       |\n----------------------------------------------------\n\nReminder of the rules:\n    Come Out Phase:\n        - You win by rolling a 7 or 11\n        - You lose by rolling a 2, 3, or 12\n        - Any other roll is called the Point Number\n          and will start the Point Phase\n    Point Phase:\n        - You win by rolling the Point Number\n        - You lose by rolling a 7\n        - Any other roll is ignored, and the Point\n          Phase continues until a 7 is rolled or \n          the Point Number is rolled\n\nThe game will continue until you've won three times.\nLet's go!\n\nGame #1\n    Come Out Phase:\n    Press \"Enter\" to roll \n\n    You rolled a 10.\n    You did not win or lose the Come Out Phase.\n    So now the Point Phase starts.\n\n    Point Phase:\n      - You keep rolling until you get a 7 or a 10\n      - You win by rolling a 10\n      - You lose by rolling a 7\n\n    Press \"Enter\" to roll \n\n    You rolled a 7.\n    You lose.\n\nGame Stats:\n    Wins:   0\n    Losses: 1\n\nGame #2\n    Come Out Phase:\n    Press \"Enter\" to roll \n\n    You rolled a 9.\n    You did not win or lose the Come Out Phase.\n    So now the Point Phase starts.\n\n    Point Phase:\n      - You keep rolling until you get a 7 or a 9\n      - You win by rolling a 9\n      - You lose by rolling a 7\n\n    Press \"Enter\" to roll \n\n    You rolled a 4.\n    Keep rolling till you get a 7 or a 9.\n\n    Press \"Enter\" to roll \n\n    You rolled a 4.\n    Keep rolling till you get a 7 or a 9.\n\n    Press \"Enter\" to roll \n\n    You rolled a 7.\n    You lose.\n\nGame Stats:\n    Wins:   0\n    Losses: 2\n\nGame #3\n    Come Out Phase:\n    Press \"Enter\" to roll \n\n    You rolled a 3.\n    You lose.\n\nGame Stats:\n    Wins:   0\n    Losses: 3\n\nGame #4\n    Come Out Phase:\n    Press \"Enter\" to roll \n\n    You rolled a 7.\n    You win!\n\nGame Stats:\n    Wins:   1\n    Losses: 3\n\nGame #5\n    Come Out Phase:\n    Press \"Enter\" to roll \n\n    You rolled a 8.\n    You did not win or lose the Come Out Phase.\n    So now the Point Phase starts.\n\n    Point Phase:\n      - You keep rolling until you get a 7 or a 8\n      - You win by rolling a 8\n      - You lose by rolling a 7\n\n    Press \"Enter\" to roll \n\n    You rolled a 8.\n    You win!\n\nGame Stats:\n    Wins:   2\n    Losses: 3\n\nGame #6\n    Come Out Phase:\n    Press \"Enter\" to roll \n\n    You rolled a 9.\n    You did not win or lose the Come Out Phase.\n    So now the Point Phase starts.\n\n    Point Phase:\n      - You keep rolling until you get a 7 or a 9\n      - You win by rolling a 9\n      - You lose by rolling a 7\n\n    Press \"Enter\" to roll \n\n    You rolled a 9.\n    You win!\n\nGame Stats:\n    Wins:   3\n    Losses: 3\n\n----------------------------------------------------\n|                  It's Game Time                  |\n|--------------------------------------------------| \n|  1. Rock, Paper, Scissors                        |\n|  2. Guess the Number                             |\n|  3. Craps                                        |\n|  4. Exit                                         |\n---------------------------------------------------- \nEnter your choice: 4\n\nThanks for playing! Goodbye!\n```\n\n\n\n",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"Craps\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"----------------------------------------------------\\n|                  It's Game Time                  |\\n|--------------------------------------------------| \\n|  1. Rock, Paper, Scissors                        |\\n|  2. Guess the Number                             |\\n|  3. Craps                                        |\\n|  4. Exit                                         |\\n---------------------------------------------------- \\nEnter your choice: \\n\\n----------------------------------------------------\\n|                      Craps                       |\\n----------------------------------------------------\\n\\nReminder of the rules:\\n    Come Out Phase:\\n        - You win by rolling a 7 or 11\\n        - You lose by rolling a 2, 3, or 12\\n        - Any other roll is called the Point Number\\n          and will start the Point Phase\\n    Point Phase:\\n        - You win by rolling the Point Number\\n        - You lose by rolling a 7\\n        - Any other roll is ignored, and the Point\\n          Phase continues until a 7 is rolled or \\n          the Point Number is rolled\\n\\nThe game will continue until you've won three times.\\nLet's go!\\n\\nGame #1\\n    Come Out Phase:\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 10.\\n    You did not win or lose the Come Out Phase.\\n    So now the Point Phase starts.\\n\\n    Point Phase:\\n      - You keep rolling until you get a 7 or a 10\\n      - You win by rolling a 10\\n      - You lose by rolling a 7\\n\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 7.\\n    You lose.\\n\\nGame Stats:\\n    Wins:   0\\n    Losses: 1\\n\\nGame #2\\n    Come Out Phase:\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 9.\\n    You did not win or lose the Come Out Phase.\\n    So now the Point Phase starts.\\n\\n    Point Phase:\\n      - You keep rolling until you get a 7 or a 9\\n      - You win by rolling a 9\\n      - You lose by rolling a 7\\n\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 4.\\n    Keep rolling till you get a 7 or a 9.\\n\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 4.\\n    Keep rolling till you get a 7 or a 9.\\n\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 7.\\n    You lose.\\n\\nGame Stats:\\n    Wins:   0\\n    Losses: 2\\n\\nGame #3\\n    Come Out Phase:\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 3.\\n    You lose.\\n\\nGame Stats:\\n    Wins:   0\\n    Losses: 3\\n\\nGame #4\\n    Come Out Phase:\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 7.\\n    You win!\\n\\nGame Stats:\\n    Wins:   1\\n    Losses: 3\\n\\nGame #5\\n    Come Out Phase:\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 8.\\n    You did not win or lose the Come Out Phase.\\n    So now the Point Phase starts.\\n\\n    Point Phase:\\n      - You keep rolling until you get a 7 or a 8\\n      - You win by rolling a 8\\n      - You lose by rolling a 7\\n\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 8.\\n    You win!\\n\\nGame Stats:\\n    Wins:   2\\n    Losses: 3\\n\\nGame #6\\n    Come Out Phase:\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 9.\\n    You did not win or lose the Come Out Phase.\\n    So now the Point Phase starts.\\n\\n    Point Phase:\\n      - You keep rolling until you get a 7 or a 9\\n      - You win by rolling a 9\\n      - You lose by rolling a 7\\n\\n    Press \\\"Enter\\\" to roll \\n    You rolled a 9.\\n    You win!\\n\\nGame Stats:\\n    Wins:   3\\n    Losses: 3\\n\\n----------------------------------------------------\\n|                  It's Game Time                  |\\n|--------------------------------------------------| \\n|  1. Rock, Paper, Scissors                        |\\n|  2. Guess the Number                             |\\n|  3. Craps                                        |\\n|  4. Exit                                         |\\n---------------------------------------------------- \\nEnter your choice: \\n\\nThanks for playing! Goodbye!\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n4\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Rock, Paper, Scissors\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"----------------------------------------------------\\n|                  It's Game Time                  |\\n|--------------------------------------------------| \\n|  1. Rock, Paper, Scissors                        |\\n|  2. Guess the Number                             |\\n|  3. Craps                                        |\\n|  4. Exit                                         |\\n---------------------------------------------------- \\nEnter your choice: \\n\\n----------------------------------------------------\\n|              Rock, Paper, Scissors               |\\n----------------------------------------------------\\n\\nYou get to play the computer in the famous game:\\nRock, Paper, Scissors!\\n\\nReminder of the rules:\\n    --\\u003e rock beats scissors\\n    --\\u003e paper beats rock\\n    --\\u003e scissors beats paper\\n\\nThe first player to win 3 games wins the full match.\\nLet's go!\\n\\n----- Game #1 -----\\nEnter your choice (rock, paper, or scissors): \\nInvalid choice. Please enter rock, paper, or scissors.\\n\\n----- Game #1 -----\\nEnter your choice (rock, paper, or scissors): \\n    Your choice: rock\\n    Computer choice: paper\\n    Computer wins!\\n\\n    Match stats:\\n    Games won by you: 0\\n    Games won by cpu: 1\\n\\n----- Game #2 -----\\nEnter your choice (rock, paper, or scissors): \\n    Your choice: scissors\\n    Computer choice: paper\\n    You win!\\n\\n    Match stats:\\n    Games won by you: 1\\n    Games won by cpu: 1\\n\\n----- Game #3 -----\\nEnter your choice (rock, paper, or scissors): \\n    Your choice: scissors\\n    Computer choice: paper\\n    You win!\\n\\n    Match stats:\\n    Games won by you: 2\\n    Games won by cpu: 1\\n\\n----- Game #4 -----\\nEnter your choice (rock, paper, or scissors): \\n    Your choice: rock\\n    Computer choice: scissors\\n    You win!\\n\\n    Match stats:\\n    Games won by you: 3\\n    Games won by cpu: 1\\n\\nWinner of the match: You!\\n\\n----------------------------------------------------\\n|                  It's Game Time                  |\\n|--------------------------------------------------| \\n|  1. Rock, Paper, Scissors                        |\\n|  2. Guess the Number                             |\\n|  3. Craps                                        |\\n|  4. Exit                                         |\\n---------------------------------------------------- \\nEnter your choice: \\n\\nThanks for playing! Goodbye!\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\nintentional bad input\\nrock\\nscissors\\nscissors\\nrock\\n4\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Invalid Input\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"----------------------------------------------------\\n|                  It's Game Time                  |\\n|--------------------------------------------------| \\n|  1. Rock, Paper, Scissors                        |\\n|  2. Guess the Number                             |\\n|  3. Craps                                        |\\n|  4. Exit                                         |\\n---------------------------------------------------- \\nEnter your choice: \\n\\nInvalid input: please select a valid choice (1, 2, 3, or 4)\\n\\n----------------------------------------------------\\n|                  It's Game Time                  |\\n|--------------------------------------------------| \\n|  1. Rock, Paper, Scissors                        |\\n|  2. Guess the Number                             |\\n|  3. Craps                                        |\\n|  4. Exit                                         |\\n---------------------------------------------------- \\nEnter your choice: \\n\\nInvalid input: please select a valid choice (1, 2, 3, or 4)\\n\\n----------------------------------------------------\\n|                  It's Game Time                  |\\n|--------------------------------------------------| \\n|  1. Rock, Paper, Scissors                        |\\n|  2. Guess the Number                             |\\n|  3. Craps                                        |\\n|  4. Exit                                         |\\n---------------------------------------------------- \\nEnter your choice: \\n\\nInvalid input: please select a valid choice (1, 2, 3, or 4)\\n\\n----------------------------------------------------\\n|                  It's Game Time                  |\\n|--------------------------------------------------| \\n|  1. Rock, Paper, Scissors                        |\\n|  2. Guess the Number                             |\\n|  3. Craps                                        |\\n|  4. Exit                                         |\\n---------------------------------------------------- \\nEnter your choice: \\n\\nInvalid input: please select a valid choice (1, 2, 3, or 4)\\n\\n----------------------------------------------------\\n|                  It's Game Time                  |\\n|--------------------------------------------------| \\n|  1. Rock, Paper, Scissors                        |\\n|  2. Guess the Number                             |\\n|  3. Craps                                        |\\n|  4. Exit                                         |\\n---------------------------------------------------- \\nEnter your choice: \\n\\nThanks for playing! Goodbye!\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"let's enter some text to see what happens\\n5\\n0\\n-3\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":null}}"
  },
  {
    "id": 16371,
    "title": "Lab07_Problem14: GCD",
    "prompt_md": "## Statement\n\nGiven two positive integers, compute the greatest common divisor (aka, the greatest common factor) of those two numbers. Note: you WILL need to use a FOR loop for this problem, and you should start by _thinking_ about how you actually calculate the GCD mathematically.\n\n### Example input #1\n\n```plaintext\n8\n24\n```\n\n###  Example output #1\n\n```plaintext\n8\n```\n\n###  Example input #2\n\n```plaintext\n15\n50\n```\n\n###  Example output #2\n\n```plaintext\n10\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"77\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"100\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"500\\n100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"144\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"144\\n288\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"11\\n13\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n12\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"num1 = int(input())\\nnum2 = int(input())\\n\\n# Loop until the smaller number\\nsmaller = min(num1, num2)\\n\\n# Initialize GCD to be 1 \\ngcd = 1 \\n\\n# Loop from 2 up until \\\"smaller\\\" (inclusive)\\nfor divisor in range(2, smaller + 1):\\n\\t# Check if num1 and num2 are divisible by divisor\\n\\tif num1 % divisor == 0 and num2 % divisor == 0:\\n\\t\\tgcd = divisor # so this is the new GCD\\n\\n# Finally, print the GCD\\nprint(gcd)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771738000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16372,
    "title": "Lab01_Problem05: P Y T H O N",
    "prompt_md": "Write a program that displays the following pattern:\n\n```plaintext\nPPPPP  YY   YY TTTTTT HH  HH  OOOO  NN   NN\nPP  PP  YY YY    TT   HH  HH OO  OO NNN  NN\nPPPPP    YYY     TT   HHHHHH OO  OO NN N NN\nPP        Y      TT   HH  HH OO  OO NN  NNN\nPP        Y      TT   HH  HH  OOOO  NN   NN\n```\n\nYour program should consist of five individual print statements, with each consisting of the appropriate letters and spaces in order to print the above word \"P Y T H O N\".",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"PPPPP  YY   YY TTTTTT HH  HH  OOOO  NN   NN\\nPP  PP  YY YY    TT   HH  HH OO  OO NNN  NN\\nPPPPP    YYY     TT   HHHHHH OO  OO NN N NN\\nPP        Y      TT   HH  HH OO  OO NN  NNN\\nPP        Y      TT   HH  HH  OOOO  NN   NN\",\"stdoutCompareMethod\":\"equals\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Dr Jonathan Cazalas\\n# Date Created:       08/15/19\\n# Date Last Modified: 08/15/19\\n#\\n# CSC 2280: Lab 1\\n#           Problem 3: write the word \\\"FUN\\\" with characters\\nprint(\\\"FFFFFFF   U     U   NN    NN\\\")\\nprint(\\\"FF        U     U   NNN   NN\\\")\\nprint(\\\"FFFFFFF   U     U   NN N  NN\\\")\\nprint(\\\"FF         U   U    NN  N NN\\\")\\nprint(\\\"FF          UUU     NN   NNN\\\")\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\\n\"],\"t\":1612476411000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16373,
    "title": "Lab09_Problem03: Display Reverse",
    "prompt_md": "## Statement\n\nWrite a function, display\\_reverse(), which should take the parameter, num, and display the individual digits of num in reverse order.\n\nYou should also write a main() function. In this main() function, you should read ONE int value from the user (note: you should NOT prompt the user to enter the number…simply scan it). For clarity, your main function should have two lines of code:\n\n1.  first line of code is to read the number from the integer and save it into a variable of your choosing.\n2.  the second line of code simply calls the display\\_reverse() function. You will send the value, that you read, to this function, which then prints the value in revese order.\n\n### Function name:\n\n```plaintext\ndisplay_reverse\n```\n\n###  Function parameters:\n\n```plaintext\nan integer called \"num\"\n```\n\n###  Function returns:\n\n```plaintext\nnothing...your function does *not* returna a value. Instead, it prints the reversed number.\n```\n\n###  Examples\n\n```plaintext\ndisplay_reverse(97)        ==> 79\ndisplay_reverse(1234)      ==> 4321\ndisplay_reverse(651984217) ==> 712489156\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def display_reverse(num):\\n\\t# write your code here\\n\\t\\ndef main():\\n\\tprint(display_reverse(97))\\n\\tprint(display_reverse(1234))\\n\\tprint(display_reverse(65198421))\\n\\t\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"712489156\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"651984217\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc3\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"13\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc4\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"36289\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"98263\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":null},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"def display_reverse(num):\\n\\t# write your code here\\n\\t\\ndef main():\\n\\tprint(display_reverse(97))\\n\\tprint(display_reverse(1234))\\n\\tprint(display_reverse(65198421))\\n\\t\\nmain()\"],\"t\":1617984385000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16374,
    "title": "Lab10_Problem08: Count Digits",
    "prompt_md": "## Statement\n\nWrite a program that generates 1,000,000 random integers, each one between 0 and 9, and then displays the count for each number. (Hint: Use a list of ten integers, say counts, to store the counts for the number of 0s, 1s, ..., 9s.).\n\nIn order to guarantee that the \"random\" numbers in your program match up with the \"random\" numbers in the solution, a seed is used. Scanning that seed value from the user and then seeding the random number generator with that seed has already been done for you on the first three lines. Do _not_ change those lines. Your code should start on line 7.\n\n### Sample Run #1\n\n```plaintext\nEnter the seed: 4\ncounts[0]: 100233\ncounts[1]: 99825\ncounts[2]: 99791\ncounts[3]: 100267\ncounts[4]: 99837\ncounts[5]: 99556\ncounts[6]: 99720\ncounts[7]: 100075\ncounts[8]: 100792\ncounts[9]: 99904\n```\n\n### Sample Run #2\n\n```plaintext\nEnter the seed: Chocolate\ncounts[0]: 100190\ncounts[1]: 99933\ncounts[2]: 99978\ncounts[3]: 99950\ncounts[4]: 99755\ncounts[5]: 99850\ncounts[6]: 100432\ncounts[7]: 99805\ncounts[8]: 100043\ncounts[9]: 100064\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"import random\\nseed = input(\\\"Enter the seed: \\\")\\nrandom.seed(seed)\\n\\n# do NOT change the code above. Your code should go below.\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":33,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the seed: \\ncounts[0]: 100186\\ncounts[1]: 100460\\ncounts[2]: 99804\\ncounts[3]: 99749\\ncounts[4]: 99306\\ncounts[5]: 100202\\ncounts[6]: 99860\\ncounts[7]: 99931\\ncounts[8]: 100345\\ncounts[9]: 100157\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"COMPUTER\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":33,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the seed: \\ncounts[0]: 99802\\ncounts[1]: 99238\\ncounts[2]: 100156\\ncounts[3]: 99784\\ncounts[4]: 100408\\ncounts[5]: 99914\\ncounts[6]: 99869\\ncounts[7]: 100165\\ncounts[8]: 100233\\ncounts[9]: 100431\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"The semester is almost finished!\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":34,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the seed: \\ncounts[0]: 99258\\ncounts[1]: 99570\\ncounts[2]: 99921\\ncounts[3]: 100816\\ncounts[4]: 99695\\ncounts[5]: 99576\\ncounts[6]: 100311\\ncounts[7]: 100376\\ncounts[8]: 100506\\ncounts[9]: 99971\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"98392752\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"import random\\nseed = input(\\\"Enter the seed: \\\")\\nrandom.seed(seed)\\n\\n# do NOT change the code above. Your code should go below.\\n\\ndef initialize_counts(counts):\\n    for i in range(100000):\\n        counts[random.randint(0, 9)] += 1\\n\\ndef print_counts(counts):\\n    for i in range(len(counts)):\\n        print(\\\"counts[{:d}]: {:d}\\\".format(i, counts[i]))\\n\\ndef main():\\n    counts = 10 * [0]\\n    initialize_counts(counts)\\n    print_counts(counts)\\n\\nmain()\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"import random\\nseed = input(\\\"Enter the seed: \\\")\\nrandom.seed(seed)\\n\\n# do NOT change the code above. Your code should go below.\\n\\n\"],\"t\":1619176045000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16375,
    "title": "Lab10_Problem07: Score Analysis",
    "prompt_md": "## Statement\n\nWrite a program that reads an unspecified number of scores from the user (all on one line) and determines how many scores are above or equal to the average and how many scores are below the average. Assume the input numbers are separated by one space in one line.\n\n### Sample Run #1\n\n```plaintext\nEnter the numbers: 77 90 40 50 80 100\nAverage is 72.83\nNumber of scores above or equal to the average: 4\nNumber of scores below the average: 2\n```\n\nIn the example above, the input are the values on the first line: `77 90 40 50 80 100`\n\n### Sample Run #2\n\n```plaintext\nEnter the numbers: 100 82 99 97 89 83 87 91 78 83 79 95\nAverage is 88.58\nNumber of scores above or equal to the average: 6\nNumber of scores below the average: 6\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":33,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the numbers: \\nAverage is 88.58\\nNumber of scores above or equal to the average: 6\\nNumber of scores below the average: 6\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100 82 99 97 89 83 87 91 78 83 79 95\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":33,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the numbers: \\nAverage is 94.00\\nNumber of scores above or equal to the average: 1\\nNumber of scores below the average: 2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100 90 92\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":34,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the numbers: \\nAverage is 80.00\\nNumber of scores above or equal to the average: 1\\nNumber of scores below the average: 0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"80\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def main():\\n    s = input(\\\"Enter the numbers: \\\") \\n    items = s.split() # Extracts items from the string\\n    scores = [ eval(x) for x in items ] # Convert items to numbers\\n\\n    numOfAbove = 0\\n    average = sum(scores) / len(scores)\\n\\n    for score in scores:\\n        if score \\u003e= average:\\n            numOfAbove += 1\\n\\n    print(\\\"Average is {:.2f}\\\".format(average))\\n    print(\\\"Number of scores above or equal to the average:\\\", numOfAbove)\\n    print(\\\"Number of scores below the average:\\\", len(scores) - numOfAbove)\\n\\nmain()\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1619176037000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16376,
    "title": "Lab10_Problem06: Reverse Numbers",
    "prompt_md": "## Statement\n\nWrite a program that reads a list of integers and displays them in the reverse order in which they were read.\n\n### Sample Run #1:\n\n```plaintext\nEnter numbers separated by spaces on one line: 1 2 3\nHere are those numbers in reverse order: 3 2 1 \n```\n\nIn the example above, the user input is “1 2 3”. Everything else is output from your program. For this program, you must prompt the user to enter input.\n\n### Sample Run #2:\n\n```plaintext\nEnter numbers separated by spaces on one line: 1 3 5 7 9\nHere are those numbers in reverse order: 9 7 5 3 1 \n```\n\n### Sample Run #3:\n\n```plaintext\nEnter numbers separated by spaces on one line: 71 72 73 74 75 76 77\nHere are those numbers in reverse order: 77 76 75 74 73 72 71 \n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":33,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter numbers separated by spaces on one line: \\nHere are those numbers in reverse order: 77 76 75 74 73 72 71 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"71 72 73 74 75 76 77\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":33,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter numbers separated by spaces on one line: \\nHere are those numbers in reverse order: 1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":34,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter numbers separated by spaces on one line: \\nHere are those numbers in reverse order: 10 9 8 7 6 5 4 3 2 1 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1 2 3 4 5 6 7 8 9 10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def main():\\n    # Read numbers as a string from the console\\n    s = input(\\\"Enter numbers separated by spaces on one line: \\\") \\n    items = s.split() # Extracts items from the string\\n    numbers = [ eval(x) for x in items ] # Convert items to numbers\\n    numbers.reverse()\\n    \\n    print(\\\"Here are those numbers in reverse order: \\\", end = \\\"\\\")\\n    for i in numbers:\\n        print(i, end = \\\" \\\")\\n    print()\\n    \\nmain()\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1619176036000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16377,
    "title": "Lab10_Problem09: Print Distinct Numbers",
    "prompt_md": "## Statement\n\nWrite a program that reads in numbers separated by a space in one line and displays the distinct numbers (i.e., if a number appears multiple times, it is displayed only once).\n\nHint: Read all the numbers and store them in list1. Create a new list list2. Add a number in list1 to list2. If the number is already in the list, ignore it.\n\n### Sample Run #1\n\n```plaintext\nEnter the numbers: 1 1 1 2 2 2 3 3 3\nThe distinct numbers are: 1 2 3\n```\n\n### Sample Run #2\n\n```plaintext\nEnter the numbers: 32 8 4 8 1 2 4 2 4 32 31 7 4 7 2 1 4 9 2 4\nThe distinct numbers are: 32 8 4 1 2 31 7 9\n```\n\n### Sample Run #3\n\n```plaintext\nEnter the numbers: 5 7 9\nThe distinct numbers are: 5 7 9 \n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":50,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the numbers: \\nThe distinct numbers are: 1 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1 1 1 1 1 1 1 1 1 1 1 1 1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":50,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the numbers: \\nThe distinct numbers are: 1 84 2 581 94 10 8 6 4 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1 84 2 1 581 94 2 1 84 84 10 8 10 6 4 10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def main():\\n    s = input(\\\"Enter the numbers: \\\") \\n    items = s.split() # Extracts items from the string\\n    list1 = [ eval(x) for x in items ] # Convert items to numbers\\n\\n    list2 = []\\n\\n    for number in list1:\\n        if not (number in list2):\\n            list2.append(number)\\n\\n    print(\\\"The distinct numbers are: \\\", end = \\\"\\\")\\n    for number in list2:\\n        print(number, end = \\\" \\\")\\n\\nmain()\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1619194054000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16378,
    "title": "Lab10_Problem05: Assign Grades",
    "prompt_md": "## Problem\n\nWrite a program that reads a list of scores and then assigns grades based on the following scheme:\n\nThe grade is A if the given score is greater or equal to the best score minus 10 (best - 10)\n\nThe grade is B if the given score is greater or equal to the best score minus 20 (best - 20)\n\nThe grade is C if the given score is greater or equal to the best score minus 30 (best - 30)\n\nThe grade is D if the given score is greater or equal to the best score minus 40 (best - 40)\n\nThe grade is F otherwise.\n\n### Sample Run #1:\n\n```plaintext\nEnter scores: 40 55 70 58\nStudent 0 score is 40 and grade is C\nStudent 1 score is 55 and grade is B\nStudent 2 score is 70 and grade is A\nStudent 3 score is 58 and grade is B!\n```\n\n### Sample Run #2:\n\n```plaintext\nEnter scores: 92 88 67 20 83 71\nStudent 0 score is 92 and grade is A\nStudent 1 score is 88 and grade is A\nStudent 2 score is 67 and grade is C\nStudent 3 score is 20 and grade is F\nStudent 4 score is 83 and grade is A\nStudent 5 score is 71 and grade is C\n```\n\n###  Sample Run #3:\n\n```plaintext\nEnter scores: 60 52 50 48 41 40 39 32 30 29 21 20 19 12 10 9 2\nStudent 0 score is 60 and grade is A\nStudent 1 score is 52 and grade is A\nStudent 2 score is 50 and grade is A\nStudent 3 score is 48 and grade is B\nStudent 4 score is 41 and grade is B\nStudent 5 score is 40 and grade is B\nStudent 6 score is 39 and grade is C\nStudent 7 score is 32 and grade is C\nStudent 8 score is 30 and grade is C\nStudent 9 score is 29 and grade is D\nStudent 10 score is 21 and grade is D\nStudent 11 score is 20 and grade is D\nStudent 12 score is 19 and grade is F\nStudent 13 score is 12 and grade is F\nStudent 14 score is 10 and grade is F\nStudent 15 score is 9 and grade is F\nStudent 16 score is 2 and grade is F\n```\n\n## Explanation of Sample Run #1:\n\nThe best score was a 70. Thus any score 60 or above is an A. Any score of 50 (best - 20) to 59 is a B. Any score of 40 to 49 is a C, and so on.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":33,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter scores: \\nStudent 0 score is 60 and grade is A\\nStudent 1 score is 52 and grade is A\\nStudent 2 score is 50 and grade is A\\nStudent 3 score is 48 and grade is B\\nStudent 4 score is 41 and grade is B\\nStudent 5 score is 40 and grade is B\\nStudent 6 score is 39 and grade is C\\nStudent 7 score is 32 and grade is C\\nStudent 8 score is 30 and grade is C\\nStudent 9 score is 29 and grade is D\\nStudent 10 score is 21 and grade is D\\nStudent 11 score is 20 and grade is D\\nStudent 12 score is 19 and grade is F\\nStudent 13 score is 12 and grade is F\\nStudent 14 score is 10 and grade is F\\nStudent 15 score is 9 and grade is F\\nStudent 16 score is 2 and grade is F\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"60 52 50 48 41 40 39 32 30 29 21 20 19 12 10 9 2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":33,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter scores: \\nStudent 0 score is 0 and grade is A\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":34,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter scores: \\nStudent 0 score is 10 and grade is F\\nStudent 1 score is 20 and grade is F\\nStudent 2 score is 30 and grade is F\\nStudent 3 score is 40 and grade is F\\nStudent 4 score is 50 and grade is F\\nStudent 5 score is 60 and grade is D\\nStudent 6 score is 70 and grade is C\\nStudent 7 score is 80 and grade is B\\nStudent 8 score is 90 and grade is A\\nStudent 9 score is 100 and grade is A\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10 20 30 40 50 60 70 80 90 100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def main():\\n    # Read numbers as a string from the console\\n    s = input(\\\"Enter scores: \\\") \\n    items = s.split() # Extracts items from the string\\n    scores = [ eval(x) for x in items ] # Convert items to numbers\\n\\n    best = 0 # The best score\\n    for i in range(len(scores)):      \\n        if scores[i] \\u003e best:\\n            best = scores[i]\\n\\n    # Initialize output string\\n    output = \\\"\\\"\\n\\n    # Assign and display grades\\n    for i in range(len(scores)):      \\n        if scores[i] \\u003e= best - 10:\\n            grade = 'A'\\n        elif scores[i] \\u003e= best - 20:\\n            grade = 'B'\\n        elif scores[i] \\u003e= best - 30:\\n            grade = 'C'\\n        elif scores[i] \\u003e= best - 40:\\n            grade = 'D'\\n        else:\\n            grade = 'F'\\n\\n        print(\\\"Student\\\", i, \\\"score is\\\", scores[i], \\\"and grade is\\\", grade)\\n        \\nmain()\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1619124674000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16379,
    "title": "Lab02_Problem12: Temp Convert",
    "prompt_md": "## Statement\n\nWrite a program that reads a temperature in Celsius from the user, converts it to Fahrenheit, and then displays the result. Note: the formula for the conversion is as follows:\n\n![](https://storage.googleapis.com/replit/images/1568373939707_6b402b420aeacee706d43adce6a7c08d.jpeg)\n\n### Example input/output #1\n\n```plaintext\nPlease enter a temperature in Celsius: 43\n43 Celsius is 109.4 Fahrenheit\n```\n\n### Example input/output #2\n\n```plaintext\nPlease enter a temperature in Celsius: 100\n100 Celsius is 212.0 Fahrenheit\n```\n\n\\*\\*\\* The user input is strictly only the number on the first line. All other text is output (including the prompt printed to the user asking them to enter a temperature).",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Please enter a temperature in Celsius: \\n-78.24 Celsius is -108.832 Fahrenheit\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-78.24\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Please enter a temperature in Celsius: \\n-4.1 Celsius is 24.62 Fahrenheit\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-4.1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Please enter a temperature in Celsius: \\n24.6 Celsius is 76.28 Fahrenheit\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"24.6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Please enter a temperature in Celsius: \\n0 Celsius is 32.0 Fahrenheit\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Please enter a temperature in Celsius: \\n43 Celsius is 109.4 Fahrenheit\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"43\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Please enter a temperature in Celsius: \\n100 Celsius is 212.0 Fahrenheit\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Dr Jonathan Cazalas\\n#\\n# CSC 2280: Chapter 2 - Elementary Programming\\n#           Weekly Problems: Temperature Conversion\\n\\n# Step 1: get celsius from user\\ntemp_c = eval(input(\\\"Please enter a temperature in Celsius: \\\"))\\n\\n# Step 2: convert the Celsius to Fahrenheit\\ntemp_f = (9 / 5) * temp_c + 32\\n\\n# Display the result\\nprint(\\\"{} Celsius is {} Fahrenheit\\\".format(temp_c, temp_f))\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613079217000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16380,
    "title": "Lab04_Problem11: BMI",
    "prompt_md": "## Statement\n\nWrite a program that prompts the user to enter **three values**:\n\n1.  their **weight** in pounds\n2.  their height in **feet** and **inches**.\n\nYour program should then use the information given below to calculate the user’s Body Mass Index (BMI) and output an appropriate message. You will need the constants, the equation, and the BMI information given in the table below.\n\n![](https://storage.googleapis.com/replit/images/1569527284631_0e216812c20bc897c3b61469024d4e38.jpeg)\n\n### Sample Run #1\n\n```plaintext\n------------------------------------------------\n|                BMI Calculator                |\n------------------------------------------------\nEnter your weight in pounds: 92\nEnter your height in feet and inches...\n    Feet:   5\n    Inches: 6\n\nResults:\nYour BMI is 14.85.\n - You are Underweight.\n```\n\n\\*\\*\\*The user input in the above example are these three values: 92, 5, and 6\n\n### Sample Run #2\n\n```plaintext\n------------------------------------------------\n|                BMI Calculator                |\n------------------------------------------------\nEnter your weight in pounds: 210\nEnter your height in feet and inches...\n    Feet:   5\n    Inches: 11\n\nResults:\nYour BMI is 29.29.\n - You are Overweight.\n```\n\n###  Sample Run #3\n\n```plaintext\n------------------------------------------------\n|                BMI Calculator                |\n------------------------------------------------\nEnter your weight in pounds: 170\nEnter your height in feet and inches...\n    Feet:   6\n    Inches: 2\n\nResults:\nYour BMI is 21.83.\n - You are Normal.\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------\\n|                BMI Calculator                |\\n------------------------------------------------\\nEnter your weight in pounds: \\nEnter your height in feet and inches...\\n\\tFeet:   \\n\\tInches: \\n\\nResults:\\nYour BMI is 18.88.\\n - You are Normal.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"110\\n5\\n4\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------\\n|                BMI Calculator                |\\n------------------------------------------------\\nEnter your weight in pounds: \\nEnter your height in feet and inches...\\n\\tFeet:   \\n\\tInches: \\n\\nResults:\\nYour BMI is 21.83.\\n - You are Normal.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"170\\n6\\n2\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------\\n|                BMI Calculator                |\\n------------------------------------------------\\nEnter your weight in pounds: \\nEnter your height in feet and inches...\\n\\tFeet:   \\n\\tInches: \\n\\nResults:\\nYour BMI is 29.29.\\n - You are Overweight.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"210\\n5\\n11\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------\\n|                BMI Calculator                |\\n------------------------------------------------\\nEnter your weight in pounds: \\nEnter your height in feet and inches...\\n\\tFeet:   \\n\\tInches: \\n\\nResults:\\nYour BMI is 31.01.\\n - You are Obese.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"210\\n5\\n9\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------\\n|                BMI Calculator                |\\n------------------------------------------------\\nEnter your weight in pounds: \\nEnter your height in feet and inches...\\n\\tFeet:   \\n\\tInches: \\n\\nResults:\\nYour BMI is 14.85.\\n - You are Underweight.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"92\\n5\\n6\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Name: Dr Jonathan Cazalas\\n#\\n# CSC 2280: Lab 4 - BMI Calculator\\n\\n# CONSTANTS\\nMETERS_PER_INCH = 0.0254\\nKILOS_PER_POUND = 0.45359237\\n\\n# Display Header\\nprint(\\\"------------------------------------------------\\\")\\nprint(\\\"|                BMI Calculator                |\\\")\\nprint(\\\"------------------------------------------------\\\")\\nweight = eval(input(\\\"Enter your weight in pounds: \\\"))\\nprint(\\\"Enter your height in feet and inches...\\\")\\nfeet   = eval(input(\\\"\\\\tFeet:   \\\"))\\ninches = eval(input(\\\"\\\\tInches: \\\"))\\n\\n# Perform calculations\\ninches = inches + feet * 12\\nheight_meters = inches * METERS_PER_INCH\\nweight_kilograms = weight * KILOS_PER_POUND\\nbmi_value = weight_kilograms / (height_meters * height_meters)\\n\\n# Display output\\nprint(\\\"\\\\nResults:\\\\nYour BMI is {:.2f}.\\\".format(bmi_value))\\n\\nif bmi_value \\u003c 18.5:\\n    print(\\\" - You are Underweight.\\\")\\nelif bmi_value \\u003c 25:\\n    print(\\\" - You are Normal.\\\")\\nelif bmi_value \\u003c 30:\\n    print(\\\" - You are Overweight.\\\")\\nelse:\\n    print(\\\" - You are Obese.\\\")\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1614277821000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16381,
    "title": "Lab01_Problem01: Printing",
    "prompt_md": "Write a program that displays the following:\n\n```plaintext\nWelcome to Python\nWelcome to Computer Science\nProgramming is fun\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Welcome to Python\\nWelcome to Computer Science\\nProgramming is fun\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Include your Name and ID as a comment before typing your code\\n# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID:\\nprint(\\\"Welcome to Python\\\")\\nprint(\\\"Welcome to Computer Science\\\")\\nprint(\\\"Programming is fun\\\")\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\"],\"t\":1611519319000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16382,
    "title": "Lab08_Problem04: Coin Flip",
    "prompt_md": "## Statement\n\nWrite a program that simulates flipping a coin N times, and then displays the number of heads and the number of tails. The program has already been started for you by importing the random module and by seeding the random number generator. Do not change that code or your programming will not work.\n\nNote: a coin flip has two options, heads or tails. Can you use randint to randomly generate one of two different options? Of course you can!\n\nThe only input is the integer, `N`.\n\n### Example input 1\n\n```plaintext\n10\n```\n\n### Example output 1\n\n```plaintext\nHeads:  3\nTails:  7\n```\n\n### Example input 2\n\n```plaintext\n100\n```\n\n### Example output 2\n\n```plaintext\nHeads:  48\nTails:  52\n```\n\n###  Example input 3\n\n```plaintext\n6518\n```\n\n### Example output 3\n\n```plaintext\nHeads:  3214\nTails:  3304\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"import random\\nrandom.seed(\\\"Coin Flip\\\")\\n\\nn = int(input())\\n\\n# write your code BELOW...do not touch the above code\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Heads:  500469\\nTails:  499531\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1000000\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Heads:  49956\\nTails:  50044\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100000\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Heads:  3\\nTails:  7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"import random\\nrandom.seed(\\\"Coin Flip\\\")\\n\\nn = int(input())\\nheads = 0\\ntails = 0\\n\\nfor i in range(n):\\n\\trand = random.randint(0,1)\\n\\tif rand == 0:\\n\\t\\theads += 1\\n\\telse:\\n\\t\\ttails += 1\\n\\nprint(\\\"Heads: \\\", heads)\\nprint(\\\"Tails: \\\", tails)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"import random\\nrandom.seed(\\\"Coin Flip\\\")\\n\\nn = int(input())\\n\\n# write your code BELOW...do not touch the above code\\n\\n\"],\"t\":1616898856000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16383,
    "title": "Lab09_Problem10: Palindrome",
    "prompt_md": "## Statement\n\nWrite a function header on Line 1, called is\\_palindrome, which checks if the given integer parameter is a palindrome.\n\nA number is a palindrome if its reversal is the same as itself. Your function should return True if the given integer is a palindrome or false otherwise.\n\n(Hint: Use the reverse() function to implement is\\_palindrome().)\n\n## Function name:\n\n```plaintext\nis_palindrome\n```\n\n Function parameters:\n\n```plaintext\na single integer value\n```\n\n Function returns:\n\n```plaintext\nboolean value\n```\n\n Examples\n\n```plaintext\nis_palindrome(181)  ==> True\nis_palindrome(1221) ==> True\nis_palindrome(189)  ==> False\nis_palindrome(1234321) ==> True\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Write your function here\\n\\n\\n# Hint, you likely need the reverse function from the last example as well\\n\\n\\ndef main():\\n\\tprint(is_palindrome(181))\\n\\tprint(is_palindrome(1221))\\n\\tprint(is_palindrome(189))\\n\\tprint(is_palindrome(1234321))\\n\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"unit_test\",\"title\":\"is_palindrome\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"py3_unittest\",\"unitTestCode\":\"from main import *\\n\\nimport unittest\\n\\nclass CodingRoomsUnitTests(unittest.TestCase):\\n\\n  def test_is_palindrome(self):\\n    self.assertEquals(is_palindrome(181), True)\\n    self.assertEquals(is_palindrome(1221), True)\\n    self.assertEquals(is_palindrome(189), False)\\n    self.assertEquals(is_palindrome(1234321), True)\\n    self.assertEquals(is_palindrome(29387498), False)\\n    self.assertEquals(is_palindrome(5678998765), True)\\n    self.assertEquals(is_palindrome(56765), True)\\n\\n\",\"unitTestFilePath\":\"coding_rooms_unit_tests.py\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def is_palindrome(n):\\n    n_String = str(n)\\n    if n_String == reverse(n):\\n        return True\\n    else:\\n        return False\\n\\ndef reverse(num):\\n    num_string = \\\"\\\"\\n    while True:\\n        if num \\u003c 10:\\n            num_string += str(num)\\n            break\\n        else:\\n            num_string += str(num % 10)\\n            num //= 10\\n    return num_string\\n\\ndef main():\\n    print(is_palindrome(181))\\n    print(is_palindrome(1221))\\n    print(is_palindrome(189))\\n    print(is_palindrome(1234321))\\n\\nmain()\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Write your function here\\n\\n\\n# Hint, you likely need the reverse function from the last example as well\\n\\n\\ndef main():\\n\\tprint(is_palindrome(181))\\n\\tprint(is_palindrome(1221))\\n\\tprint(is_palindrome(189))\\n\\tprint(is_palindrome(1234321))\\n\\nmain()\"],\"t\":1617988103000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16384,
    "title": "Lab01_Problem02: More Printing",
    "prompt_md": "\nWrite a program that displays \"`Welcome to Python`\" five times (do not print the quotes). For clarity, your program should have five lines of text printed, with each line have the exact words \"`Welcome to Python`\".\n\n\n\n",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Welcome to Python\\nWelcome to Python\\nWelcome to Python\\nWelcome to Python\\nWelcome to Python\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\\nprint(\\\"Welcome to Python\\\")\\nprint(\\\"Welcome to Python\\\")\\nprint(\\\"Welcome to Python\\\")\\nprint(\\\"Welcome to Python\\\")\\nprint(\\\"Welcome to Python\\\")\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\"],\"t\":1611519475000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16385,
    "title": "Lab09_Problem09: Reverse a Number",
    "prompt_md": "## Statement\n\nWrite a function, `reverse`, which should receive a single integer as a parameter. Your function should reverse this number and return this reversed answer as a string.\n\n## Function name:\n\n```plaintext\nreverse\n```\n\n Function parameters:\n\n```plaintext\nan integer\n```\n\n Function returns:\n\n```plaintext\na String\n```\n\n Examples\n\n```plaintext\nreverse(987)    ==> 789\nreverse(123)    ==> 321\nreverse(927434) ==> 434729\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Write your function here\\n\\n\\ndef main():\\n    print(reverse(987))\\n    print(reverse(123))\\n    print(reverse(927434))\\n\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"unit_test\",\"title\":\"reverse\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"py3_unittest\",\"unitTestCode\":\"from main import *\\n\\nimport unittest\\n\\nclass CodingRoomsUnitTests(unittest.TestCase):\\n\\n  def test_reverse(self):\\n    self.assertEquals(reverse(987), \\\"789\\\")\\n    print(reverse(123), \\\"321\\\")\\n    print(reverse(927434), \\\"927434\\\")\\n    print(reverse(5), \\\"5\\\")\\n    print(reverse(987634543), \\\"987634543\\\")\\n    print(reverse(123456789), \\\"123456789\\\")\\n\\n\",\"unitTestFilePath\":\"coding_rooms_unit_tests.py\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def reverse(num):\\n    num_string = \\\"\\\"\\n    while True:\\n        if num \\u003c 10:\\n            num_string += str(num)\\n            break\\n        else:\\n            num_string += str(num % 10)\\n            num //= 10\\n    return num_string\\n\\ndef main():\\n    print(reverse(987))\\n    print(reverse(123))\\n    print(reverse(927434))\\n    print(reverse(5))\\n    print(reverse(987634543))\\n    print(reverse(123456789))\\n\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Write your function here\\n\\n\\ndef main():\\n    print(reverse(987))\\n    print(reverse(123))\\n    print(reverse(927434))\\n\\nmain()\"],\"t\":1617987996000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16386,
    "title": "Lab09_Problem07: Sum Even",
    "prompt_md": "## Statement\n\nWrite a function, sum\\_even, which should sum all the even numbers from 1 through the given parameter, n (inclusive). Your function should then return this sum.\n\n## Function name:\n\n```plaintext\nsum_even\n```\n\n###  Function parameters:\n\n```plaintext\nan integer called \"n\"\n```\n\n###  Function returns:\n\n```plaintext\nan integer\n```\n\n###  Examples\n\n```plaintext\nsum_even(6)  ==> 12\nsum_even(8)  ==> 20\nsum_even(20) ==> 110\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Write your function here\\n\\n\\ndef main():\\n    print(sum_even(6))\\n    print(sum_even(8))\\n    print(sum_even(20))\\n\\n\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"unit_test\",\"title\":\"sum_even\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"py3_unittest\",\"unitTestCode\":\"from main import *\\n\\nimport unittest\\n\\nclass CodingRoomsUnitTests(unittest.TestCase):\\n\\n  def test_sum_even(self):\\n    self.assertEquals(sum_even(6), 12)\\n    self.assertEquals(sum_even(8), 20)\\n    self.assertEquals(sum_even(20), 110)\\n    self.assertEquals(sum_even(85765), 1838908806)\\n    self.assertEquals(sum_even(52345), 684999756)\\n    self.assertEquals(sum_even(98445), 2422854506)\\n    \\n\\n\",\"unitTestFilePath\":\"coding_rooms_unit_tests.py\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def sum_even(num):\\n    sum = 0\\n    for i in range(1, num + 1):\\n        if i % 2 == 0:\\n            sum += i\\n    return sum\\n\\ndef main():\\n    print(sum_even(6))\\n    print(sum_even(8))\\n    print(sum_even(20))\\n    print(sum_even(85765))\\n    print(sum_even(52345))\\n    print(sum_even(98445))\\n\\nmain()\\n\\n\\n\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Write your function here\\n\\n\\ndef main():\\n    print(sum_even(6))\\n    print(sum_even(8))\\n    print(sum_even(20))\\n\\n\\nmain()\"],\"t\":1617987819000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16387,
    "title": "Lab07_Problem08: Sum of factorials",
    "prompt_md": "## Statement\n\nIn mathematics, the factorial of an integer **n**, denoted by **n!** is the following product:\n\nn! = 1 × 2 × … × n\n\nFor the given integer n calculate the value\n\n1! + 2! + 3! + ... + n!\n\nTry to discover the solution that uses only one for-loop. And don't use math module in this exercise.\n\nOtherwise, you are welcome to use two loops.\n\n### Example input\n\n```plaintext\n4\n```\n\n###  Example output\n\n```plaintext\n33\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"33\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"153\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4037913\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"partial_sum = 0\\ncurrent_factorial = 1\\nfor i in range(1, int(input()) + 1):\\n  current_factorial *= i\\n  partial_sum += current_factorial\\nprint(partial_sum)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771751000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16388,
    "title": "Lab07_Problem05: Sum of cubes",
    "prompt_md": "## Statement\n\nFor the given integer N calculate the following sum:\n\n#### 1³ + 2³ + ... + N³\n\n### Example input\n\n```plaintext\n3\n```\n\n###  Example output\n\n```plaintext\n36\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"36\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"100\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2025\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"9\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"44100\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"20\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"result = 0\\nfor i in range(1, int(input()) + 1):\\n  result += i ** 3\\nprint(result)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771747000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16389,
    "title": "Lab07_Problem07: Number of zeros",
    "prompt_md": "## Statement\n\nGiven N numbers: the first number in the input is N, after that N integers are given. Count the number of zeros among the given integers and print it.\n\nYou need to count the number of numbers that are equal to zero, not the number of zero digits.\n\n### Example input\n\n```plaintext\n5\n0\n700\n0\n200\n2\n```\n\n###  Example output\n\n```plaintext\n2\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n0\\n700\\n0\\n200\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"6\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n0\\n0\\n0\\n0\\n0\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n0\\n1\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n0\\n4\\n1\\n-7\\n0\\n4\\n5\\n1\\n0\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"result = 0\\nfor i in range(int(input())):\\n  if int(input()) == 0:\\n    result += 1\\nprint(result)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771751000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16390,
    "title": "Lab08_Problem03: Fibonacci index",
    "prompt_md": "## Statement\n\nFibonacci numbers are the numbers in the integer sequence starting with 1, 1 where every number after the first two is the sum of the two preceding ones:\n\n1, 1, 2, 3, 5, 8, 13, 21, 34, ...\n\nGiven a positive integer, determine if it's the **n**th Fibonacci number for some **n**. If it is, print such **n**, otherwise print **\\-1**. In other words, determine if the inputted number is a Fibonacci number. If it is, then print the position (or index) of the Fibonacci number. Consider the example below. The input is 8, which IS a Fibonacci number.And, in fact, it is the 6th Fibonacci number. Thus, the output is 6.\n\n### Example input\n\n```plaintext\n8\n```\n\n###  Example output\n\n```plaintext\n6\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"6\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"13\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"55\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"56\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"57\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"54\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"45\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1134903170\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1134903171\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"13\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1134903169\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"prev, next = 1, 1\\nindex = 2\\npossible_fib = int(input())\\nwhile possible_fib \\u003e next:\\n  prev, next = next, prev + next\\n  index += 1\\nif possible_fib == next:\\n  print(index)\\nelse:\\n  print(-1)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1616898852000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16391,
    "title": "Lab08_Problem05: Triangle Madness v1",
    "prompt_md": "## Statement\n\nGiven an input, N, use nested loops to create the following triangle.\n\n### Example input 1\n\n```plaintext\n6\n```\n\n### Example output 1\n\n```plaintext\n1 \n1 2 \n1 2 3 \n1 2 3 4 \n1 2 3 4 5 \n1 2 3 4 5 6 \n```\n\n### Example input 2\n\n```plaintext\n10\n```\n\n### Example output 2\n\n```plaintext\n1 \n1 2 \n1 2 3 \n1 2 3 4 \n1 2 3 4 5 \n1 2 3 4 5 6 \n1 2 3 4 5 6 7 \n1 2 3 4 5 6 7 8 \n1 2 3 4 5 6 7 8 9 \n1 2 3 4 5 6 7 8 9 10 \n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 \\n1 2 \\n1 2 3 \\n1 2 3 4 \\n1 2 3 4 5 \\n1 2 3 4 5 6 \\n1 2 3 4 5 6 7 \\n1 2 3 4 5 6 7 8 \\n1 2 3 4 5 6 7 8 9 \\n1 2 3 4 5 6 7 8 9 10 \\n1 2 3 4 5 6 7 8 9 10 11 \\n1 2 3 4 5 6 7 8 9 10 11 12 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"34\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 \\n1 2 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 \\n1 2 \\n1 2 3 \\n1 2 3 4 \\n1 2 3 4 5 \\n1 2 3 4 5 6 \\n1 2 3 4 5 6 7 \\n1 2 3 4 5 6 7 8 \\n1 2 3 4 5 6 7 8 9 \\n1 2 3 4 5 6 7 8 9 10 \\n1 2 3 4 5 6 7 8 9 10 11 \\n1 2 3 4 5 6 7 8 9 10 11 12 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"20\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 \\n1 2 \\n1 2 3 \\n1 2 3 4 \\n1 2 3 4 5 \\n1 2 3 4 5 6 \\n1 2 3 4 5 6 7 \\n1 2 3 4 5 6 7 8 \\n1 2 3 4 5 6 7 8 9 \\n1 2 3 4 5 6 7 8 9 10 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"n = int(input())\\nfor i in range(1, n + 1):\\n    for j in range (1, i + 1):\\n        print(\\\"{} \\\".format(j), end = \\\"\\\")\\n    print()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616898856000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16392,
    "title": "Lab07_Problem10: Ladder",
    "prompt_md": "## Statement\n\nFor a given integer n, where n ≤ 9, print a ladder of n steps. The k-th step consists of the integers from 1 to k without spaces between them.\n\nTo do that, you can use the `end` argument for the function print().\n\n### Example input\n\n```plaintext\n4\n```\n\n###  Example output\n\n```plaintext\n1\n12\n123\n1234\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n12\\n123\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n12\\n123\\n1234\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\t\\n1\\n12\\n123\\n1234\\n12345\\n123456\\n1234567\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n12\\n123\\n1234\\n12345\\n123456\\n1234567\\n12345678\\n123456789\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"9\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"n = int(input())\\nfor i in range(1, n + 1):\\n  for j in range(1, i + 1):\\n    print(j, end='')\\n  print()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771755000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16393,
    "title": "Lab07_Problem06: Factorial",
    "prompt_md": "## Statement\n\nIn mathematics, the factorial of an integer **n**, denoted by **n!** is the following product:\n\nn! = 1 × 2 × … × n\n\nFor the given integer n calculate the value **n!**. Don't use `math` module in this exercise.\n\n### Example input\n\n```plaintext\n4\n```\n\n###  Example output\n\n```plaintext\n24\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"24\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"6\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"720\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3628800\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"result = 1\\nfor i in range(1, int(input()) + 1):\\n  result *= i\\nprint(result)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771751000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16394,
    "title": "Lab07_Problem01: Series - 1",
    "prompt_md": "## Statement\n\nGiven two integers A and B (A ≤ B). Print all numbers from A to B inclusively.\n\n### Example input\n\n```plaintext\n1\n10\n```\n\n###  Example output\n\n```plaintext\n1 2 3 4 5 6 7 8 9 10\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 2 3 4 5 6 7 8 9 10\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-3\\n14\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5 6 7 8\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3 4 5 6 7 8 9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n9\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nb = int(input())\\n\\nfor i in range(a, b + 1):\\n  print(i, end=' ')\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771740000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16395,
    "title": "Lab07_Problem04: Sum of N numbers",
    "prompt_md": "## Statement\n\n**N** numbers are given in the input. Read them and print their sum.\n\nThe first line of input contains the integer N, which is the number of integers to follow. Each of the next N lines contains one integer. Print the sum of these N integers.\n\n### Example input\n\n```plaintext\n10\n1\n2\n1\n1\n1\n1\n3\n1\n1\n1\n```\n\n###  Example output\n\n```plaintext\n13\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"13\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n1\\n2\\n1\\n1\\n1\\n1\\n3\\n1\\n1\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"55\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"891\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n891\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"291\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n235\\n56\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"16\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n4\\n4\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"result = 0\\nfor i in range(int(input())):\\n  result += int(input())\\nprint(result)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771746000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16396,
    "title": "Lab07_Problem12: Second maximum",
    "prompt_md": "## Statement\n\nGiven a sequence of distinct non-negative integers, where each number is written in a separate line. The sequence ends with 0. Print the second largest element in this sequence. It is guaranteed that the sequence has at least two elements.\n\nHint: you know how to find the largest element…you keep a “largest” variable and update it accordingly. Well, this is the same concept, but now you have to maintain two variables, largest and second\\_largest.\n\n### Example input\n\n```plaintext\n1\n7\n9\n0\n```\n\n###  Example output\n\n```plaintext\n7\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\n9\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n3\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n3\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n1\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n1\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n2\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n4\\n2\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n4\\n3\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"13\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n9\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n10\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"14\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"15\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n4\\n6\\n9\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"16\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"44\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"58\\n23\\n11\\n44\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"17\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"85\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"90\\n85\\n70\\n75\\n10\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"18\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"90\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"90\\n85\\n70\\n75\\n10\\n95\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"maximum = int(input())\\nsecond_maximum = int(input())\\nif second_maximum \\u003e maximum:\\n  second_maximum, maximum = maximum, second_maximum\\na = -1\\nwhile a != 0:\\n  a = int(input())\\n  if a \\u003e maximum:\\n    second_maximum, maximum = maximum, a\\n  elif a \\u003e second_maximum:\\n    second_maximum = a\\nprint(second_maximum)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771759000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16397,
    "title": "Lab08_Problem02: Fibonacci numbers",
    "prompt_md": "## Statement\n\nFibonacci numbers are the numbers in the [integer sequence](https://en.wikipedia.org/wiki/Integer_sequence) starting with 1, 1 where every number after the first two is the sum of the two preceding ones. Here are the first several Fibonacci numbers.\n\n1, 1, 2, 3, 5, 8, 13, 21, 34, ...\n\nSo, for example, the number 34 is computed by adding the two previous numbers, 13 and 21.\n\nGiven a positive integer **n**, print the **n**th Fibonacci number.\n\n### Example input\n\n```plaintext\n6\n```\n\n###  Example output\n\n```plaintext\n8\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"8\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"13\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"377\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"14\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2584\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"18\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"6765\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"20\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"prev, next = 1, 1\\nn = int(input())\\nfor i in range(n - 2):\\n  prev, next = next, prev + next\\nprint(next)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1616898850000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16398,
    "title": "Lab06_Problem06: Number of even elements",
    "prompt_md": "### Statement\n\nGiven a sequence of non-negative integers, where each number is written in a separate line. The sequence ends with 0.\n\nPrint the number of even elements of the sequence.\n\n### Example input\n\n```plaintext\n2\n1\n4\n0\n```\n\n###  Example output\n\n```plaintext\n2\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n1\\n4\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n3\\n5\\n7\\n9\\n1\\n3\\n5\\n7\\n9\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n4\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7883\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"14\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n3\\n6\\n7\\n4\\n2\\n4\\n5\\n6\\n7\\n4\\n3\\n4\\n6\\n7\\n4\\n5\\n7\\n8\\n4\\n4\\n3\\n6\\n3\\n7\\n5\\n5\\n4\\n3\\n5\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nnum_even = 0\\nwhile a != 0:\\n  if a % 2 == 0:\\n    num_even += 1\\n  a = int(input())\\nprint(num_even)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1616165799000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16399,
    "title": "Lab06_Problem10: Jogging",
    "prompt_md": "### Statement\n\nAs a future athlete, you just started your practice for an upcoming event. On the first day, you run _**x**_ miles, and by the day of the event, you must be able to run _**y**_ miles.\n\nCalculate the number of days required for you to finally reach the required distance for the event if you increase your distance each day by 10% from the previous day.\n\nThe input will consist of two values, x and y, each appearing on their own line. The output is a single integer representing the number of days to reach the required distance.\n\n### Example input\n\n```plaintext\n10\n30\n```\n\n###  Example output\n\n```plaintext\n13\n```\n\nExplanation of input and output:\n\n*   10 is the number of miles you run on the first day\n*   30 is the number of miles you MUST be able to run by the day of the event\n*   so now you need to build yourself up from 10 miles per run to 30 miles per run\n*   and you do this to the tune of 10% increase per day\n*   so on day 2, you run 11 miles (10 + 10\\*0.1)\n*   and on day 3, you run 12.1 miles (11 + 11\\*0.1)\n*   and on day 4, you run 13.31 miles (12.1 + 12.1\\*0.1)\n*   and so on…\n*   you keep looping until you finally get to a distance that is greater than or equal to 30\n*   And for this specific example input of 10 and 30, the number of days needed to get to 30 miles per day is 13",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"13\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n20\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"26\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\\n101\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\\n99\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"74\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1000\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n11\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\\n121\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x = int(input())\\ny = int(input())\\nnum_days = 1\\nwhile x \\u003c y:\\n  x *= 1.1\\n  num_days += 1\\nprint(num_days)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1616165819000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16400,
    "title": "Lab06_Problem03: Maximum of sequence",
    "prompt_md": "### Statement\n\nGiven a sequence of non-negative integers, where each number is written in a separate line. The sequence ends with 0. Print the _**maximum**_ of the sequence.\n\n### Example input\n\n```plaintext\n1\n2\n3\n2\n1\n0\n```\n\n###  Example output\n\n```plaintext\n3\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n2\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\n9\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n3\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n1\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n5\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"90\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"28\\n31\\n90\\n78\\n54\\n10\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"99\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"80\\n94\\n78\\n67\\n24\\n4\\n22\\n73\\n26\\n38\\n7\\n90\\n37\\n56\\n95\\n37\\n96\\n77\\n51\\n43\\n25\\n91\\n71\\n89\\n99\\n95\\n29\\n87\\n64\\n10\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"maximum = a = int(input())\\nwhile a != 0:\\n  a = int(input())\\n  if a \\u003e= maximum:\\n    maximum = a\\nprint(maximum)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1616165797000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16401,
    "title": "Lab06_Problem04: Index of maximum",
    "prompt_md": "### Statement\n\nGiven a sequence of non-negative integers, where each number is written in a separate line. The sequence ends with 0. Print the _**position**_ of the _first maximum of the sequence_.\n\n### Example input\n\n```plaintext\n1\n7\n9\n5\n9\n0\n```\n\n###  Example output\n\n```plaintext\n3\n```\n\n \\*\\*\\*Explanation of output: the largest number in the input is 9. In fact, there were two nines. The first nine came at position 3 (the third number) and the second nine came at position 5 (the fifth number). Thus, the output is 3, the FIRST location of the maximum number.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\n9\\n5\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\n9\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n3\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n1\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n2\\n1\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n8\\n9\\n10\\n11\\n7\\n8\\n9\\n10\\n11\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n4\\n3\\n2\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"25\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"80\\n94\\n78\\n67\\n24\\n4\\n22\\n73\\n26\\n38\\n7\\n90\\n37\\n56\\n95\\n37\\n96\\n77\\n51\\n43\\n25\\n91\\n71\\n89\\n99\\n95\\n29\\n87\\n64\\n10\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"maximum = a = int(input())\\nmaximum_index = 1\\ni = 1\\nwhile a != 0:\\n  a = int(input())\\n  i += 1\\n  if a \\u003e maximum:\\n    maximum = a\\n    maximum_index = i\\nprint(maximum_index)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1616165795000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16402,
    "title": "Lab06_Problem02: Average of sequence",
    "prompt_md": "### Statement\n\nGiven a sequence of non-negative integers, where each number is written in a separate line. The sequence ends with 0. Print the _**average**_ of the sequence.\n\n### Example input\n\n```plaintext\n10\n30\n0\n```\n\n###  Example output\n\n```plaintext\n20.0\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"20.0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n30\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1.0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1.5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1234.0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1234\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0.0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n-6\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4.0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2.5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nlength = 0\\nsum_of_sequence = 0\\nwhile a != 0:\\n  sum_of_sequence += a\\n  length += 1\\n  a = int(input())\\nprint(sum_of_sequence / length)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616165791000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16403,
    "title": "Lab06_Problem05: Length of sequence",
    "prompt_md": "### Statement\n\nGiven a sequence of non-negative integers, where each number is written in a separate line. Determine the _**length**_ of the sequence. The sequence ends with 0.\n\nPrint the length of the sequence (not counting the 0). **The numbers following the number 0 should be omitted.**\n\n### Example input\n\n```plaintext\n1\n7\n9\n0\n5\n```\n\n###  Example output\n\n```plaintext\n3\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\n9\\n0\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n0\\n1\\n2\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n2\\n8\\n0\\n1\\n4\\n4\\n3\\n2\\n0\\n5\\n0\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nlength = 0\\nwhile a != 0:\\n  a = int(input())\\n  length += 1\\nprint(length)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1616165796000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16404,
    "title": "Lab06_Problem01: Sum of sequence",
    "prompt_md": "### Statement\n\nGiven a sequence of non-negative integers, where each number is written in a separate line. The sequence ends with 0. Print the sum of the sequence.\n\n### Example input\n\n```plaintext\n1\n7\n9\n0\n```\n\n### Example output\n\n```plaintext\n17\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"17\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\n9\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"11341\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"34\\n2345\\n2345\\n2345\\n2345\\n345\\n3\\n345\\n3\\n345\\n1\\n3\\n424\\n5\\n453\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7883\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7883\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nsum_of_sequence = 0\\n\\nwhile a != 0:\\n  sum_of_sequence += a\\n  a = int(input())\\n  \\nprint(sum_of_sequence)\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1611319819000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16405,
    "title": "Lab06_Problem09: Power of two",
    "prompt_md": "### Statement\n\nFor a given integer X, find the greatest integer **n** where **2ⁿ** is less than or equal to X. Print the exponent value and the result of the expression **2ⁿ**.\n\n### Example input\n\n```plaintext\n50\n```\n\n###  Example output\n\n```plaintext\n5 32\n```\n\nExplanation:\n\nUsing the example above, 50 is the integer X. Your program should find the greatest integer n such that 2 raised to the power of n is less than or equal to X.\n\nThe answer given is 5 32. What does this mean?\n\n5 is the integer n. And 2 raised to the power of 5 results in 32.\n\nConsider the powers of 2:\n\n2^1 = 1\n\n2^2 = 4\n\n2^3 = 8\n\n2^4 = 16\n\n2^5 = 32\n\n2^6 = 64\n\n2^7 = 128\n\nSo when we consider values of n, 1, 2, 3, 4, and 5 all work. Meaning, 2 raised to the power of any of those values are _all_ less than the given X value, 50. And from those values, 5 is the largest, which is our answer. So we print that answer and we also print the result of the expression 2^5.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5 32\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"50\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3 8\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3 8\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2 4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0 1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2 4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2 4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"6 64\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10 1024\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1025\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"23 8388608\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"15431543\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x = int(input())\\nn = 1\\nwhile 2 ** n \\u003c= x:\\n  n += 1\\nprint(n - 1, 2 ** (n - 1))\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1616165815000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16406,
    "title": "Lab06_Problem07: List of squares",
    "prompt_md": "### Statement\n\nFor a given integer N, print all the squares of positive integers where the square is less than or equal to N, in ascending order.\n\n### Example input\n\n```plaintext\n50\n```\n\n###  Example output\n\n```plaintext\n1 4 9 16 25 36 49\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 4 9 16 25 36 49\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"50\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 4 9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 4 9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"9\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 4 9 16 25 36 49 64 81 100\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 4 9 16 25 36 49 64 81\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"99\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"n = int(input())\\ni = 1\\nwhile i ** 2 \\u003c= n:\\n  print(i ** 2, end=' ')\\n  i += 1\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616165812000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16407,
    "title": "Lab05_Problem10: Sort three numbers",
    "prompt_md": "### Statement\n\nGiven three integers, print them in ascending order.\n\n### Example input\n\n```plaintext\n5\n3\n7\n```\n\n### Example output\n\n```plaintext\n3\n5\n7\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\\n5\\n7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n3\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n6\\n9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"9\\n6\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10\\n20\\n30\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n20\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\\n60\\n80\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"60\\n0\\n80\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"20\\n40\\n50\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"50\\n20\\n40\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"400\\n550\\n700\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"400\\n700\\n550\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"29\\n100\\n320\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"29\\n320\\n100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n23\\n92\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"92\\n1\\n23\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nb = int(input())\\nc = int(input())\\n\\nif a \\u003c= b \\u003c= c:\\n  print(a, b, c, end='\\\\n')\\nelif a \\u003c= c \\u003c= b:\\n  print(a, c, b, end='\\\\n')\\nelif b \\u003c= a \\u003c= c:\\n  print(b, a, c, end='\\\\n')\\nelif b \\u003c= c \\u003c= a:\\n  print(b, c, a, end='\\\\n')\\nelif c \\u003c= a \\u003c= b:\\n  print(c, a, b, end='\\\\n')\\nelse:\\n  print(c, b, a, end='\\\\n')\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1614889518000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16408,
    "title": "Lab05_Problem12: Vertices of rectangle",
    "prompt_md": "## Statement\n\nGiven integer coordinates of three vertices of a rectangle whose sides are parallel to coordinate axes, find the coordinates of the fourth vertex of the rectangle.\n\nHINT: as with many of these problems, this is a THINKING problem…you have to draw the three points on a piece of paper and then think about it. Given those three points, how can you deduce the final vertix/point…\n\n### Example input #1\n\n```plaintext\n1\n5\n7\n5\n1\n10\n```\n\nthree vertices are (1, 5), (7, 5), (1, 10)\n\n### Example output #1\n\n```plaintext\n7\n10\n```\n\n### Example input #2\n\n```plaintext\n1\n5\n7\n10\n1\n10\n```\n\n###  Example output #2\n\n```plaintext\n7\n5\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\\n10\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n5\\n7\\n5\\n1\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\\n5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n5\\n7\\n10\\n1\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n5\\n1\\n10\\n7\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n10\\n7\\n5\\n7\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"20\\n100\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"50\\n100\\n50\\n200\\n20\\n200\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"50\\n100\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"20\\n100\\n20\\n200\\n50\\n200\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"20\\n200\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"50\\n100\\n20\\n100\\n50\\n200\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"50\\n200\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"50\\n100\\n20\\n200\\n20\\n100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x1 = int(input())\\ny1 = int(input())\\nx2 = int(input())\\ny2 = int(input())\\nx3 = int(input())\\ny3 = int(input())\\n\\nif x1 == x2:\\n  x4 = x3\\nelif x1 == x3:\\n  x4 = x2\\nelse:\\n  x4 = x1\\n  \\nif y1 == y2:\\n  y4 = y3\\nelif y1 == y3:\\n  y4 = y2\\nelse:\\n  y4 = y1\\n  \\nprint(x4)\\nprint(y4)\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1614889519000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16409,
    "title": "Lab05_Problem11: Minimum of five numbers",
    "prompt_md": "## Statement\n\nGiven five integers, print the least of them.\n\n### Example input\n\n```plaintext\n10\n20\n30\n40\n50\n```\n\n###  Example output\n\n```plaintext\n10\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n20\\n30\\n40\\n50\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"11\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"15\\n16\\n17\\n11\\n12\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"11\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"21\\n11\\n31\\n41\\n51\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"47\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"48\\n49\\n47\\n50\\n55\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n20\\n30\\n40\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"20\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\\n200\\n300\\n20\\n400\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"15\\n16\\n17\\n11\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"15\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"16\\n15\\n17\\n21\\n22\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"16\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"18\\n19\\n16\\n17\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"18\\n19\\n5\\n3\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"least = int(input())\\n\\nnew_integer = int(input())\\nif new_integer \\u003c least:\\n  least = new_integer\\n\\nnew_integer = int(input())\\nif new_integer \\u003c least:\\n  least = new_integer\\n  \\nnew_integer = int(input())\\nif new_integer \\u003c least:\\n  least = new_integer\\n  \\nnew_integer = int(input())\\nif new_integer \\u003c least:\\n  least = new_integer\\n  \\nprint(least)\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1614889522000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16410,
    "title": "Lab05_Problem09: Next day",
    "prompt_md": "## Statement\n\nGiven a month (an integer from 1 to 12) and a day in it (an integer from 1 to 31) in the year 2017, print the month and the day of the next day to it. Note that 2017 is _not_ a leap year, which makes this problem a bit easier.\n\n### Example input #1\n\n```plaintext\n3\n30\n```\n\n(March 30)\n\n### Example output #1\n\n```plaintext\n3\n31\n```\n\n###  Example input #2\n\n```plaintext\n3\n31\n```\n\n(March 31)\n\n### Example output #2\n\n```plaintext\n4\n1\n```\n\n(April 1)",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\\n31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n31\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5\\n16\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n15\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\\n23\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n22\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\\n9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n31\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\\n28\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n27\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n28\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\\n2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\\n30\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n29\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"13\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5\\n31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"14\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"6\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n31\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"15\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"6\\n30\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n29\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"16\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"17\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\\n31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"18\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"8\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n31\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"19\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"8\\n31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"20\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n31\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"21\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\\n30\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"9\\n29\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"22\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"9\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"23\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10\\n31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"24\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"11\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n31\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"25\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"11\\n30\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"11\\n29\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"26\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"12\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"11\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"27\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"12\\n31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12\\n30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"28\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12\\n31\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"month = int(input())\\nday = int(input())\\n\\nif ((day == 30) and (month == 4 or month == 6 or month == 9 or month == 11)\\n    or (day == 28) and (month == 2)\\n    or (day == 31)):\\n  month += 1\\n  day = 1\\nelse:\\n  day += 1\\nif month == 13:\\n  month = 1\\n\\nprint(month)\\nprint(day)\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1614889515000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16411,
    "title": "Lab05_Problem08: Knight move",
    "prompt_md": "## Statement\n\nChess knight can move to a square that is two squares away horizontally and one square vertically, or two squares vertically and one square horizontally. The complete move therefore looks like the letter _L_. Given two different squares of the chessboard, determine whether a knight can go from the first square to the second one in a single move.\n\nThe program receives four numbers from 1 to 8 each specifying the column and the row number, first two - for the first square, and the last two - for the second square. The program should output YES if a knight can go from the first square to the second one in a single move or NO otherwise.\n\n![](http://i.imgur.com/lzDMi1m.png)\n\n### Example input\n\n```plaintext\n2\n4\n3\n2\n```\n\n###  Example output\n\n```plaintext\nYES\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n4\\n3\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n8\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n2\\n4\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n8\\n3\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n8\\n3\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n5\\n3\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n4\\n2\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n7\\n6\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n5\\n2\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n3\\n3\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n1\\n4\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"13\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n2\\n8\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x1 = int(input())\\ny1 = int(input())\\nx2 = int(input())\\ny2 = int(input())\\n\\ndx = abs(x1 - x2)\\ndy = abs(y1 - y2)\\n\\nif dx == 1 and dy == 2 or dx == 2 and dy == 1:\\n  print('YES')\\nelse:\\n  print('NO')\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1612465009000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16412,
    "title": "Lab05_Problem07: Queen move",
    "prompt_md": "## Statement\n\nChess queen moves horizontally, vertically or diagonally in any number of squares. Given two different squares of the chessboard, determine whether a queen can go from the first square to the second one in a single move.\n\nThe program receives four numbers from 1 to 8 each specifying the column and the row number, first two - for the first square, and the last two - for the second square. The program should output YES if a queen can go from the first square to the second one in a single move or NO otherwise.\n\n![](http://i.imgur.com/D4O2iuo.png)\n\n### Example input\n\n```plaintext\n1\n1\n2\n2\n```\n\n###  Example output\n\n```plaintext\nYES\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n2\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n2\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n6\\n3\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n3\\n1\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n5\\n2\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n6\\n5\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n7\\n6\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n7\\n4\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n4\\n2\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n5\\n1\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n4\\n5\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n5\\n7\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"13\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n2\\n5\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"14\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"15\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n1\\n1\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x1 = int(input())\\ny1 = int(input())\\nx2 = int(input())\\ny2 = int(input())\\n\\nif x1 == x2 or y1 == y2 or abs(x1 - x2) == abs(y1 - y2):\\n  print('YES')\\nelse:\\n  print('NO')\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1614889504000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16413,
    "title": "Lab05_Problem06: Bishop move",
    "prompt_md": "## Statement\n\nChess bishop moves diagonally in any number of squares. Given two different squares of the chessboard, determine whether a bishop can go from the first square to the second one in a single move.\n\nThe program receives four numbers from 1 to 8 each specifying the column and the row number, first two - for the first square, and the last two - for the second square. The program should output YES if a bishop can go from the first square to the second one in a single move or NO otherwise.\n\n![](http://i.imgur.com/45QwBkN.png)\n\n### Example input\n\n```plaintext\n4\n4\n5\n5\n```\n\n###  Example output\n\n```plaintext\nYES\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n5\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n5\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n5\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n4\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n3\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n4\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n3\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n3\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n8\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n8\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n8\\n8\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"13\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n8\\n8\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"14\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n8\\n1\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"15\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n8\\n8\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"16\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n8\\n1\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"17\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"18\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n2\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"19\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n6\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"20\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n6\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x1 = int(input())\\ny1 = int(input())\\nx2 = int(input())\\ny2 = int(input())\\n\\nif abs(x1 - x2) == abs(y1 - y2):\\n  print('YES')\\nelse:\\n  print('NO')\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1612462051000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16414,
    "title": "Lab05_Problem05: King move",
    "prompt_md": "## Statement\n\nChess king moves one square in any direction. Given two different squares of the chessboard, determine whether a king can go from the first square to the second one in a single move.\n\nThe program receives four numbers from 1 to 8 each specifying the column and the row number, first two - for the first square, and the last two - for the second square. The program should output YES if a king can go from the first square to the second one in a single move or NO otherwise.\n\n![](http://i.imgur.com/2wNxWMG.png)\n\n### Example input\n\n```plaintext\n4\n4\n5\n5\n```\n\n### Example output\n\n```plaintext\nYES\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n5\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n5\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n5\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n4\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n3\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n4\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n3\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n3\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n8\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n8\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n8\\n8\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"13\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n8\\n8\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"14\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n8\\n1\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"15\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n8\\n8\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"16\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"17\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n2\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"18\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n2\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"19\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n6\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"20\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\n1\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x1 = int(input())\\ny1 = int(input())\\nx2 = int(input())\\ny2 = int(input())\\n\\nif abs(x1 - x2) \\u003c= 1 and abs(y1 - y2) \\u003c= 1:\\n  print('YES')\\nelse:\\n  print('NO')\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1612460911000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16415,
    "title": "Lab05_Problem04: Chessboard - same color",
    "prompt_md": "## Statement\n\nGiven two squares of a chessboard. If they are painted in the same color, print `YES`, otherwise print `NO`.\n\nThe program receives four integers from 1 to 8, each specifying the column and row number, first two - for the first square, and then the last two - for the second square.\n\n![](http://i.imgur.com/iLmObtC.png)\n\n### Example input\n\n```plaintext\n1\n1\n2\n6\n```\n\n### Example output\n\n```plaintext\nYES\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n2\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n2\\n2\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n2\\n2\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n3\\n3\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n3\\n7\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n3\\n8\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n7\\n5\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n6\\n3\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n3\\n4\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n3\\n4\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n2\\n2\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n6\\n7\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x1 = int(input())\\ny1 = int(input())\\nx2 = int(input())\\ny2 = int(input())\\n\\nif (x1 + y1) % 2 == (x2 + y2) % 2:\\n  print('YES')\\nelse:\\n  print('NO')\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1612460077000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16416,
    "title": "Lab05_Problem01: Equal numbers",
    "prompt_md": "## Statement\n\nGiven three integers. Determine how many of them are equal to each other. The program must print one of the numbers: 3 (if all are same), 2 (if two of them are equal to each other and the third one is different) or 0 (if all numbers are different).\n\n## Example input\n\n```plaintext\n10\n5\n10\n```\n\n Example output\n\n```plaintext\n2\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n5\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"17\\n17\\n-9\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n-82\\n-82\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n2\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-149\\n-146\\n-142\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"666\\n666\\n666\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nb = int(input())\\nc = int(input())\\n\\nif a == b and a == c:\\n  print(3)\\nelif a == b or a == c or b == c:\\n  print(2)\\nelse:\\n  print(0)\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1612456117000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16417,
    "title": "Lab05_Problem02: Order of outlier",
    "prompt_md": "## Statement\n\nGiven three integers, in which two are equal to each other and the third one is different. Print the order number of this different one --- 1, 2 or 3.\n\n### Example input #1\n\n```plaintext\n10\n5\n10\n```\n\n###  Example output #1\n\n```plaintext\n2\n```\n\n\\*This means the 2nd number was the different one.\n\n### Example input #2\n\n```plaintext\n10\n10\n5\n```\n\n###  Example output #2\n\n```plaintext\n3\n```\n\n\\*Here, the 3rd number was the different one.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n5\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n10\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n10\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n7\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n19\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"14\\n14\\n22\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"90\\n75\\n75\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"54\\n32\\n54\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nb = int(input())\\nc = int(input())\\n\\nif b == c:\\n  print(1)\\nelif a == c:\\n  print(2)\\nelse:\\n  print(3)\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1612459717000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16418,
    "title": "Lab05_Problem03: Chessboard - black square",
    "prompt_md": "## Statement\n\nGiven a square of a chessboard. If it's a black square, print YES, otherwise print NO.\n\nThe program receives two integers from 1 to 8 specifying the column and row number of the square.\n\n![](http://i.imgur.com/z5rz8pa.png)\n\n### Example input #1\n\n```plaintext\n1\n1\n```\n\n###  Example output #1\n\n```plaintext\nYES\n```\n\n###  Example input #2\n\n```plaintext\n1\n2\n```\n\n###  Example output #2\n\n```plaintext\nNO\n```\n\n####  \\*\\*\\*Hint:\n\n*   the code on this one is VERY EASY.....BUT…\n*   you must FIRST think about the problem and how to get the solution\n*   **Coding without understanding the solution is 100% a waste of your time.**\n*   With respect to the colors of a given square, WHEN is a square black and when is it white?\n*   Pay attention to the column and row indices…\n*   Draw it out.\n*   Think it out.\n*   Once you are sure of the solution, the code takes 30 seconds.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"13\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"14\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"15\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"16\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"17\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"18\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x1 = int(input())\\ny1 = int(input())\\n\\nif (x1 + y1) % 2 == 0:\\n  print('YES')\\nelse:\\n  print('NO')\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1614889496000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16419,
    "title": "Lab04_Problem13: Random Card",
    "prompt_md": "## Statement\n\nWrite a program that simulates picking a card from a deck of 52 cards. Your program should display the rank (Ace, 2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen, King) and suit (Clubs, Diamonds, Hearts, Spades) of the card.\n\n### Sample Run #1\n\n```plaintext\nEnter the \"seed\" value: 85\n------------------------------------------------\n|            Pick a Card, Any Card!            |\n------------------------------------------------\nWe will generate for you a random card\nfrom a standard deck of 52 cards!\n\nPress the \"Enter\" key to see your card...\n\nYour card is the 4 of Clubs.\n```\n\n\\*\\*\\*User input is simply the “seed value\" and the pressing of the “Enter” button.\n\n\\*\\*\\*\\*\\*Note that the user's pressing of the “Enter” button cannot really be displayed, as there is nothing to see.\n\nHOWEVER, your program should PAUSE after the words \"see your card...\"\n\nHow do you pause? You use the input() command in your code. Remember, that this command PAUSES the program and waits for user input. You have simply instructed the user to type nothing, and even if they type something before pressing “Enter”, your program can simply chose not to save that input anyway. Thus, this usage of input() works to pause the program, and the user simply hits the Enter key to proceed.\n\n### Sample Run #2\n\n```plaintext\nEnter the \"seed\" value: 56184\n------------------------------------------------\n|            Pick a Card, Any Card!            |\n------------------------------------------------\nWe will generate for you a random card\nfrom a standard deck of 52 cards!\n\nPress the \"Enter\" key to see your card...\n\nYour card is the 10 of Diamonds.\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"import random\\nseed_value = int(input(\\\"Enter the \\\\\\\"seed\\\\\\\" value: \\\"))\\nrandom.seed(seed_value)\\n\\nprint(\\\"------------------------------------------------\\\")\\nprint(\\\"|            Pick a Card, Any Card!            |\\\")\\nprint(\\\"------------------------------------------------\\\")\\n\\n# Do NOT change the code above. If you do, your program will NOT work.\\n\\n# continue your code below...\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the \\\"seed\\\" value: \\n------------------------------------------------\\n|            Pick a Card, Any Card!            |\\n------------------------------------------------\\nWe will generate for you a random card\\nfrom a standard deck of 52 cards!\\n\\nPress the \\\"Enter\\\" key to see your card...\\n\\nYour card is the 7 of Clubs.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"958624\\n\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the \\\"seed\\\" value: \\n------------------------------------------------\\n|            Pick a Card, Any Card!            |\\n------------------------------------------------\\nWe will generate for you a random card\\nfrom a standard deck of 52 cards!\\n\\nPress the \\\"Enter\\\" key to see your card...\\n\\nYour card is the 3 of Hearts.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"561654\\n\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the \\\"seed\\\" value: \\n------------------------------------------------\\n|            Pick a Card, Any Card!            |\\n------------------------------------------------\\nWe will generate for you a random card\\nfrom a standard deck of 52 cards!\\n\\nPress the \\\"Enter\\\" key to see your card...\\n\\nYour card is the Ace of Diamonds.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"651654\\n\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Name: Dr Jonathan Cazalas\\n#\\n# CSC 2280: Lab 4 - Pick a Card, Any Card!\\n\\nimport random\\nseed_value = int(input(\\\"Enter the \\\\\\\"seed\\\\\\\" value: \\\"))\\nrandom.seed(seed_value)\\n\\nprint(\\\"------------------------------------------------\\\")\\nprint(\\\"|            Pick a Card, Any Card!            |\\\")\\nprint(\\\"------------------------------------------------\\\")\\nprint(\\\"We will generate for you a random card\\\")\\nprint(\\\"from a standard deck of 52 cards!\\\\n\\\")\\nprint(\\\"Press the \\\\\\\"Enter\\\\\\\" key to see your card...\\\")\\n\\n# the following input simply serves to pause the program\\n# it waits for the user to input anything (or nothing)\\n# and then pushes the Enter key\\ninput()\\n\\nnumber = random.randint(1, 13)\\nsuit = random.randint(1, 4)\\n\\n# Check out this solution, which is specific to Python.\\n# With Python, the \\\"type\\\" of a variable can change.\\n# At this point, the variable number is clearly storing integers.\\n# But look at what we can do...\\nif number == 1:\\n    number = \\\"Ace\\\"\\nelif number == 11:\\n    number = \\\"Jack\\\"\\nelif number == 12:\\n    number = \\\"Queen\\\"\\nelif number == 13:\\n    number = \\\"King\\\"\\n\\n# Now we use the same idea to save the suit as a String\\nif suit == 1:\\n    suit = \\\"Clubs\\\"\\nelif suit == 2:\\n    suit = \\\"Diamonds\\\"\\nelif suit == 3:\\n    suit = \\\"Hearts\\\"\\nelse:\\n    suit = \\\"Spades\\\"\\n\\nprint(\\\"Your card is the {} of {}.\\\".format(number, suit))\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"import random\\nseed_value = int(input(\\\"Enter the \\\\\\\"seed\\\\\\\" value: \\\"))\\nrandom.seed(seed_value)\\n\\nprint(\\\"------------------------------------------------\\\")\\nprint(\\\"|            Pick a Card, Any Card!            |\\\")\\nprint(\\\"------------------------------------------------\\\")\\n\\n# Do NOT change the code above. If you do, your program will NOT work.\\n\\n# continue your code below...\\n\"],\"t\":1614277827000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16420,
    "title": "Lab09_Problem08: Sum Range",
    "prompt_md": "\n# Statement\n\nWrite a function that calculates the sum of the multiples of 5 within the range a to b inclusive (including b) and then returns that sum.\n\n\n\n# Returns:\n\n```\nan integer\n```\n\n\n\n# Name:\n\n```\nsum_fives_range\n```\n\n\n\n# Parameters:\n\n```\nan integer called \"a\" that represents the beginning of the range\nan integer called \"b\" that represents the end of the range\n```\n\n\n\n# Examples:\n\n```\nsumFivesRange(5,15)  ==> 30\nsumFivesRange(11,28) ==> 60\n```\n\n\n\n",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Write function here\\n\\ndef main():\\n    print(sum_fives_range(5, 15))\\n    print(sum_fives_range(11, 28))\\n\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"unit_test\",\"title\":\"sum_fives_range\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"py3_unittest\",\"unitTestCode\":\"from main import *\\n\\nimport unittest\\n\\nclass CodingRoomsUnitTests(unittest.TestCase):\\n\\n  def test_sum_fives_range(self):\\n    self.assertEquals(sum_fives_range(231, 8944), 7991425)\\n    self.assertEquals(sum_fives_range(4, 10), 15)\\n    self.assertEquals(sum_fives_range(10, 10), 10)\\n    self.assertEquals(sum_fives_range(400, 10000), 9989200)\\n    self.assertEquals(sum_fives_range(2039, 85483), 730310640)\\n\\n\",\"unitTestFilePath\":\"coding_rooms_unit_tests.py\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def sum_fives_range(num1, num2):\\n    sum = 0\\n    for i in range(num1, num2 + 1):\\n        if i % 5 == 0:\\n            sum += i\\n    return sum\\n\\ndef main():\\n    print(sum_fives_range(231, 8944))\\n    print(sum_fives_range(4, 10))\\n\\nmain()\\n\\n\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Write function here\\n\\ndef main():\\n    print(sum_fives_range(5, 15))\\n    print(sum_fives_range(11, 28))\\n\\nmain()\"],\"t\":1618115102000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16421,
    "title": "Lab04_Problem12: Heads or Tails",
    "prompt_md": "## Statement\n\nWrite a program that lets the user guess whether a flipped coin displays heads or tails. The program randomly generates an integer 0 or 1, which represents heads or tails. The program prompts the user to enter a guess and then reports whether the guess is correct or incorrect.\n\nNote: The FIRST input the user will give is a seed value to \"seed\" the random number generator. In fact, that has already been coded for you. Do _not_ change that code. You need to code up the remainder of the program.\n\n### Sample Run #1\n\n```plaintext\nEnter the \"seed\" value: 5\n------------------------------------------------\n|                Heads or Tails                |\n------------------------------------------------\nCan you guess the computer's choice?\nGive it a shot!\n\nYou can enter 1 (for heads) or 2 (for tails).\nPlease enter your choice: 1\nSorry, the computer chose tails.\n```\n\n\\*\\*\\*User input in the example above is simply the “5” and the “1”.\n\n### Sample Run #2\n\n```plaintext\nEnter the \"seed\" value: 86\n------------------------------------------------\n|                Heads or Tails                |\n------------------------------------------------\nCan you guess the computer's choice?\nGive it a shot!\n\nYou can enter 1 (for heads) or 2 (for tails).\nPlease enter your choice: 1\nCorrect! The computer chose heads.\n```\n\n###  Sample Run #3\n\n```plaintext\nEnter the \"seed\" value: 89\n------------------------------------------------\n|                Heads or Tails                |\n------------------------------------------------\nCan you guess the computer's choice?\nGive it a shot!\n\nYou can enter 1 (for heads) or 2 (for tails).\nPlease enter your choice: 2\nSorry, the computer chose heads.\n```\n\n###  Sample Run #4\n\n```plaintext\nEnter the \"seed\" value: 44\n------------------------------------------------\n|                Heads or Tails                |\n------------------------------------------------\nCan you guess the computer's choice?\nGive it a shot!\n\nYou can enter 1 (for heads) or 2 (for tails).\nPlease enter your choice: 2\nCorrect! The computer chose tails.\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"import random\\nseed_value = int(input(\\\"Enter the \\\\\\\"seed\\\\\\\" value: \\\"))\\nrandom.seed(seed_value)\\n\\nprint(\\\"------------------------------------------------\\\")\\nprint(\\\"|                Heads or Tails                |\\\")\\nprint(\\\"------------------------------------------------\\\")\\n\\n# do NOT change the code above. If you do, your program will NOT work.\\n\\n# Continue the code here...\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the \\\"seed\\\" value: \\n------------------------------------------------\\n|                Heads or Tails                |\\n------------------------------------------------\\nCan you guess the computer's choice?\\nGive it a shot!\\n\\nYou can enter 1 (for heads) or 2 (for tails).\\nPlease enter your choice: \\nCorrect! The computer chose tails.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"588\\n2\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the \\\"seed\\\" value: \\n------------------------------------------------\\n|                Heads or Tails                |\\n------------------------------------------------\\nCan you guess the computer's choice?\\nGive it a shot!\\n\\nYou can enter 1 (for heads) or 2 (for tails).\\nPlease enter your choice: \\nSorry, the computer chose heads.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"777\\n2\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the \\\"seed\\\" value: \\n------------------------------------------------\\n|                Heads or Tails                |\\n------------------------------------------------\\nCan you guess the computer's choice?\\nGive it a shot!\\n\\nYou can enter 1 (for heads) or 2 (for tails).\\nPlease enter your choice: \\nSorry, the computer chose tails.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"923\\n1\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the \\\"seed\\\" value: \\n------------------------------------------------\\n|                Heads or Tails                |\\n------------------------------------------------\\nCan you guess the computer's choice?\\nGive it a shot!\\n\\nYou can enter 1 (for heads) or 2 (for tails).\\nPlease enter your choice: \\nCorrect! The computer chose heads.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"845\\n1\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Name: Dr Jonathan Cazalas\\n#\\n# CSC 2280: Lab 4 - Heads or Tails\\n\\nimport random\\nseed_value = int(input(\\\"Enter the \\\\\\\"seed\\\\\\\" value: \\\"))\\nrandom.seed(seed_value)\\n\\nprint(\\\"------------------------------------------------\\\")\\nprint(\\\"|                Heads or Tails                |\\\")\\nprint(\\\"------------------------------------------------\\\")\\nprint(\\\"Can you guess the computer's choice?\\\")\\nprint(\\\"Give it a shot!\\\\n\\\")\\nprint(\\\"You can enter 1 (for heads) or 2 (for tails).\\\")\\nprint(\\\"Please enter your choice: \\\", end = '')\\n\\nuser_guess = int(input())\\n\\ncpu_flip = random.randint(1, 2)\\n\\nif cpu_flip == 1:\\n    if user_guess == 1:\\n        print(\\\"Correct! The computer chose heads.\\\")\\n    else:\\n        print(\\\"Sorry, the computer chose heads.\\\")\\nelse:\\n    if user_guess == 1:\\n        print(\\\"Sorry, the computer chose tails.\\\")\\n    else:\\n        print(\\\"Correct! The computer chose tails.\\\")\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"import random\\nseed_value = int(input(\\\"Enter the \\\\\\\"seed\\\\\\\" value: \\\"))\\nrandom.seed(seed_value)\\n\\nprint(\\\"------------------------------------------------\\\")\\nprint(\\\"|                Heads or Tails                |\\\")\\nprint(\\\"------------------------------------------------\\\")\\n\\n# do NOT change the code above. If you do, your program will NOT work.\\n\\n# Continue the code here...\\n\"],\"t\":1614277823000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16422,
    "title": "Lab04_Problem10: Rook move",
    "prompt_md": "## Statement\n\nChess rook moves horizontally or vertically. Given two different squares of the chessboard, determine whether a rook can go from the first square to the second one in a single move.\n\nThe program receives four numbers from 1 to 8 each specifying the column and the row number, first two - for the first square, and the last two - for the second square. The program should output `YES` if a rook can go from the first square to the second one in a single move or `NO` otherwise.\n\n![](http://i.imgur.com/fBevTRT.png)\n\n### Example input\n\n```plaintext\n4\n4\n5\n5\n```\n\n###  Example output\n\n```plaintext\nNO\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n5\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n5\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n5\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n4\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n3\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n4\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n3\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n3\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n8\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n8\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n8\\n8\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x1 = int(input())\\ny1 = int(input())\\nx2 = int(input())\\ny2 = int(input())\\n\\nif x1 == x2 or y1 == y2:\\n  print('YES')\\nelse:\\n  print('NO')\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1612458878000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16423,
    "title": "Lab04_Problem09: Days in month",
    "prompt_md": "## Statement\n\nGiven a month - an integer from 1 to 12, print the number of days in it in the year 2017.\n\n### Example input #1\n\n```plaintext\n1\n```\n\n(January)\n\n### Example output #1\n\n```plaintext\n31\n```\n\n###  Example input #2\n\n```plaintext\n2\n```\n\n(February)\n\n### Example output #2\n\n```plaintext\n28\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"28\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"30\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"30\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"30\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"9\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"30\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"11\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"month = int(input())\\nif month == 2:\\n  print(28)\\nelif month == 4 or month == 6 or month == 9 or month == 11:\\n  print(30)\\nelse:\\n  print(31)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1614277818000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16424,
    "title": "Lab04_Problem08: Minimum of three numbers",
    "prompt_md": "## Statement\n\nGiven three integers, print the least of them.\n\n### Example input\n\n```plaintext\n5\n3\n7\n```\n\n###  Example output\n\n```plaintext\n3\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n3\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n30\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-5\\n-3\\n-3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n10\\n20\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"11\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"74\\n32\\n11\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"25\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"50\\n80\\n25\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nb = int(input())\\nc = int(input())\\n\\nif a \\u003c b and a \\u003c c:\\n  print(a)\\nelif b \\u003c a and b \\u003c c:\\n  print(b)\\nelse:\\n  print(c)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1614277811000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16425,
    "title": "Lab04_Problem07: Four-digit palindrome",
    "prompt_md": "## Statement\n\nLet's call an integer a _palindrome_ if it remains the same after reading its digits from right to left. Given a four-digit integer, print \"YES\" if it's a palindrome and print \"NO\" otherwise.\n\nHINT:\n\n*   don't you know how to extract the individual digits, such as the digit in the ones place, the tens place, the hundreds place, and so on?\n*   You did that last week!\n*   Now, with those individual digits extracted and available to you, compare them…\n\n### Example input #1\n\n```plaintext\n1221\n```\n\n###  Example output #1\n\n```plaintext\nYES\n```\n\n###  Example input #2\n\n```plaintext\n1234\n```\n\n###  Example output #2\n\n```plaintext\nNO\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1221\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1234\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4884\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4882\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4824\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8008\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8001\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8011\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x = int(input())\\nthousands = x // 1000\\nhundreds = x // 100 % 10\\ntens = x // 10 % 10\\nunits = x % 10\\nif thousands == units and hundreds == tens:\\n  print('YES')\\nelse:\\n  print('NO')\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1614277810000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16426,
    "title": "Lab04_Problem06: Ascending digits",
    "prompt_md": "## Statement\n\nGiven a three-digit integer X consisting of three different digits, print \"YES\" if its three digits are going in ascending order from left to right and print \"NO\" otherwise.\n\n### Example input #1\n\n```plaintext\n179\n```\n\n###  Example output #1\n\n```plaintext\nYES\n```\n\n###  Example input #2\n\n```plaintext\n197\n```\n\n###  Example output #2\n\n```plaintext\nNO\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"197\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"348\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"963\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"725\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"301\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"149\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"356\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"279\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"406\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x = int(input())\\nhundreds = x // 100\\ntens = x // 10 % 10\\nunits = x % 10\\nif hundreds \\u003c tens and tens \\u003c units:\\n  print('YES')\\nelse:\\n  print('NO')\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1614277808000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16427,
    "title": "Lab04_Problem05: Single positive",
    "prompt_md": "## Statement\n\nGiven two non-zero integers, print \"YES\" if **exactly one of them** is positive and print \"NO\" otherwise.\n\n### Example input #1\n\n```plaintext\n-5\n10\n```\n\n###  Example output #1\n\n```plaintext\nYES\n```\n\n###  Example input #2\n\n```plaintext\n5\n10\n```\n\n###  Example output #2\n\n```plaintext\nNO\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-5\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-7\\n-9\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12\\n-9\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-6\\n19\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n11\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"11\\n19\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-5\\n-22\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nb = int(input())\\nif a \\u003e 0 and b \\u003c 0 or a \\u003c 0 and b \\u003e 0:\\n  print('YES')\\nelse:\\n  print('NO')\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1614277806000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16428,
    "title": "Lab04_Problem04: Three-digit number",
    "prompt_md": "## Statement\n\nGiven an integer, print \"YES\" if it's a three-digit number and print \"NO\" otherwise.\n\nFirst reaction: \"What??? How do I possibly check for that!?!\"\n\nPause. Breathe. And now ask yourself: \"What are the possible three-digit numbers?\" And then, \"Now, how can you check if a number is in fact a three-digit number?\"\n\n### Example input #1\n\n```plaintext\n179\n```\n\n###  Example output #1\n\n```plaintext\nYES\n```\n\n###  Example input #2\n\n```plaintext\n1234\n```\n\n###  Example output #2\n\n```plaintext\nNO\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8912\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1234\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"99\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"999\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"238\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1000\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12912\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nif a \\u003e= 100 and a \\u003c 1000:\\n  print('YES')\\nelse:\\n  print('NO')\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1614277798000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16429,
    "title": "Lab07_Problem11: Greater than previous",
    "prompt_md": "## Statement\n\nGiven a sequence of non-negative integers, where each number is written in a separate line. The sequence ends with 0. Print the number of elements of the sequence that are greater than their neighbor above.\n\n### Example input\n\n```plaintext\n1\n2\n3\n4\n5\n0\n```\n\n###  Example output\n\n```plaintext\n4\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n5\\n5\\n5\\n5\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n5\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"345354\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n465\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n5\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\n9\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n5\\n2\\n4\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n4\\n3\\n2\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n5\\n1\\n5\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n1\\n5\\n1\\n5\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"prev = next = int(input())\\ncounter = 0\\nwhile next != 0:\\n  if prev \\u003c next:\\n    counter += 1\\n  prev, next = next, int(input())\\nprint(counter)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771758000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16430,
    "title": "Lab03_Problem13_DiapersOrCoffee",
    "prompt_md": "## Statement\n\nThe struggle is real! Your friend just had a baby and is now realizing these little suckers cost a lot of money! Each box of diapers is, unfortunately, cutting into the coffee budget, which means the Starbucks ritual may have to soon stop! The positive is that those venti caramel Frappuccinos weren’t exactly ideal for the waistline either (490 calories each!).\n\nHelp your friend realize this is a good thing by writing them a program. Your program should ask how many diapers are being used, the cost of a dozen diapers, and the cost of a venti caramel Frappuccino. From this, you will calculate how many fewer caramel Frappuccino will be consumed, along with a calculated estimated weight loss.\n\nNote that 1 lb = 3500 calories.\n\n## Sample run of program:\n\n```plaintext\nWhat is the cost of a dozen diapers:  3.25\nHow many diapers does the baby go through a day:  6\nWhat is the cost of a single caramel frappuccino:  4.95\nYou will spend $48.75 on diapers in a month.\nYou will drink 10 fewer caramel frappuccino in a month.\nAs a result, you will lose 1.40 pounds in a month.\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# CSC 2280: Lab 3 - Weekly Problems - (Diapers or Coffee???)\\n#           Silly problem about diapers, frappuccinos, where should the money go,\\n#           and even the weight loss occurring as a result!\\n\\n# Import any necessary libraries\\nimport math\\n# You need this, because you WILL NEED to use math.ceil in your program\\n\\n# CONSTANTS used in program\\nDAYS_PER_MONTH = 30\\nCALS_PER_LB = 3500\\nCALS_LOST_PER_FRAPPUCCINO = 490\\nDOZEN = 12\\n\\n# Write your code below\\n# | | | | | | | | | | |\\n# v v v v v v v v v v v\\n\\n# GET INPUT FROM USER\\n# Write 3 lines of code to get the input from the user\\n# ERASE this line and put those three lines here.\\n\\n# PERFORM CALCULATIONS\\ndiaper_cost_per_month = # complete this RIGHT side of the assignment statement\\n                        # by giving an equation that computes the TOTAL diaper cost per month\\nfewer_fraps = # Use math.ceil in an equation to determine the number of fewer fraps consumed\\n\\n# OUTPUT\\n# ERASE this line and type the various print statements of output here.\",\"defaultFilePath\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"What is the cost of a dozen diapers:  \\nHow many diapers does the baby go through a day:  \\nWhat is the cost of a single caramel frappuccino:  \\nYou will spend $99.00 on diapers in a month.\\nYou will drink 18 fewer caramel frappuccino in a month.\\nAs a result, you will lose 2.52 pounds in a month.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4.95\\n8\\n5.50\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"What is the cost of a dozen diapers:  \\nHow many diapers does the baby go through a day:  \\nWhat is the cost of a single caramel frappuccino:  \\nYou will spend $87.50 on diapers in a month.\\nYou will drink 16 fewer caramel frappuccino in a month.\\nAs a result, you will lose 2.24 pounds in a month.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3.50\\n10\\n5.79\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"What is the cost of a dozen diapers:  \\nHow many diapers does the baby go through a day:  \\nWhat is the cost of a single caramel frappuccino:  \\nYou will spend $48.75 on diapers in a month.\\nYou will drink 10 fewer caramel frappuccino in a month.\\nAs a result, you will lose 1.40 pounds in a month.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3.25\\n6\\n4.95\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# CSC 2280: Lab 3 - Weekly Problems - (Diapers or Coffee???)\\n#           Silly problem about diapers, frappuccinos, where should the money go,\\n#           and even the weight loss occurring as a result!\\n\\n# Import any necessary libraries\\nimport math\\n# You need this, because you WILL NEED to use math.ceil in your program\\n\\n# CONSTANTS used in program\\nDAYS_PER_MONTH = 30\\nCALS_PER_LB = 3500\\nCALS_LOST_PER_FRAPPUCCINO = 490\\nDOZEN = 12\\n\\n# GET INPUT FROM USER\\ndiaper_cost = float(input(\\\"What is the cost of a dozen diapers:  \\\"))\\ndiapers_per_day = int(input(\\\"How many diapers does the baby go through a day:  \\\"))\\nfrap_cost = float(input(\\\"What is the cost of a single caramel frappuccino:  \\\"))\\n\\n# PERFORM CALCULATIONS\\ndiaper_cost_per_month = ((diapers_per_day*DAYS_PER_MONTH)/DOZEN)*diaper_cost\\nfewer_fraps = math.ceil(diaper_cost_per_month/frap_cost)\\n#Notice the use of math.ceil above:\\n# Using the sample inputs on the PDF, you sould calculate fewer fraps to be 9.8ish\\n# This means you cannot purchase 9.8 frappuccinos. But how do we understand the .8?\\n# Well, clearly that means TEN frappuccinos that you cannot purchase. You cannot purchase\\n# 9 plus you cannot purchase even .8 of the next one, which is really the same as\\n# not purchasing 10.\\n\\n# OUTPUT RESULTS\\nprint(\\\"You will spend ${:.2f} on diapers in a month.\\\".format(diaper_cost_per_month))\\nprint(\\\"You will drink\\\", math.floor(fewer_fraps), \\\"fewer caramel frappuccino in a month.\\\")\\nprint(\\\"As a result, you will lose {:.2f} pounds in a month.\\\".format((fewer_fraps*CALS_LOST_PER_FRAPPUCCINO)/CALS_PER_LB))\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# CSC 2280: Lab 3 - Weekly Problems - (Diapers or Coffee???)\\n#           Silly problem about diapers, frappuccinos, where should the money go,\\n#           and even the weight loss occurring as a result!\\n\\n# Import any necessary libraries\\nimport math\\n# You need this, because you WILL NEED to use math.ceil in your program\\n\\n# CONSTANTS used in program\\nDAYS_PER_MONTH = 30\\nCALS_PER_LB = 3500\\nCALS_LOST_PER_FRAPPUCCINO = 490\\nDOZEN = 12\\n\\n# Write your code below\\n# | | | | | | | | | | |\\n# v v v v v v v v v v v\"],\"t\":1613479637000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16431,
    "title": "Lab03_Problem12_Koolaid",
    "prompt_md": "## Problem Statement\n\nA family friend has two small children who are dreaming of making it big, and they have high hopes for their current business venture: the greatest Kool-Aid stand to ever see the light of day! And while they have lofty goals of supercars, yachts, and other toys, their current dream is a bit smaller: they each want twenty bucks to purchase a new Build-A-Bear!\n\nThey’ve come to you for help in determining how many cups of Kool-Aid they must sell in order to get a profit of $40.\n\nYour job: write a program to determine the number of cups of Kool-Aid that must be sold in order to meet a specified goal, all while taking into account the rental cost for their stand, the materials cost per cup, and the price per cup.\n\nSee output below for a full run of the program.\n\n## Sample run of program:\n\n```plaintext\nHow many dollars is the rent for your stand?  5\nHow many cents do the materials cost, per glass?  8\nHow many cents do you charge per glass?  25\nWhat is your profit goal, in dollars?  40\nYou must sell 265 cups of Kool-Aid to meet your goal.\n```\n\n## Another sample run of program:\n\n```plaintext\nHow many dollars is the rent for your stand?  1\nHow many cents do the materials cost, per glass?  3\nHow many cents do you charge per glass?  25\nWhat is your profit goal, in dollars?  40\nYou must sell 187 cups of Kool-Aid to meet your goal.\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# A REMINDER:\\n# Your output should be 100% identical...typos or misspellings\\n# will result in your answer being rejected.\\n#\\n# A suggestion: COPY/PASTE the input questions from the sample\\n#               on the right. Even do the same for the output line.\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"How many dollars is the rent for your stand?  \\nHow many cents do the materials cost, per glass?  \\nHow many cents do you charge per glass?  \\nWhat is your profit goal, in dollars?  \\nYou must sell 240 cups of Kool-Aid to meet your goal.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"20\\n15\\n40\\n40\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"How many dollars is the rent for your stand?  \\nHow many cents do the materials cost, per glass?  \\nHow many cents do you charge per glass?  \\nWhat is your profit goal, in dollars?  \\nYou must sell 250 cups of Kool-Aid to meet your goal.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n5\\n25\\n40\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"How many dollars is the rent for your stand?  \\nHow many cents do the materials cost, per glass?  \\nHow many cents do you charge per glass?  \\nWhat is your profit goal, in dollars?  \\nYou must sell 265 cups of Kool-Aid to meet your goal.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n8\\n25\\n40\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"How many dollars is the rent for your stand?  \\nHow many cents do the materials cost, per glass?  \\nHow many cents do you charge per glass?  \\nWhat is your profit goal, in dollars?  \\nYou must sell 187 cups of Kool-Aid to meet your goal.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n3\\n25\\n40\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Name: Dr Jonathan Cazalas\\n#\\n# CSC 2280: Weekly Problems (Makin' it Big!)\\n#           Python Program to determine how many cups of Koolaid must\\n#           be sold in order to meet the target profit goal.\\n\\n# GET INPUT FROM USER\\nrental_cost = int(input(\\\"How many dollars is the rent for your stand?  \\\"))\\nper_cup_cost = int(input(\\\"How many cents do the materials cost, per glass?  \\\"))\\nper_cup_sale_price = int(input(\\\"How many cents do you charge per glass?  \\\"))\\nprofit_goal = int(input(\\\"What is your profit goal, in dollars?  \\\"))\\n\\n# PERFORM CALCULATIONS\\n# Determine the target revenue (in cents)\\ntarget_revenue_in_cents = 100*(rental_cost + profit_goal)\\n\\n# Calculate the profit per cup (already in cents)\\nprofit_per_cup = per_cup_sale_price - per_cup_cost\\n\\n# Calculate the number of cups you must sell to meet the target revenue\\n#   NOTE: what happens if we use the following line of code?\\n#         cups_must_sell = target_revenue_in_cents//profit_per_cup\\n#         This is INTEGER Division...it will only give us the whole number result\\n#         of the division. And if the result is 5.24 (for example), we know that\\n#         we must really sell 6 cups in order to reach the target. So how do we\\n#         make sure that the answer will give us 6 in this case? Study the\\n#         following line and convince yourself why it works.\\ncups_must_sell = (target_revenue_in_cents + profit_per_cup - 1) // profit_per_cup\\n\\n# OUTPUT RESULTS\\nprint(\\\"You must sell {} cups of Kool-Aid to meet your goal.\\\".format(cups_must_sell))\",\"defaultFilePath\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# A REMINDER:\\n# Your output should be 100% identical...typos or misspellings\\n# will result in your answer being rejected.\\n#\\n# A suggestion: COPY/PASTE the input questions from the sample\\n#               on the right. Even do the same for the output line.\"],\"t\":1613477087000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16432,
    "title": "Lab03_Problem11_PizzaPower",
    "prompt_md": "## Problem Statement\n\nEveryone loves pizza! And we also like a good value! Should you buy a small pizza, a medium pizza, or a large pizza? If you cannot stand the idea of leftovers, you’re your pizza choice will in fact be based on how much you can consume in one sitting. But if leftovers are okay (it is pizza after all!), then it’s helpful to know that a large pizza does in fact usually offer a much better value than a medium pizza.\n\nYour job is to write a program, asking the user for the size and cost of both a large and medium pizza. Your program should then print out:\n\n*   the area of each pizza\n*   the price per square inch of each pizza\n*   How much more expensive (per square inch) the medium is over the large.\n\n\\*\\*Note #1: we have already started this program for you by reading in the values. You need to perform the necessary computations...that's it. Even the output is already done.\n\n\\*\\*\\*Note #2: when performing calculations, make sure you use the SAME variables as given in the output section. So look at those variable names that are being printed and use those EXACT same names when making your calculations.\n\n## Sample run of program:\n\n```plaintext\nWhat is the size (diameter) of a medium pizza?  12\nAnd what is the price (in dollars) of a 1-topping medium pizza?  7.99\nWhat is the size (diameter) of a large pizza?  14\nAnd what is the price (in dollars) of a 1-topping LARGE pizza?  9.99\n\nThe area of a 12 inch medium pizza is 113.10 inches.\n   and the price per square inch is 0.0706\n\nThe area of a 14 inch large pizza is 153.94 inches.\n   and the price per square inch is 0.0649\n\nThe medium pizza is 8.86% percent more expensive, per square inch, than the large pizza.\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# CSC 2280: Lab 3 Weekly Problems (Pizza Deals)\\n#           Short program to illustrate input/output (IO)\\n#           and we use the same area of a circle formula\\n#           A = PI * r * r\\n#           price_per_inch_medium = price / (area of medium pizza)\\n\\n# CONSTANTS\\nPI = 3.14159\\n\\n# GET INPUTS FROM USER\\ndiameter_medium = int(input(\\\"What is the size (diameter) of a medium pizza?  \\\"))\\nprice_medium = float(input(\\\"And what is the price (in dollars) of a 1-topping medium pizza?  \\\"))\\ndiameter_large = int(input(\\\"What is the size (diameter) of a large pizza?  \\\"))\\nprice_large = float(input(\\\"And what is the price (in dollars) of a 1-topping LARGE pizza?  \\\"))\\n\\n# COMPUTE VALUES\\n# For Medium Pizza\\n\\n# - ERASE this and put your code here to compute values for MEDIUM Pizza\\n#   You need to use the same variable names that are expected in the\\n#   output section below.\\n\\n# For Large Pizza\\n# - ERASE this and put your code here to compute values for LARGE Pizza\\n#   You need to use the same variable names that are expected in the\\n#   output section below.\\n\\n# Compute how much more expensive\\n# - ERASE this and put your code here to compute how much more expensive\\n#   You need to use the same variable names that are expected in the\\n#   output section below.\\n# NOTE: no need to multiply result by 100 to get the percent, because\\n#       we are using the % formatting identifier in the output, which\\n#       automatically multiplies by 100 for you!\\n\\n# OUTPUT RESULTS\\nprint(\\\"\\\\nThe area of a {} inch medium pizza is {:.2f} inches.\\\".format(diameter_medium, area_medium))\\nprint(\\\"   and the price per square inch is {:.2f}\\\".format(price_per_inch_medium))\\nprint(\\\"\\\\nThe area of a {} inch large pizza is {:.2f} inches.\\\".format(diameter_large, area_large))\\nprint(\\\"   and the price per square inch is {:.4f}\\\".format(price_per_inch_large))\\nprint(\\\"\\\\nThe medium pizza is {:.2%} percent more expensive, per square inch, than the large pizza.\\\".format(percent_more_expensive))\\n\",\"defaultFilePath\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"What is the size (diameter) of a medium pizza?  \\nAnd what is the price (in dollars) of a 1-topping medium pizza?  \\nWhat is the size (diameter) of a large pizza?  \\nAnd what is the price (in dollars) of a 1-topping LARGE pizza?  \\n\\nThe area of a 12 inch medium pizza is 113.10 inches.\\n   and the price per square inch is 0.0706\\n\\nThe area of a 14 inch large pizza is 153.94 inches.\\n   and the price per square inch is 0.0649\\n\\nThe medium pizza is 8.86% percent more expensive, per square inch, than the large pizza.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12\\n7.99\\n14\\n9.99\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"What is the size (diameter) of a medium pizza?  \\nAnd what is the price (in dollars) of a 1-topping medium pizza?  \\nWhat is the size (diameter) of a large pizza?  \\nAnd what is the price (in dollars) of a 1-topping LARGE pizza?  \\n\\nThe area of a 12 inch medium pizza is 113.10 inches.\\n   and the price per square inch is 0.0531\\n\\nThe area of a 14 inch large pizza is 153.94 inches.\\n   and the price per square inch is 0.0520\\n\\nThe medium pizza is 2.08% percent more expensive, per square inch, than the large pizza.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12\\n6\\n14\\n8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"What is the size (diameter) of a medium pizza?  \\nAnd what is the price (in dollars) of a 1-topping medium pizza?  \\nWhat is the size (diameter) of a large pizza?  \\nAnd what is the price (in dollars) of a 1-topping LARGE pizza?  \\n\\nThe area of a 12 inch medium pizza is 113.10 inches.\\n   and the price per square inch is 0.1083\\n\\nThe area of a 14 inch large pizza is 153.94 inches.\\n   and the price per square inch is 0.0942\\n\\nThe medium pizza is 14.99% percent more expensive, per square inch, than the large pizza.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12\\n12.25\\n14\\n14.5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Name: Dr Jonathan Cazalas\\n# Date: 9/14/2018\\n#\\n# CSC 2280: Lab 3 - Problem 1 (Pizza Deals)\\n#           Short program to illustrate input/output (IO)\\n#           and we use the same area of a circle formula\\n#           A = PI * r * r\\n#           pricePerInch_medium = price / (area of medium pizza)\\n#\\n# CONSTANTS\\n# Note that we capitalize PI here, as, in fact, it is a constant!\\n# Capitalization of constants is not required...it is part of good style.\\nPI = 3.14159\\n\\n# GET INPUTS FROM USER\\ndiameter_medium = int(input(\\\"What is the size (diameter) of a medium pizza?  \\\"))\\nprice_medium = float(input(\\\"And what is the price (in dollars) of a 1-topping medium pizza?  \\\"))\\ndiameter_large = int(input(\\\"What is the size (diameter) of a large pizza?  \\\"))\\nprice_large = float(input(\\\"And what is the price (in dollars) of a 1-topping LARGE pizza?  \\\"))\\n\\n# COMPUTE VALUES\\n# For Medium Pizza\\nradius_medium = diameter_medium / 2\\narea_medium = PI * radius_medium * radius_medium\\nprice_per_inch_medium = price_medium / area_medium\\n\\n# For Large Pizza\\nradius_large = diameter_large / 2\\narea_large = PI * radius_large * radius_large\\nprice_per_inch_large = price_large / area_large\\n\\n# Compute how much more expensive\\npercent_more_expensive = (price_per_inch_medium-price_per_inch_large)/price_per_inch_large\\n\\n# OUTPUT RESULTS\\nprint(\\\"\\\\nThe area of a {} inch medium pizza is {:.2f} inches.\\\".format(diameter_medium, area_medium))\\nprint(\\\"   and the price per square inch is {:.4f}\\\".format(price_per_inch_medium))\\nprint(\\\"\\\\nThe area of a {} inch large pizza is {:.2f} inches.\\\".format(diameter_large, area_large))\\nprint(\\\"   and the price per square inch is {:.4f}\\\".format(price_per_inch_large))\\nprint(\\\"\\\\nThe medium pizza is {:.2%} percent more expensive, per square inch, than the large pizza.\\\".format(percent_more_expensive))\",\"defaultFilePath\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# CSC 2280: Lab 3 Weekly Problems (Pizza Deals)\\n#           Short program to illustrate input/output (IO)\\n#           and we use the same area of a circle formula\\n#           A = PI * r * r\\n#           price_per_inch_medium = price / (area of medium pizza)\\n\\n# CONSTANTS\\nPI = 3.14159\\n\\n# GET INPUTS FROM USER\\ndiameter_medium = int(input(\\\"What is the size (diameter) of a medium pizza?  \\\"))\\nprice_medium = float(input(\\\"And what is the price (in dollars) of a 1-topping medium pizza?  \\\"))\\ndiameter_large = int(input(\\\"What is the size (diameter) of a large pizza?  \\\"))\\nprice_large = float(input(\\\"And what is the price (in dollars) of a 1-topping LARGE pizza?  \\\"))\\n\\n# COMPUTE VALUES\\n# For Medium Pizza\\n\\n# - ERASE this and put your code here to compute values for MEDIUM Pizza\\n#   You need to use the same variable names that are expected in the\\n#   output section below.\\n\\n# For Large Pizza\\n# - ERASE this and put your code here to compute values for LARGE Pizza\\n#   You need to use the same variable names that are expected in the\\n#   output section below.\\n\\n# Compute how much more expensive\\n# - ERASE this and put your code here to compute how much more expensive\\n#   You need to use the same variable names that are expected in the\\n#   output section below.\\n# NOTE: no need to multiply result by 100 to get the percent, because\\n#       we are using the % formatting identifier in the output, which\\n#       automatically multiplies by 100 for you!\\n\\n# OUTPUT RESULTS\\nprint(\\\"\\\\nThe area of a {} inch medium pizza is {:.2f} inches.\\\".format(diameter_medium, area_medium))\\nprint(\\\"   and the price per square inch is\\\", format(price_per_inch_medium, \\\".4f\\\"))\\nprint(\\\"\\\\nThe area of a {} inch large pizza is {:.2f} inches.\\\".format(diameter_large, area_large))\\nprint(\\\"   and the price per square inch is\\\", format(price_per_inch_large, \\\".4f\\\"))\\nprint(\\\"\\\\nThe medium pizza is {:.2%} percent more expensive, per square inch, than the large pizza.\\\".format(percent_more_expensive))\\n\"],\"t\":1613477083000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16433,
    "title": "Lab02_Problem02: Average Speed",
    "prompt_md": "\n# Description\n\nAssume a runner runs 15 kilometers in 45 minutes. Write a program that displays the average speed in miles per hour. (Note that 1 mile is 1.6 kilometers.)\n\n\n\n# Sample Input 1:\n\n```\nHow many kilometers did you run: 15\nHow many minutes did this take: 45\n```\n\n\n\n# Sample Output 1:\n\n```\nAverage Speed: 12.5 miles per hour\n```\n\n\n\n# Sample Input 2:\n\n```\nHow many kilometers did you run: 3\nHow many minutes did this take: 30\n```\n\n\n\n# Sample Output 2:\n\n```\nAverage Speed: 3.75 miles per hour\n```\n\n\n\n\n\n",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"How many kilometers did you run: \\nHow many minutes did this take: \\nAverage Speed: 3.75 miles per hour\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n30\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"How many kilometers did you run: \\nHow many minutes did this take: \\nAverage Speed: 9.375 miles per hour\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n20\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\"],\"t\":1613079019000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16434,
    "title": "Lab09_Problem04: Both Even",
    "prompt_md": "## Statement\n\nWrite a function header on Line 1, called `both_even`, which should receive two integers as parameters. Your function should return `True` if both parameters are even numbers and `False` otherwise.\n\n### Function name:\n\n```plaintext\nboth_even\n```\n\n###  Function parameters:\n\n```plaintext\ntwo integers\n```\n\n###  Function returns:\n\n```plaintext\na single boolean value\n```\n\n###  Examples\n\n```plaintext\nboth_even(4, 22) ==> True\nboth_even(18, 7) ==> False\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Write your function here\\n\\ndef main():\\n\\tprint(both_even(4, 22))\\n\\tprint(both_even(18, 7))\\n\\nmain()\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"unit_test\",\"title\":\"both_even\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"py3_unittest\",\"unitTestCode\":\"from main import *\\n\\nimport unittest\\n\\nclass CodingRoomsUnitTests(unittest.TestCase):\\n\\n  def test_both_even(self):\\n    self.assertEquals(both_even(4, 22), True)\\n    self.assertEquals(both_even(4, 17), False)\\n    self.assertEquals(both_even(13, 96), False)\\n    self.assertEquals(both_even(247, 749243), False)\\n    \\n    \\n\\n\",\"unitTestFilePath\":\"coding_rooms_unit_tests.py\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def both_even(num1, num2):\\n    if num1 % 2 == 0 and num2 % 2 == 0:\\n        return True\\n    else:\\n        return False\\n\\ndef main():\\n    print(both_even(4, 22))\\n    print(both_even(4, 17))\\n    print(both_even(13, 96))\\n    print(both_even(247, 749243))\\n\\nmain()\\n\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Write your function here\\n\\ndef main():\\n\\tprint(both_even(4, 22))\\n\\tprint(both_even(18, 7))\\n\\nmain()\\n\\n\"],\"t\":1617984389000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16435,
    "title": "Lab08_Problem07: Triangle Madness v3",
    "prompt_md": "## Statement\n\nGiven an input, N, use nested loops to create the following triangle.\n\n### Example input 1\n\n```plaintext\n6\n```\n\n### Example output 1\n\n```plaintext\n               1  \n            2  1  \n         3  2  1  \n      4  3  2  1  \n   5  4  3  2  1  \n6  5  4  3  2  1  \n```\n\n### Example input 2\n\n```plaintext\n14\n```\n\n### Example output 2\n\n```plaintext\n                                       1  \n                                    2  1  \n                                 3  2  1  \n                              4  3  2  1  \n                           5  4  3  2  1  \n                        6  5  4  3  2  1  \n                     7  6  5  4  3  2  1  \n                  8  7  6  5  4  3  2  1  \n               9  8  7  6  5  4  3  2  1  \n            10 9  8  7  6  5  4  3  2  1  \n         11 10 9  8  7  6  5  4  3  2  1  \n      12 11 10 9  8  7  6  5  4  3  2  1  \n   13 12 11 10 9  8  7  6  5  4  3  2  1  \n14 13 12 11 10 9  8  7  6  5  4  3  2  1  \n```\n\n\\*Note: formatted printing is required for this one due to the spacing. Each number is printed over three spaces and left aligned within the region.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"                                                                                             1  \\n                                                                                          2  1  \\n                                                                                       3  2  1  \\n                                                                                    4  3  2  1  \\n                                                                                 5  4  3  2  1  \\n                                                                              6  5  4  3  2  1  \\n                                                                           7  6  5  4  3  2  1  \\n                                                                        8  7  6  5  4  3  2  1  \\n                                                                     9  8  7  6  5  4  3  2  1  \\n                                                                  10 9  8  7  6  5  4  3  2  1  \\n                                                               11 10 9  8  7  6  5  4  3  2  1  \\n                                                            12 11 10 9  8  7  6  5  4  3  2  1  \\n                                                         13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                                                      14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                                                   15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                                                16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                                             17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                                          18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                                       19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                                    20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                                 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                              22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                           23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                        24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                     25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n                  26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n               27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n            28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n         29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n      30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n   31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \\n32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"32\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"   1  \\n2  1  \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1  \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"               1  \\n            2  1  \\n         3  2  1  \\n      4  3  2  1  \\n   5  4  3  2  1  \\n6  5  4  3  2  1  \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"                                       1  \\n                                    2  1  \\n                                 3  2  1  \\n                              4  3  2  1  \\n                           5  4  3  2  1  \\n                        6  5  4  3  2  1  \\n                     7  6  5  4  3  2  1  \\n                  8  7  6  5  4  3  2  1  \\n               9  8  7  6  5  4  3  2  1  \\n            10 9  8  7  6  5  4  3  2  1  \\n         11 10 9  8  7  6  5  4  3  2  1  \\n      12 11 10 9  8  7  6  5  4  3  2  1  \\n   13 12 11 10 9  8  7  6  5  4  3  2  1  \\n14 13 12 11 10 9  8  7  6  5  4  3  2  1  \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"14\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"n = int(input())\\nfor i in range(1, n + 1):\\n    # print spaces\\n    for j in range(n-i):\\n        print(\\\"   \\\", end = \\\"\\\")\\n    for j in range(i, 0, -1):\\n        print(\\\"{:\\u003c3d}\\\".format(j), end = \\\"\\\")\\n    print()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616898863000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16436,
    "title": "Lab08_Problem01: Widest fragment",
    "prompt_md": "## Statement\n\nGiven a sequence of non-negative integers, where each number is written in a separate line. The sequence ends with 0. Determine the length of the widest fragment where all the elements are equal to each other.\n\n### Example input\n\n```plaintext\n1\n7\n7\n9\n1\n0\n```\n\n###  Example output\n\n```plaintext\n2\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\n7\\n9\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"15\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n2\\n3\\n3\\n2\\n4\\n4\\n4\\n4\\n2\\n3\\n3\\n3\\n2\\n2\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n2\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"6\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n3\\n2\\n2\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n3\\n3\\n3\\n3\\n3\\n3\\n5\\n5\\n5\\n5\\n3\\n3\\n3\\n4\\n5\\n5\\n5\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n1\\n1\\n1\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n1\\n1\\n1\\n1\\n2\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"next = int(input())\\nlength = 1\\nmax_length = 1\\nwhile next != 0:\\n  prev, next = next, int(input())\\n  if prev == next:\\n    length += 1\\n  else:\\n    length = 1\\n  max_length = max(length, max_length)\\nprint(max_length)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616898843000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16437,
    "title": "Lab07_Problem09: Lost card",
    "prompt_md": "## Statement\n\nThere was a set of cards with numbers from 1 to N. One of the card is now lost. Determine the number on that lost card given the numbers for the remaining cards.\n\nGiven a number N, followed by N − 1 integers representing the numbers on the remaining cards (distinct integers in the range from 1 to N). Find and print the number on the lost card.\n\nNOTE: this is NOT a coding problem as much as it is a _thinking_ problem. Think about it first and identify HOW the output is 4. If you understand the HOW, then coding will be straightforward.\n\n### Example input\n\n```plaintext\n5\n3\n5\n2\n1\n```\n\n###  Example output\n\n```plaintext\n4\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n3\\n5\\n2\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n1\\n2\\n3\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n3\\n2\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n1\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n3\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n3\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n4\\n1\\n7\\n8\\n3\\n5\\n9\\n10\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"n = int(input())\\n\\ncards_sum = 0\\nfor i in range(1, n + 1):\\n  cards_sum += i\\n\\nfor i in range(n - 1):\\n  cards_sum -= int(input())\\n\\nprint(cards_sum)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771756000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16438,
    "title": "Lab07_Problem13: Number of maxima",
    "prompt_md": "## Statement\n\nGiven a sequence of non-negative integers, where each number is written in a separate line. The sequence ends with 0. Find how many elements of this sequence are equal to its largest element.\n\nNote: you should NOT be using lists, as this is something we have not covered yet.\n\n### Example input #1\n\n```plaintext\n1\n7\n9\n0\n```\n\n###  Example output #1\n\n```plaintext\n1\n```\n\n###  Example input #2\n\n```plaintext\n1\n3\n3\n1\n0\n```\n\n###  Example output #2\n\n```plaintext\n2\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\n9\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n3\\n3\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n5\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n4\\n3\\n2\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n2\\n3\\n3\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n2\\n3\\n3\\n3\\n2\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"6\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n1\\n1\\n1\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n4\\n3\\n2\\n1\\n5\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n39\\n77\\n33\\n86\\n79\\n19\\n62\\n27\\n79\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"74\\n56\\n70\\n43\\n28\\n20\\n97\\n95\\n58\\n6\\n56\\n41\\n96\\n82\\n44\\n82\\n42\\n65\\n14\\n3\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n3\\n3\\n5\\n7\\n3\\n1\\n7\\n4\\n7\\n7\\n7\\n2\\n9\\n1\\n7\\n5\\n9\\n8\\n8\\n8\\n8\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"13\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n30\\n20\\n30\\n30\\n15\\n30\\n40\\n5\\n40\\n30\\n40\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"maximum = int(input())\\ncounter = 1\\na = -1\\nwhile a != 0:\\n  a = int(input())\\n  if a \\u003e maximum:\\n    maximum, counter = a, 1\\n  elif a == maximum:\\n    counter += 1\\nprint(counter)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1616771763000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16439,
    "title": "Lab07_Problem02: Series - 2",
    "prompt_md": "## Statement\n\nGiven two integers A and B. Print all numbers from A to B inclusively, in increasing order, if A \\< B, or in decreasing order, if A ≥ B.\n\n### Example input\n\n```plaintext\n8\n5\n```\n\n###  Example output\n\n```plaintext\n8 7 6 5\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"8 7 6 5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 2 3 4 5 6 7 8 9 10\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"179\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179\\n179\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-14 -13 -12 -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-14\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"12 11 10 9 8 7 6 5 4 3 2 1 0 -1 -2 -3 -4 -5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12\\n-5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nb = int(input())\\n\\nif a \\u003c b:\\n  for i in range(a, b + 1):\\n    print(i, end=' ')\\nelse:\\n  for i in range(a, b - 1, -1):\\n    print(i, end=' ')\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771743000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16440,
    "title": "Lab08_Problem06: Triangle Madness v2",
    "prompt_md": "## Statement\n\nGiven an input, N, use nested loops to create the following triangle.\n\n### Example input 1\n\n```plaintext\n6\n```\n\n### Example output 1\n\n```plaintext\n1 2 3 4 5 6 \n1 2 3 4 5 \n1 2 3 4 \n1 2 3 \n1 2 \n1 \n```\n\n### Example input 2\n\n```plaintext\n10\n```\n\n### Example output 2\n\n```plaintext\n1 2 3 4 5 6 7 8 9 10 \n1 2 3 4 5 6 7 8 9 \n1 2 3 4 5 6 7 8 \n1 2 3 4 5 6 7 \n1 2 3 4 5 6 \n1 2 3 4 5 \n1 2 3 4 \n1 2 3 \n1 2 \n1 \n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 \\n1 2 3 4 5 6 7 8 9 10 11 12 13 \\n1 2 3 4 5 6 7 8 9 10 11 12 \\n1 2 3 4 5 6 7 8 9 10 11 \\n1 2 3 4 5 6 7 8 9 10 \\n1 2 3 4 5 6 7 8 9 \\n1 2 3 4 5 6 7 8 \\n1 2 3 4 5 6 7 \\n1 2 3 4 5 6 \\n1 2 3 4 5 \\n1 2 3 4 \\n1 2 3 \\n1 2 \\n1 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"29\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 2 \\n1 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 2 3 4 5 6 7 8 9 10 \\n1 2 3 4 5 6 7 8 9 \\n1 2 3 4 5 6 7 8 \\n1 2 3 4 5 6 7 \\n1 2 3 4 5 6 \\n1 2 3 4 5 \\n1 2 3 4 \\n1 2 3 \\n1 2 \\n1 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 2 3 4 5 6 \\n1 2 3 4 5 \\n1 2 3 4 \\n1 2 3 \\n1 2 \\n1 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"n = int(input())\\nfor i in range(1, n + 1):\\n    for j in range(1, n + 2 - i):\\n        print(\\\"{} \\\".format(j), end = \\\"\\\")\\n    print()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616898859000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16441,
    "title": "Lab07_Problem03: Sum of ten numbers",
    "prompt_md": "## Statement\n\nExactly 10 numbers are given in the input. Read them and print their sum. Use as few variables as you can.\n\n### Example input\n\n```plaintext\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n```\n\n###  Example output\n\n```plaintext\n45\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"45\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"55\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"44\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\\n4\\n5\\n3\\n9\\n2\\n3\\n4\\n5\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-45\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-1\\n-2\\n-3\\n-4\\n-5\\n-6\\n-7\\n-8\\n-9\\n0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"result = 0\\nfor i in range(10):\\n  result += int(input())\\nprint(result)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616771742000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16442,
    "title": "Lab03_Problem08_Cupcakes",
    "prompt_md": "## Statement\n\nA cupcake costs A dollars and B cents. Determine, how many dollars and cents should one pay for N cupcakes. A program gets three numbers: A, B, N.\n\nYour program should then print two numbers: total cost in **dollars** _**and**_ **cents**.\n\n### Example input\n\n```plaintext\n10\n15\n2\n```\n\n###  Example output\n\n```plaintext\n20 30\n```\n\nExplanation of input and output above:\n\n*   10 is A (number of dollars)\n*   15 is B (number of cents)\n*   2 is N (number of cupcakes to purchase)\n*   So in this example, the cost of one cupcake is $10.15 (10 dollars and 15 cents…quite expensive!)\n*   The user wants two cupcakes, which we know costs double, exactly $20.30\n*   So we print that total cost as two values, separated by a space: 20 30",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"556585 35\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1886\\n73\\n295\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3750220 32\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2029\\n34\\n1848\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9002970 0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3000\\n99\\n3000\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10 0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n50\\n4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"20 30\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n15\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"item_dollars = int(input())\\nitem_cents = int(input())\\nn = int(input())\\n\\n# Eaiest to just convert price of one cupcake to cents (no dollars)\\n# and then multiply that amount by n, which will give us the total\\n# cost of the entire purchase in just cents\\ntotal_cents = (item_dollars * 100 + item_cents) * n\\n\\n# From that value, we can now extract the total number of dollars\\n# and the total number of cents as shown below:\\nprint(total_cents // 100, total_cents % 100)\\n\",\"defaultFilePath\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613477075000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16443,
    "title": "Lab03_Problem06_DigitAfterDecimal",
    "prompt_md": "## Statement\n\nGiven a positive real number, print its first digit to the right of the decimal point.\n\n### Example input\n\n```plaintext\n1.79\n```\n\n###  Example output\n\n```plaintext\n7\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5.29\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179.12\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"19.99\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0.001\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10.34\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1.79\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"print((int(float(input()) * 10)) % 10)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613477065000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16444,
    "title": "Lab03_Problem05: SumOfDigits",
    "prompt_md": "## Statement\n\nGiven a three-digit number. Find the sum of its digits.\n\n### Example input\n\n```plaintext\n123\n```\n\n###  Example output\n\n```plaintext\n6\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"15\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"483\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"27\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"999\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"19\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"829\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"17\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"6\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"123\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nprint(a // 100 + a // 10 % 10 + a % 10)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613476833000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16445,
    "title": "Lab02_Problem11: Minutes to Years/Days",
    "prompt_md": "## Statement\n\nWrite a program that prompts the user to enter the minutes (e.g., 1 billion), and displays the number of years and days for the minutes. For simplicity, assume a year has 365 days. Sample runs of the program are shown below.\n\n### Example input/output #1\n\n```plaintext\nEnter the number of minutes: 1000000000\nYou entered 1000000000 minutes. This is approximately equal to:\n   1902 years\n   214 days\n```\n\n###  Example input/output #2\n\n```plaintext\nEnter the number of minutes: 528480\nYou entered 528480 minutes. This is approximately equal to:\n   1 years\n   2 days\n```\n\n### Example input/output #3\n\n```plaintext\nEnter the number of minutes: 528600\nYou entered 528600 minutes. This is approximately equal to:\n   1 years\n   2 days\n```\n\n###  Example input/output #4\n\n```plaintext\nEnter the number of minutes: 2880\nYou entered 2880 minutes. This is approximately equal to:\n   0 years\n   2 days\n```\n\n### Example input/output #5\n\n```plaintext\nEnter the number of minutes: 1439\nYou entered 1439 minutes. This is approximately equal to:\n   0 years\n   0 days\n```\n\n\\*\\*\\* The input in all examples above, the ONLY USER INPUT is the number on line one of the samples. All remaining text (spaces, punctuation, tabs, etc) is considered as output.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the number of minutes: \\nYou entered 1439 minutes. This is approximately equal to:\\n   0 years\\n   0 days\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1439\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the number of minutes: \\nYou entered 2880 minutes. This is approximately equal to:\\n   0 years\\n   2 days\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2880\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the number of minutes: \\nYou entered 1880 minutes. This is approximately equal to:\\n   0 years\\n   1 days\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1880\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the number of minutes: \\nYou entered 528600 minutes. This is approximately equal to:\\n   1 years\\n   2 days\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"528600\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the number of minutes: \\nYou entered 528480 minutes. This is approximately equal to:\\n   1 years\\n   2 days\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"528480\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the number of minutes: \\nYou entered 527040 minutes. This is approximately equal to:\\n   1 years\\n   1 days\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"527040\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the number of minutes: \\nYou entered 51321658 minutes. This is approximately equal to:\\n   97 years\\n   235 days\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"51321658\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Enter the number of minutes: \\nYou entered 1000000000 minutes. This is approximately equal to:\\n   1902 years\\n   214 days\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1000000000\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Dr Jonathan Cazalas\\n#\\n# CSC 2280: Chapter 2 - Elementary Programming\\n#           Weekly Problems\\n\\n# Step 1: get minutes from the user\\nminutes = int(input(\\\"Enter the number of minutes: \\\"))\\n\\n# Step 2: perform calculations\\nhours = minutes // 60\\ndays = hours // 24\\nyears = days // 365\\nremaining_days = days % 365\\n\\n# Display the result\\nprint(\\\"You entered\\\", minutes, \\\"minutes. This is approximately equal to:\\\")\\nprint(\\\"   {} years\\\".format(years))\\nprint(\\\"   {} days\\\".format(remaining_days))\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613079221000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16446,
    "title": "Lab02_Problem01: Math Expression",
    "prompt_md": "\nWrite a program that displays the result of the following mathematical expression:\n\n\n\n![](https://storage.googleapis.com/replit/images/1565892060472_9008333f44f508a1ceb0f2f9bb8e3101.png)\n\n\n\n\n\n",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0.8392857142857143\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Dr Jonathan Cazalas\\n# Date Created:       08/15/19\\n# Date Last Modified: 08/15/19\\n#\\n# CSC 2280: Lab 1\\n#           Problem 5\\nprint(((9.5 * 4.5) - (2.5 * 3)) / (45.5 - 3.5))\\n# Note: the extra two sets of parentheses in the numerator are\\n#       unnecessary, because multiplication has a higher precedence\\n#       than subtraction. That said, there's no harm in placing them.\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\"],\"t\":1613078967000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16447,
    "title": "Lab01_Problem03: And More Printing",
    "prompt_md": "Write a program that displays the following pattern:\n\n```plaintext\nFFFFFFF   U     U   NN    NN\nFF        U     U   NNN   NN\nFFFFFFF   U     U   NN N  NN\nFF         U   U    NN  N NN\nFF          UUU     NN   NNN\n```\n\nYour program should consist of five individual print statements, with each consisting of the appropriate letters and spaces in order to print the above \"word\".",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"FFFFFFF   U     U   NN    NN\\nFF        U     U   NNN   NN\\nFFFFFFF   U     U   NN N  NN\\nFF         U   U    NN  N NN\\nFF          UUU     NN   NNN\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Dr Jonathan Cazalas\\n# Date Created:       08/15/19\\n# Date Last Modified: 08/15/19\\n#\\n# CSC 2280: Lab 1\\n#           Problem 3: write the word \\\"FUN\\\" with characters\\nprint(\\\"FFFFFFF   U     U   NN    NN\\\")\\nprint(\\\"FF        U     U   NNN   NN\\\")\\nprint(\\\"FFFFFFF   U     U   NN N  NN\\\")\\nprint(\\\"FF         U   U    NN  N NN\\\")\\nprint(\\\"FF          UUU     NN   NNN\\\")\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\n\\n\"],\"t\":1611519504000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16448,
    "title": "Lab06_Problem08: Least divisor",
    "prompt_md": "### Statement\n\nGiven an integer not less than 2. Print its smallest integer divisor greater than 1.\n\n### Example input\n\n```plaintext\n15\n```\n\n###  Example output\n\n```plaintext\n3\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"15\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"35\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"55\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"179\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\ni = 2\\nwhile a % i != 0:\\n  i += 1\\nprint(i)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616165813000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16449,
    "title": "Lab02_Problem09: Timestamps",
    "prompt_md": "## Statement\n\nGiven two timestamps of the same day: a number of **hours**, **minutes \\*\\*and \\*\\*seconds \\*\\*for \\*\\***_**both**_ of the timestamps. The moment of the first timestamp happened before the moment of the second one.\n\nCalculate how many seconds passed between the two timestamps.\n\n## Example input #1\n\n```plaintext\n1\n1\n1\n2\n2\n2\n```\n\n#### Explanation of input #1:\n\nThe first timestamp is 01:01:01, which is 1:01 am and even 1 second into that first minute. The second timestamp is 02:02:02, which is 2:02 am and 2 seconds into that second minute. You need to find the total number of seconds between those two timestamps, which is 3661 seconds.\n\n## Example output #1\n\n```plaintext\n3661\n```\n\n## Example input #2\n\n```plaintext\n1\n2\n30\n1\n3\n20\n```\n\nExplanation of input #2:\n\nThe first timestamp is 01:02:30, which is 1:02 am and then 30 seconds into that second minute. The second timestamp is 01:03:20, which is 1:03 am and then 20 seconds into that third minute. You need to find the total number of seconds between those two timestamps, which is 50 seconds.\n\n## Example output #2\n\n```plaintext\n50\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n13\\n38\\n5\\n13\\n38\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"28198\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n16\\n9\\n12\\n6\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"44307\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n49\\n28\\n14\\n7\\n55\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"26678\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n54\\n4\\n14\\n18\\n42\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"50\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n30\\n1\\n3\\n20\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3661\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n2\\n2\\n2\\n\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"hours_1 = int(input())\\nminutes_1 = int(input())\\nseconds_1 = int(input())\\n\\nhours_2 = int(input())\\nminutes_2 = int(input())\\nseconds_2 = int(input())\\n\\nprint((hours_2 - hours_1) * 3600 + (minutes_2 - minutes_1) * 60 + seconds_2 - seconds_1)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613079216000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16450,
    "title": "Lab02_Problem07: Apples",
    "prompt_md": "## Statement\n\nN students take K apples and distribute them among each other evenly. The remaining (the indivisible) part remains in the basket. How many apples will each single student get? How many apples will remain in the basket?\n\nThe program reads the numbers N and K. It should print the two answers for the questions above.\n\n### Example input\n\n```plaintext\n6\n50\n```\n\n###  Example output\n\n```plaintext\n8\n2\n```\n\nExplanation:\n\nAs always, the input above is just a sample; the grader will run your program with several example inputs. For this example, 6 is the number of students, and 50 is the number of apples. Each student gets 8 apples. Once that is complete, there are 2 remaining apples.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4\\n1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n17\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\\n2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5\\n0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\\n25\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10\\n0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"8\\n2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\\n50\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"n = int(input())\\nk = int(input())\\nprint(k // n)\\nprint(k % n)\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613079209000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16451,
    "title": "Lab02_Problem08: Hours/Minutes",
    "prompt_md": "## Statement\n\nGiven the integer N - the number of seconds that is passed since midnight - how many full hours have passed since midnight? And how many full minutes have passed since midnight? The program should print two numbers: the number of hours (between 0 and 23) and the number of minutes (between 0 and 1339).\n\nFor example, if N = 3900, then 3900 seconds have passed since midnight - i.e. now it's 1:05am. So the program should print **1 65** --- 1 full hour has passed since midnight, and 65 full minutes have also passed since midnight.\n\n### Example input\n\n```plaintext\n3900\n```\n\n###  Example output\n\n```plaintext\n1 65\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"23 1433\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"86010\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3 205\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12345\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0 0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"59\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0 1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2 133\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8000\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 65\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3900\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"num_seconds = int(input())\\nprint(num_seconds // 3600, num_seconds // 60)\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613079217000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16452,
    "title": "Lab02_Problem06: Numbers",
    "prompt_md": "## Statement\n\nWrite a program that reads an integer number and prints its previous and next numbers. See the example below.\n\n### Example input\n\n```plaintext\n179\n```\n\n###  Example output\n\n```plaintext\nThe next number for the number 179 is 180\nThe previous number for the number 179 is 178\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"The next number for the number 1234 is 1235\\nThe previous number for the number 1234 is 1233\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1234\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"The next number for the number 0 is 1\\nThe previous number for the number 0 is -1\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"The next number for the number 179 is 180\\nThe previous number for the number 179 is 178\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"n = int(input())\\nprint('The next number for the number ' + str(n) + ' is ' + str(n + 1))\\nprint('The previous number for the number ' + str(n) + ' is ' + str(n - 1))\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613079209000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16453,
    "title": "Lab02_Problem10: Tip Calculator",
    "prompt_md": "## Statement\n\nWrite a program that reads the subtotal and gratuity rate from the user, computes the gratuity and new total, and then displays the result.\n\nNOTE: The user input below has been _**bolded and underlined**_ for your convenience.\n\n### Sample Run of Program # 1\n\nPlease enter the subtotal amount: _**56.47**_  \nPlease enter the gratuity rate:   _**18**_  \nSubtotal: $  56.47  \nTip:      $  10.16  \nTotal:    $  66.63\n\n\\*\\*The input shown in the output example above has been underlined for your convenience.\n\n### Sample Run of Program # 2\n\nPlease enter the subtotal amount: _**72.68**_  \nPlease enter the gratuity rate:   _**20**_  \nSubtotal: $  72.68  \nTip:      $  14.54  \nTotal:    $  87.22",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# REMINDER: your output needs to match 100%...space for space\\n# You NEED to use formatted printing here\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Please enter the subtotal amount: \\nPlease enter the gratuity rate:   \\nSubtotal: $ 263.97\\nTip:      $  65.99\\nTotal:    $ 329.96\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"263.97\\n25\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Please enter the subtotal amount: \\nPlease enter the gratuity rate:   \\nSubtotal: $ 115.00\\nTip:      $  11.50\\nTotal:    $ 126.50\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"115\\n10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Please enter the subtotal amount: \\nPlease enter the gratuity rate:   \\nSubtotal: $  72.68\\nTip:      $  14.54\\nTotal:    $  87.22\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"72.68\\n20\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Please enter the subtotal amount: \\nPlease enter the gratuity rate:   \\nSubtotal: $  56.47\\nTip:      $  10.16\\nTotal:    $  66.63\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"56.47\\n18\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Dr Jonathan Cazalas\\n#\\n# CSC 2280: Chapter 2 - Elementary Programming\\n#           Weekly Problems: Tip Calculator\\n\\n# Step 1: get subtotal and tip rate from the user\\nsubtotal = eval(input(\\\"Please enter the subtotal amount: \\\"))\\ntip_rate = eval(input(\\\"Please enter the gratuity rate:   \\\"))\\n\\n# Step 2: calculate gratuity and new total\\ntip_amount = subtotal * (tip_rate / 100.0)\\ntotal = subtotal + tip_amount\\n\\n# Display the result\\nprint(\\\"Subtotal: ${:\\u003e7.2f}\\\".format(subtotal))\\nprint(\\\"Tip:      ${:\\u003e7.2f}\\\".format(tip_amount))\\nprint(\\\"Total:    ${:\\u003e7.2f}\\\".format(total))\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# REMINDER: your output needs to match 100%...space for space\\n# You NEED to use formatted printing here\\n\"],\"t\":1613079213000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16454,
    "title": "Lab03_Problem07_CarRoute",
    "prompt_md": "## Statement\n\nA car can cover a distance of **N** kilometers per day. How many days will it take to cover a route of length **M** kilometers? The program gets two numbers: N and M. The first line of input contains a single integer, **N**. And the second line of input also contains a single integer, **M**.\n\n### Example input\n\n```plaintext\n700\n750\n```\n\n###  Example output\n\n```plaintext\n2\n```\n\nHint: use ceil (and you can find “ceil”, with examples, in the Chapter 3 notes)",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"100\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n999\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"101\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n1001\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"100\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n1000\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n81\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n70\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n19\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n15\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"700\\n2100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"700\\n750\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"from math import ceil\\n\\nn = int(input())\\nm = int(input())\\nprint(ceil(m / n))\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613477068000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16455,
    "title": "Lab02_Problem04: Greeting",
    "prompt_md": "## Statement\n\nWrite a program that greets the user by printing the word \"Hello\", a comma, the name of the user and an exclamation mark after it. See the examples below.\n\n**Warning.** Your program's output should strictly match the desired one, character by character. There shouldn't be any space between the name and the exclamation mark. You can use + operator to concatenate two strings. See the lesson for details.\n\n### Example input\n\n```plaintext\nHarry\n```\n\n###  Example output\n\n```plaintext\nHello, Harry!\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read the name and save it into a variable\\n\\n\\n# Now print Hello with a comma, then the name, and then an exclamation point.\\n# Hint: use      sep = \\\"\\\"   as a parameter to remove extra spaces\\n#       - go check the slides for Chapter 2 on how we did this if you are unsure\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Hello, Lord Voldemort!\",\"stdoutCompareMethod\":\"equals\",\"stdin\":\"Lord Voldemort\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Hello, Mr. Potter!\",\"stdoutCompareMethod\":\"equals\",\"stdin\":\"Mr. Potter\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Hello, Harry!\",\"stdoutCompareMethod\":\"equals\",\"stdin\":\"Harry\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read the name and save it into a variable\\nname = input()\\n\\n\\n# Now print Hello with a comma, then the name, and then an exclamation point.\\n# Hint: use      sep = \\\"\\\"\\nprint(\\\"Hello, \\\", name, \\\"!\\\", sep = \\\"\\\")\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read the name and save it into a variable\\n\\n\\n# Now print Hello with a comma, then the name, and then an exclamation point.\\n# Hint: use      sep = \\\"\\\"   as a parameter to remove extra spaces\\n#       - go check the slides for Chapter 2 on how we did this if you are unsure\"],\"t\":1613078937000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16456,
    "title": "Lab02_Problem03: Simple Sum",
    "prompt_md": "## Statement\n\nWrite a program that takes three numbers and prints their sum. Every number is given on a separate line.\n\n### Example input\n\n```plaintext\n2\n3\n6\n```\n\n###  Example output\n\n```plaintext\n11\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# This program reads two numbers and prints their sum:\\na = int(input())\\nb = int(input())\\nprint(a + b)\\n\\n# Can you change it so it can read and sum three numbers?\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"158\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-5\\n180\\n-17\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"320\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\\n20\\n300\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"11\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n3\\n6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nb = int(input())\\nc = int(input())\\nprint(a + b + c)\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# This program reads two numbers and prints their sum:\\na = int(input())\\nb = int(input())\\nprint(a + b)\\n\\n# Can you change it so it can read and sum three numbers?\"],\"t\":1613078933000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16457,
    "title": "Lab02_Problem05: Area of Triangle",
    "prompt_md": "## Statement\n\nWrite a program that reads the length of the base and the height of a right-angled triangle and prints the area. Every number is given on a separate line.\n\n![](http://i.imgur.com/6EkzVxA.jpg)\n\n### Example input\n\n```plaintext\n3\n5\n```\n\n###  Example output\n\n```plaintext\n7.5\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read b and h\\n\\n\\n# Calculate the area\\n\\n\\n# Print the result\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"43975.5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1543\\n57\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"137293.0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179\\n1534\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10.0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7.5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read b and h\\nb = int(input())\\nh = int(input())\\n\\n# Calculate the area\\n\\n\\n# Print the result\\nb = int(input())\\nh = int(input())\\nprint(b * h / 2)\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read b and h\\n\\n\\n# Calculate the area\\n\\n\\n# Print the result\"],\"t\":1613079153000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16458,
    "title": "Lab00_Problem01: Hello World!",
    "prompt_md": "\nWrite a single line of code that produces the following output:\n\n`Hello World!`\n\n\n\n",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Write your code below\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Hello World!\",\"stdoutCompareMethod\":\"equals\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Write your code below\\nprint(\\\"Hello World!\\\")\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Write your code below\"],\"t\":1611519186000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16459,
    "title": "Lab01_Problem04: Math Printing",
    "prompt_md": "Write a program that prints the following table:\n\n```plaintext\na     a^2    a^3\n1     1      1\n2     4      8\n3     9      27\n4     16     64\n```\n\nYou should use a variable for the values of \"a\" on each line, and then simply multiple that variable, a, by itself two or three times to get the desired results.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\nprint(\\\"a     a^2    a^3\\\")\\n\\na = 1\\n# now, below this comment, print the row for when a is 1\\n\\na = 2\\n# now, below this comment, print the row for when a is 2\\n\\n\\n# and now, below this comment, finish for a = 3 and a = 4\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"a     a^2    a^3\\n1     1      1\\n2     4      8\\n3     9      27\\n4     16     64\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# # Dr Jonathan Cazalas\\n# Date Created:       08/31/18\\n# Date Last Modified: 08/31/18\\n#\\n# CSC 2280: Lab 1\\n#           Problem 4\\nprint(\\\"a     a^2    a^3\\\")\\na = 1\\nprint(a, \\\"   \\\", a*a, \\\"    \\\", a*a*a)\\na = 2\\nprint(a, \\\"   \\\", a*a, \\\"    \\\", a*a*a)\\na = 3\\nprint(a, \\\"   \\\", a*a, \\\"    \\\", a*a*a)\\na = 4\\nprint(a, \\\"   \\\", a*a, \\\"   \\\", a*a*a)\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Include your Name and ID as a comment before typing your code\\n# Name: \\n# ID: \\nprint(\\\"a     a^2    a^3\\\")\\n\\na = 1\\n# now, below this comment, print the row for when a is 1\\n\\na = 2\\n# now, below this comment, print the row for when a is 2\\n\\n\\n# and now, below this comment, finish for a = 3 and a = 4\"],\"t\":1611519678000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16460,
    "title": "Lab03_Problem03: Last Two Digits",
    "prompt_md": "## Statement\n\nGiven an integer greater than 9, print its last two digits.\n\n### Example input\n\n```plaintext\n1234\n```\n\n###  Example output\n\n```plaintext\n34\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"10\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"182310\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"49\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"82649\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"64\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"64\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"67\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"567\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"34\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1234\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nprint(a % 100)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613476828000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16461,
    "title": "Lab03_Problem04: Tens Digit",
    "prompt_md": "## Statement\n\nGiven an integer, print its tens digit.\n\n### Example input\n\n```plaintext\n1234\n```\n\n###  Example output\n\n```plaintext\n3\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1000000\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"8\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"987\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"73\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1234\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"print(int(input()) % 100 // 10)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613476832000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16462,
    "title": "Lab03_Problem10_SchoolDesks",
    "prompt_md": "## Statement\n\nA school decided to replace the desks in three classrooms. Each desk sits two students. Given the number of students in each class, print the smallest possible number of desks that can be purchased.\n\nThe program should read three integers: the number of students in each of the three classes, a, b, and c, respectively.\n\n### Example input\n\n```plaintext\n20\n21\n22\n```\n\n###  Example output\n\n```plaintext\n32\n```\n\n**Explanation of sample above:**\n\n*   In the first test, there are three groups.\n*   The first group has 20 students and thus needs 10 desks.\n*   The second group has 21 students, so they can get by with no fewer than 11 desks.\n*   11 desks are also enough for the third group of 22 students.\n*   So we need 32 desks in total.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"28\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"17\\n19\\n18\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"36\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"25\\n21\\n23\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"31\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"26\\n20\\n16\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"32\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"20\\n21\\n22\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nb = int(input())\\nc = int(input())\\nprint(a // 2 + a % 2 + b // 2 + b % 2 + c // 2 + c % 2)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613477077000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16463,
    "title": "Lab03_Problem09_ClockFace",
    "prompt_md": "## Statement\n\nThe hour hand of an analog clock turned x degrees since midnight. Determine the angle by which the minute-hand turned since the start of the current hour. The input is the angle x (in degrees). Your output should also be in degrees, and should represent the angle which the minute-hand turned since the current hour. The input and output in this problem are given as integers.\n\n### Example input\n\n```plaintext\n190\n```\n\n**(6:20)**\n\n### Example output\n\n```plaintext\n120\n```\n\n**(20 min)**\n\n### Quick Explanation of Input/Output\n\n190 represents the angle x in degrees. This equates to 380 minutes. And from 380 minutes, we get 6 hours (6 x 60 = 360) and an extra 20 minutes remaining (360 + 20 = 380). So now we found the 20 minutes that have elapsed since the start of the new hour. The final step is to identify how many degrees of the \"circle\" (where the top represents zero degrees) have been traversed by the minute hand. The answer is 120 degrees.\n\n### Longer Explanation of Input/Output\n\nThe Quick Explanation above should suffice if you draw out a circle, reflect on how many degrees are on the circle, along with home many hours (12) and minutes (60) are in a full “circle” of a clock face. That said, a more detailed explanation is below:\n\n*   The input is 190. This is in degrees! Why? Because this represents the angle that the hour-hand turned since midnight. \"But what does this mean?\", you ask. Well, let's think about it...\n*   How many degrees are in a circle? 360.\n*   And how many minutes are in a full \"circle\" of the clock? Meaning, once the hour-hand of the clock makes a full revolution, how many minutes have elapsed? 720.\n*   How? Well, 12 hours elapsed, and 12 hours times 60 minutes for each hour comes to 720 minutes.\n*   You now have a way to equate the total degrees of a circle (360) to the total minutes of a circle (720).\n*   And you could do this for a partial circle. For example, a half-circle has 180 degrees, which could also be expressed as 360 minutes (6 hours x 60 minutes each hour).\n*   So this problem gives you the angle x. You then need to determine the total # of minutes that the angle x represents.\n*   For this sample input of 190, the total number of minutes elapsed by the hour hand is 380 minutes.\n*   Next, you need to determine how many hours and how many remaining minutes are represented by those 380 minutes.\n*   From 380 minutes, we get 6 hours (6 x 60 = 360) and an extra 20 minutes remaining (360 + 20 = 380).\n*   So now we found the 20 minutes that have elapsed since the start of the new hour.\n*   The final step is to identify how many degrees the minute hand has moved since the start of the new hour.\n*   For this example, the counting of degrees starts at the top of the clock face, when the minute-hand is at minute zero. So now we are at minute 20. Now, as 20 represents 1/3 of an hour, you can guess that we've moved 1/3 the way around the circle. And considering that a circle has a total of 360 degrees, you can further guess that the answer is 1/3 of those total degrees, which is 120, the correct answer!\n*   But to get this answer, it's better to have a similar process to what was done above. Ask yourself a question: how many minutes are there in a \"full circle\" of the clock? And how many total degrees are there in a full circle of the clock?\n*   Now, with those two answers, make a relationship between each minute and the number of degrees represented by that minute, and you will have arrived at your answer!\n\n### A Heads Up...\n\nThe detailed explanation above is just to help you fully understand those numbers and what they mean. That said, in fact, for those who understand the problem 100%, there is a shortcut to getting the answer...BOTH ways are correct, one is just a lot easier.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC15\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"12\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC14\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"348\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"359\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC13\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"300\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC12\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"348\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"59\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC11\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"120\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"40\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC10\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"12\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"31\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC9\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"30\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC8\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"348\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"29\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"300\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"25\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"240\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"20\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"180\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"15\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"120\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"60\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"120\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"190\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"print(int(input()) % 30 * 12)\\n\\n# One line is all it takes!\\n\\n# \\\"What? How???\\\"\\n\\n# Explanation using 190 as the input example:\\n# - 190 was the number of degrees the hour hand had moved since midnight\\n# - So the question is, within this number of degrees, how many FULL hours\\n#   had the hour hand moved and how many partial hours had it moved?\\n# - As there are 12 hours in a \\\"circle\\\" (clock face) and there are 360 total\\n#   degrees in that same circle, we see every hour is represented by 30 degrees.\\n# - So if we *Integer Divide* 190 by 30 (190 // 30), that would give us the FULL\\n#   number of hours in 190 degrees...which is 6 full hours...that should make \\n#   sense, right.?. If 180 degrees is a half circle, 190 is just past half!\\n# - Now, we don't care about finding those 6 full hours (the 190 // 6).\\n# - BUT, we do care about knowing how many PARTIAL hours have elapsed!\\n# - And the partial hours is simply the remainder...190 % 6, which is 10.\\n# - Hmmm. So what does this 10 mean and how can we use it???\\n# - This is the number of PARTIAL hours that the HOUR hand moved.\\n# - Remember that 30 degrees is one full hour.\\n# - So 10 degrees is 1/3 of that...20 minutes.\\n# - What is 5 degrees of the hour hand? 10 minutes\\n# - What about just 1 degree of the hour hand? That is exactly 2 minutes.\\n# - Final step is to identify how many degrees each MINUTE of the MINUTE hand is?\\n# - The minute has 60 minutes in a full circle (clock face), and that same\\n#   circle is made up of 360 degrees...so each minute is represented by 60 degrees!\\n# - So consider the following now:\\n#   - 1 degree of the hour hand\\n#   - equals 2 minutes of actual time\\n#   - with each minute of actual time represented by 6 degrees of the minute hand\\n# - Thus, 1 degree of hour hand equals 12 degrees of the minute hand.\\n# - So we can take the degrees of our partial hour above (which was 10) and\\n#   multiply it by 12 to get our answer.\\n\\n\",\"defaultFilePath\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1613477076000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16464,
    "title": "Lab03_Problem01: Separating Digits",
    "prompt_md": "\n# Statement\n\nGiven a two-digit integer, print its left digit (a tens digit) and then its right digit (a ones digit). Use the operator of integer division for obtaining the tens digit and the operator of taking remainder (mod) for obtaining the ones digit. \n\n\n\n# Example input\n\n```\n79\n```\n\n\n\n# Example output\n\n```\n7 9\n```\n\n# \n\n\n\n",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"5 4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"54\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7 4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"74\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"9 3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"93\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2 2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"22\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1 1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"11\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"4 0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"40\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7 9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"79\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nprint(a // 10, a % 10)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1612457472000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16465,
    "title": "Lab03_Problem02: Swapping Digits",
    "prompt_md": "## Statement\n\nGiven a two-digit integer, swap its digits and print the result.\n\n### Example input\n\n```plaintext\n79\n```\n\n###  Example output\n\n```plaintext\n97\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"63\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"36\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"71\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"17\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"22\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"22\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"84\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"48\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"97\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"79\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nprint(a % 10 * 10 + a // 10)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1612457678000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16466,
    "title": "Lab04_Problem03: Sign function",
    "prompt_md": "## Statement\n\nFor the given integer X print 1 if it's positive, -1 if it's negative, or 0 if it's equal to zero.\n\nTry to use the cascade if-elif-else for it.\n\n### Example input\n\n```plaintext\n179\n```\n\n###  Example output\n\n```plaintext\n1\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"179\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-42\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"17\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"x = int(input())\\nif x \\u003e 0:\\n  print(1)\\nelif x \\u003c 0:\\n  print(-1)\\nelse:\\n  print(0)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1614277789000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16467,
    "title": "Lab09_Problem02: Function Header Practice 2",
    "prompt_md": "## Statement\n\nWrite a function header on Line 1, called `add_two_numbers`, to complete the very small function which is given. For clarity, this function simply receives two parameters and then returns the sum of those numbers.\n\n### Function name:\n\n```plaintext\nadd_two_numbers\n```\n\n###  Function parameters:\n\n```plaintext\ntwo integers, each presenting a number to be added together\n```\n\n###  Function returns:\n\n```plaintext\nan integer, specifically it always returns the integer, 5\n```\n\n###  Examples\n\n```plaintext\nadd_two_numbers(10, 4)  ==> 14\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Erase this line and write the function header here\\n\\treturn num1 + num2\\n\\ndef main():\\n\\tprint(add_two_numbers(10, 4))\\n\\tprint(add_two_numbers(10, 4))\\n\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"unit_test\",\"title\":\"add_two_numbers\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"py3_unittest\",\"unitTestCode\":\"from main import *\\n\\nimport unittest\\n\\nclass CodingRoomsUnitTests(unittest.TestCase):\\n\\n  def test_add_two_numbers(self):\\n    self.assertEquals(add_two_numbers(10, 4), 14)\\n    self.assertEquals(add_two_numbers(100, 298), 398)\\n    self.assertEquals(add_two_numbers(236, 93892), 94128)\\n    self.assertEquals(add_two_numbers(8765, 72865), 81630)\\n    self.assertEquals(add_two_numbers(1, 99999), 100000)\\n    self.assertEquals(add_two_numbers(103456760, 354765), 103811525)\\n\\n\",\"unitTestFilePath\":\"coding_rooms_unit_tests.py\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def add_two_numbers(num1, num2):\\n    return num1 + num2\\n\\ndef main():\\n    print(add_two_numbers(10, 4))\\n    print(add_two_numbers(100, 298))\\n\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Erase this line and write the function header here\\n\\treturn num1 + num2\\n\\ndef main():\\n\\tprint(add_two_numbers(10, 4))\\n\\tprint(add_two_numbers(10, 4))\\n\\nmain()\"],\"t\":1617984378000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16468,
    "title": "Lab09_Problem03: Function Header Practice 3",
    "prompt_md": "## Statement\n\nWrite a function header on Line 1, called `negate`, which should receive a number (int or float) as a parameter. You should also write the body of the function, which should negate the given parameter and then return the negated result.\n\n### Function name:\n\n```plaintext\nnegate\n```\n\n###  Function parameters:\n\n```plaintext\na single integer or floating-point number\n```\n\n###  Function returns:\n\n```plaintext\nan integer or floating-point number, which represents the negated value of the given parameter\n```\n\n###  #Examples\n\n```plaintext\nnegate(4)   ==> -4\nnegate(-13) ==> 13\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Erase this linea and write BOTH the function header and the function body\\n\\n\\ndef main():\\n\\tprint(negate(4))\\n\\tprint(negate(-13))\\n\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"unit_test\",\"title\":\"negate\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"py3_unittest\",\"unitTestCode\":\"from main import *\\n\\nimport unittest\\n\\nclass CodingRoomsUnitTests(unittest.TestCase):\\n\\n  def test_negate(self):\\n    self.assertEquals(negate(-5), 5)\\n    self.assertEquals(negate(0), 0)\\n    self.assertEquals(negate(-245424), 245424)\\n    self.assertEquals(negate(798273987), -798273987)\\n\\n\",\"unitTestFilePath\":\"coding_rooms_unit_tests.py\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def negate(num):\\n    return num * -1\\n\\ndef main():\\n    print(negate(4))\\n    print(negate(-13))\\n\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Erase this linea and write BOTH the function header and the function body\\n\\n\\ndef main():\\n\\tprint(negate(4))\\n\\tprint(negate(-13))\\n\\nmain()\"],\"t\":1617984386000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16469,
    "title": "Lab09_Problem06: Sum Digits",
    "prompt_md": "## Statement\n\nWrite a function, `sum_digits`, which should sum all the individual digits of a given parameter.\n\nHint: you've done this before...somewhat. Try to remember when you were asked to sum together both digits of a two-digit number, such as 67. How did you isolate the 6 and the 7, individually, in order to add them together? For this problem, you'll do something similar, but in a loop.\n\n### Function name:\n\n```plaintext\nsum_digits\n```\n\n###  Function parameters:\n\n```plaintext\nan integer called \"n\"\n```\n\n###  Function returns:\n\n```plaintext\nan integer\n```\n\n###  Examples\n\n```plaintext\nsum_digits(123)       ==> 6\nsum_digits(501137)    ==> 17\nsum_digits(123456789) ==> 45\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Write your function here\\n\\n\\ndef main():\\n\\tprint(sum_digits(123))\\n\\tprint(sum_digits(501137))\\n\\tprint(sum_digits(123456789))\\n\\t\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"unit_test\",\"title\":\"sum_digits\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"py3_unittest\",\"unitTestCode\":\"from main import *\\n\\nimport unittest\\n\\nclass CodingRoomsUnitTests(unittest.TestCase):\\n\\n  def test_sum_digits(self):\\n    self.assertEquals(sum_digits(123), 6)\\n    self.assertEquals(sum_digits(501137), 17)\\n    self.assertEquals(sum_digits(123456789), 45)\\n    self.assertEquals(sum_digits(777), 21)\\n    self.assertEquals(sum_digits(999999999), 81)\\n    self.assertEquals(sum_digits(654981643), 46)\\n\\n\",\"unitTestFilePath\":\"coding_rooms_unit_tests.py\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def sum_digits(n):\\n\\t# Write your function here\\n\\tsum = 0\\n\\twhile True:\\n\\t\\tif n \\u003c 10:\\n\\t\\t\\tsum += n\\n\\t\\t\\tbreak\\n\\t\\tsum += (n % 10)\\n\\t\\tn //= 10\\n\\t\\t\\n\\treturn sum\\n\\ndef main():\\n\\tprint(sum_digits(123))\\n\\tprint(sum_digits(501137))\\n\\tprint(sum_digits(123456789))\\n\\t\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Write your function here\\n\\n\\ndef main():\\n\\tprint(sum_digits(123))\\n\\tprint(sum_digits(501137))\\n\\tprint(sum_digits(123456789))\\n\\t\\nmain()\"],\"t\":1617984617000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16470,
    "title": "Lab09_Problem01: Function Header Practice 1",
    "prompt_md": "## Statement\n\nWrite a function header on Line 1, called practice\\_one, to complete the very small function which is given. For clarity, this function has only one line of code in the body, which simply returns the value, 5.\n\n### Function name:\n\n```plaintext\npractice_one\n```\n\n###  Function parameters:\n\n```plaintext\nnone\n```\n\n###  Function returns:\n\n```plaintext\nan integer, specifically it always returns the integer, 5\n```\n\n###  Examples\n\n```plaintext\npractice_one()  ==> 5\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Erase this line and write the function header in its place\\n\\treturn 5\\n\\nprint(practice_one())\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"unit_test\",\"title\":\"practice_one\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"py3_unittest\",\"unitTestCode\":\"from main import *\\n\\nimport unittest\\n\\nclass CodingRoomsUnitTests(unittest.TestCase):\\n\\n  def test_practice_one(self):\\n    self.assertEquals(practice_one(), 5)\\n\\n\",\"unitTestFilePath\":\"coding_rooms_unit_tests.py\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def practice_one():\\n\\treturn 5\\n\\nprint(practice_one())\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Erase this line and write the function header in its place\\n\\treturn 5\\n\\nprint(practice_one())\"],\"t\":1617984377000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16471,
    "title": "Lab09_Problem05: Sum to N",
    "prompt_md": "## Statement\n\nWrite a function, which should sum all numbers between 1 and the given parameter (inclusive).\n\n### Function name:\n\n```plaintext\nsum\n```\n\n###  Function parameters:\n\n```plaintext\nan integer called \"n\"\n```\n\n###  Function returns:\n\n```plaintext\nan integer\n```\n\n###  Examples\n\n```plaintext\nsum(10)  ==> 55\nsum(100) ==> 5050\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# write the function here\\n\\t\\n\\ndef main():\\n\\tprint(sum(10))\\n\\tprint(sum(100))\\n\\t\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"unit_test\",\"title\":\"sum\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"py3_unittest\",\"unitTestCode\":\"from main import *\\n\\nimport unittest\\n\\nclass CodingRoomsUnitTests(unittest.TestCase):\\n\\n  def test_sum(self):\\n    self.assertEquals(sum(10), 55)\\n    self.assertEquals(sum(100), 5050)\\n    self.assertEquals(sum(77), 3003)\\n    self.assertEquals(sum(200), 20100)\\n    self.assertEquals(sum(213), 22791)\\n    self.assertEquals(sum(1000), 500500)\\n\\n\",\"unitTestFilePath\":\"coding_rooms_unit_tests.py\",\"feedbackOnFailure\":\"Your function is not summing correctly\",\"stdout\":\"\",\"stdoutCompareMethod\":\"\",\"stdin\":\"\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def sum(n):\\n\\t# write the method here\\n\\ttotal = 0\\n\\tfor i in range(1, n + 1):\\n\\t\\ttotal += i\\n\\treturn total\\n\\ndef main():\\n\\tprint(sum(10))\\n\\tprint(sum(100))\\n\\t\\nmain()\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# write the function here\\n\\t\\n\\ndef main():\\n\\tprint(sum(10))\\n\\tprint(sum(100))\\n\\t\\nmain()\"],\"t\":1617984601000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16472,
    "title": "Lab08_Problem00: Nested Menus",
    "prompt_md": "## Description\n\nIn short, you need to write a program with several layers of nested menus to 100% duplicate the EXACT functionality of the sample run given below.\n\nThe purpose of this problem is as a warm-up to Program 3, as it will help in solidifying your understanding of the menu-driven nested loops required in Program 3.\n\n## Sample Run\n\n```plaintext\nMain menu: Choose an option\n    1 - go to inner ABR menu\n    2 - go to inner XYR menu\n    3 - to exit\nEnter your choice (1, 2, or 3): hello\n\nInvalid selection --- Try again.\n\nMain menu: Choose an option\n    1 - go to inner ABR menu\n    2 - go to inner XYR menu\n    3 - to exit\nEnter your choice (1, 2, or 3): 4\n\nInvalid selection --- Try again.\n\nMain menu: Choose an option\n    1 - go to inner ABR menu\n    2 - go to inner XYR menu\n    3 - to exit\nEnter your choice (1, 2, or 3): 23424\n\nInvalid selection --- Try again.\n\nMain menu: Choose an option\n    1 - go to inner ABR menu\n    2 - go to inner XYR menu\n    3 - to exit\nEnter your choice (1, 2, or 3): will this work\n\nInvalid selection --- Try again.\n\nMain menu: Choose an option\n    1 - go to inner ABR menu\n    2 - go to inner XYR menu\n    3 - to exit\nEnter your choice (1, 2, or 3): 1\n\n    ABR Menu: Choose an option\n        A\n        B\n        R (return to previous menu)\n    Enter your choice: 1\n\n    Invalid selection --- Try again.\n\n    ABR Menu: Choose an option\n        A\n        B\n        R (return to previous menu)\n    Enter your choice: asdf\n\n    Invalid selection --- Try again.\n\n    ABR Menu: Choose an option\n        A\n        B\n        R (return to previous menu)\n    Enter your choice: a\n\n    You chose \"A\".\n\n    ABR Menu: Choose an option\n        A\n        B\n        R (return to previous menu)\n    Enter your choice: b\n\n    You chose \"B\".\n\n    ABR Menu: Choose an option\n        A\n        B\n        R (return to previous menu)\n    Enter your choice: c\n\n    Invalid selection --- Try again.\n\n    ABR Menu: Choose an option\n        A\n        B\n        R (return to previous menu)\n    Enter your choice: r\n\nMain menu: Choose an option\n    1 - go to inner ABR menu\n    2 - go to inner XYR menu\n    3 - to exit\nEnter your choice (1, 2, or 3): 2\n\n    XYR Menu: Choose an option\n        X\n        Y\n        R (return to previous menu)\n    Enter your choice: xray\n\n    Invalid selection --- Try again.\n\n    XYR Menu: Choose an option\n        X\n        Y\n        R (return to previous menu)\n    Enter your choice: z\n\n    Invalid selection --- Try again.\n\n    XYR Menu: Choose an option\n        X\n        Y\n        R (return to previous menu)\n    Enter your choice: x\n\n    You chose \"X\".\n\n    XYR Menu: Choose an option\n        X\n        Y\n        R (return to previous menu)\n    Enter your choice: y\n\n    You chose \"Y\".\n\n    XYR Menu: Choose an option\n        X\n        Y\n        R (return to previous menu)\n    Enter your choice: r\n\nMain menu: Choose an option\n    1 - go to inner ABR menu\n    2 - go to inner XYR menu\n    3 - to exit\nEnter your choice (1, 2, or 3): three\n\nInvalid selection --- Try again.\n\nMain menu: Choose an option\n    1 - go to inner ABR menu\n    2 - go to inner XYR menu\n    3 - to exit\nEnter your choice (1, 2, or 3): 3\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Main menu: Choose an option\\n    1 - go to inner ABR menu\\n    2 - go to inner XYR menu\\n    3 - to exit\\nEnter your choice (1, 2, or 3): \\n\\nInvalid selection --- Try again.\\n\\nMain menu: Choose an option\\n    1 - go to inner ABR menu\\n    2 - go to inner XYR menu\\n    3 - to exit\\nEnter your choice (1, 2, or 3): \\n\\nInvalid selection --- Try again.\\n\\nMain menu: Choose an option\\n    1 - go to inner ABR menu\\n    2 - go to inner XYR menu\\n    3 - to exit\\nEnter your choice (1, 2, or 3): \\n\\nInvalid selection --- Try again.\\n\\nMain menu: Choose an option\\n    1 - go to inner ABR menu\\n    2 - go to inner XYR menu\\n    3 - to exit\\nEnter your choice (1, 2, or 3): \\n\\n\\tABR Menu: Choose an option\\n\\t    A\\n\\t    B\\n\\t    R (return to previous menu)\\n\\tEnter your choice: \\n\\n\\tInvalid selection --- Try again.\\n\\n\\tABR Menu: Choose an option\\n\\t    A\\n\\t    B\\n\\t    R (return to previous menu)\\n\\tEnter your choice: \\n\\n\\tYou chose \\\"A\\\".\\n\\n\\tABR Menu: Choose an option\\n\\t    A\\n\\t    B\\n\\t    R (return to previous menu)\\n\\tEnter your choice: \\n\\n\\tYou chose \\\"B\\\".\\n\\n\\tABR Menu: Choose an option\\n\\t    A\\n\\t    B\\n\\t    R (return to previous menu)\\n\\tEnter your choice: \\n\\nMain menu: Choose an option\\n    1 - go to inner ABR menu\\n    2 - go to inner XYR menu\\n    3 - to exit\\nEnter your choice (1, 2, or 3): \\n\\n\\tXYR Menu: Choose an option\\n\\t    X\\n\\t    Y\\n\\t    R (return to previous menu)\\n\\tEnter your choice: \\n\\n\\tYou chose \\\"X\\\".\\n\\n\\tXYR Menu: Choose an option\\n\\t    X\\n\\t    Y\\n\\t    R (return to previous menu)\\n\\tEnter your choice: \\n\\n\\tYou chose \\\"Y\\\".\\n\\n\\tXYR Menu: Choose an option\\n\\t    X\\n\\t    Y\\n\\t    R (return to previous menu)\\n\\tEnter your choice: \\n\\nMain menu: Choose an option\\n    1 - go to inner ABR menu\\n    2 - go to inner XYR menu\\n    3 - to exit\\nEnter your choice (1, 2, or 3): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"THREE\\n5\\n0\\n1\\nlet's enter something wrong\\na\\nB\\nr\\n2\\nx\\ny\\nr\\n3\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Name: Dr Jonathan Cazalas\\n# Date: 10/26/2019\\n#\\n# CSC 2280 - Lab 7: Problem 1\\n#                   Practice with Nested Menus and user selections\\n\\nwhile True:\\n    print(\\\"Main menu: Choose an option\\\")\\n    print(\\\"    1 - go to inner ABR menu\\\")\\n    print(\\\"    2 - go to inner XYR menu\\\")\\n    print(\\\"    3 - to exit\\\")\\n    print(\\\"Enter your choice (1, 2, or 3): \\\", end=\\\"\\\")\\n    choice_main = input()\\n    \\n    if not choice_main.isdigit():\\n        print(\\\"\\\\nInvalid selection --- Try again.\\\")\\n        print(\\\"(You must enter a digit.)\\\\n\\\")\\n        continue\\n    \\n    choice_main = int(choice_main)\\n    \\n    if choice_main == 3:\\n        break\\n    \\n    if choice_main == 1:\\n        while True:\\n            print(\\\"\\\\n\\\\tABR Menu: Choose an option\\\")\\n            print(\\\"\\\\t    A\\\")\\n            print(\\\"\\\\t    B\\\")\\n            print(\\\"\\\\t    R (return to previous menu)\\\")\\n            print(\\\"\\\\tEnter your choice: \\\", end=\\\"\\\")\\n            choice_ABR = input()\\n        \\n            if choice_ABR.lower() == \\\"r\\\":\\n                print() # just to print an blank line before main menu\\n                break\\n        \\n            if choice_ABR.lower() == \\\"a\\\":\\n                print(\\\"\\\\n\\\\tYou chose \\\\\\\"A\\\\\\\".\\\")\\n            elif choice_ABR.lower() == \\\"b\\\":\\n                print(\\\"\\\\n\\\\tYou chose \\\\\\\"B\\\\\\\".\\\")\\n            else:\\n                print(\\\"\\\\n\\\\tInvalid selection --- Try again.\\\")\\n        \\n    elif choice_main == 2:\\n        while True:\\n            print(\\\"\\\\n\\\\tXYR Menu: Choose an option\\\")\\n            print(\\\"\\\\t    X\\\")\\n            print(\\\"\\\\t    Y\\\")\\n            print(\\\"\\\\t    R (return to previous menu)\\\")\\n            print(\\\"\\\\tEnter your choice: \\\", end=\\\"\\\")\\n            choice_XYR = input()\\n        \\n            if choice_XYR.lower() == \\\"r\\\":\\n                print() # just to print an blank line before main menu\\n                break\\n        \\n            if choice_XYR.lower() == \\\"x\\\":\\n                print(\\\"\\\\n\\\\tYou chose \\\\\\\"X\\\\\\\".\\\")\\n            elif choice_XYR.lower() == \\\"y\\\":\\n                print(\\\"\\\\n\\\\tYou chose \\\\\\\"Y\\\\\\\".\\\")\\n            else:\\n                print(\\\"\\\\n\\\\tInvalid selection --- Try again.\\\")\\n    else:\\n        print(\\\"\\\\nInvalid selection --- Try again.\\\\n\\\")\\n\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616898871000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16473,
    "title": "Lab08_Problem08: Pyramid - v1",
    "prompt_md": "## Statement\n\nWrite a program that reads a single integer from 1 to 15 and then displays a pyramid, as shown in the following sample input/output.\n\n### Example input\n\n```plaintext\n7\n```\n\n###  Example output\n\n```plaintext\n                    1\n                 2  1  2\n              3  2  1  2  3\n           4  3  2  1  2  3  4\n        5  4  3  2  1  2  3  4  5\n     6  5  4  3  2  1  2  3  4  5  6\n  7  6  5  4  3  2  1  2  3  4  5  6  7\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"                                            1\\n                                         2  1  2\\n                                      3  2  1  2  3\\n                                   4  3  2  1  2  3  4\\n                                5  4  3  2  1  2  3  4  5\\n                             6  5  4  3  2  1  2  3  4  5  6\\n                          7  6  5  4  3  2  1  2  3  4  5  6  7\\n                       8  7  6  5  4  3  2  1  2  3  4  5  6  7  8\\n                    9  8  7  6  5  4  3  2  1  2  3  4  5  6  7  8  9\\n                10  9  8  7  6  5  4  3  2  1  2  3  4  5  6  7  8  9 10\\n             11 10  9  8  7  6  5  4  3  2  1  2  3  4  5  6  7  8  9 10 11\\n          12 11 10  9  8  7  6  5  4  3  2  1  2  3  4  5  6  7  8  9 10 11 12\\n       13 12 11 10  9  8  7  6  5  4  3  2  1  2  3  4  5  6  7  8  9 10 11 12 13\\n    14 13 12 11 10  9  8  7  6  5  4  3  2  1  2  3  4  5  6  7  8  9 10 11 12 13 14\\n 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"15\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"           1\\n        2  1  2\\n     3  2  1  2  3\\n  4  3  2  1  2  3  4\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"                    1\\n                 2  1  2\\n              3  2  1  2  3\\n           4  3  2  1  2  3  4\\n        5  4  3  2  1  2  3  4  5\\n     6  5  4  3  2  1  2  3  4  5  6\\n  7  6  5  4  3  2  1  2  3  4  5  6  7\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Name: Dr Jonathan Cazalas\\n# Date: 10/25/2018\\n#\\n# CSC 2280 - Lab 8: Problem 2\\n\\nimport sys\\n\\n# Prompt the user to enter the number of lines\\nnumberOfLines = int(input())\\n\\nif numberOfLines \\u003c 1 or numberOfLines \\u003e 15:\\n    print(\\\"You must enter a number from 1 to 15\\\")\\n    sys.exit(0)\\n\\n# Print lines\\nfor row in range(1, numberOfLines + 1):\\n    # Print (NUMBER_OF_LINES - row) leading spaces\\n    for column in range(1, numberOfLines - row + 1):\\n        print(\\\"   \\\", end = \\\"\\\")\\n\\n    # Print leading numbers row, row - 1, ..., 1\\n    for num in range(row, 0, -1):\\n        print(format(num, \\\"3d\\\"), end = \\\"\\\")\\n\\n    # Print ending numbers 2, 3, ..., row - 1, row\\n    for num in range(2, row + 1):\\n        print(format(num, \\\"3d\\\"), end = \\\"\\\")\\n\\n    # Start a new line\\n    print()\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616898866000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16474,
    "title": "Lab08_Problem09: Pyramid - v2",
    "prompt_md": "## Statement\n\nWrite a program that reads a single integer from 1 to 8 and then displays a pyramid, as shown in the following sample input/output.\n\n### Example input\n\n```plaintext\n6\n```\n\n###  Example output\n\n```plaintext\n                           1\n                       1   2   1\n                   1   2   4   2   1\n               1   2   4   8   4   2   1\n           1   2   4   8  16   8   4   2   1\n       1   2   4   8  16  32  16   8   4   2   1\n   1   2   4   8  16  32  64  32  16   8   4   2   1\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"                                   1\\n                               1   2   1\\n                           1   2   4   2   1\\n                       1   2   4   8   4   2   1\\n                   1   2   4   8  16   8   4   2   1\\n               1   2   4   8  16  32  16   8   4   2   1\\n           1   2   4   8  16  32  64  32  16   8   4   2   1\\n       1   2   4   8  16  32  64 128  64  32  16   8   4   2   1\\n   1   2   4   8  16  32  64 128 256 128  64  32  16   8   4   2   1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"                               1\\n                           1   2   1\\n                       1   2   4   2   1\\n                   1   2   4   8   4   2   1\\n               1   2   4   8  16   8   4   2   1\\n           1   2   4   8  16  32  16   8   4   2   1\\n       1   2   4   8  16  32  64  32  16   8   4   2   1\\n   1   2   4   8  16  32  64 128  64  32  16   8   4   2   1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"                       1\\n                   1   2   1\\n               1   2   4   2   1\\n           1   2   4   8   4   2   1\\n       1   2   4   8  16   8   4   2   1\\n   1   2   4   8  16  32  16   8   4   2   1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Name: Dr Jonathan Cazalas\\n# Date: 10/25/2018\\n#\\n# CSC 2280 - Lab 8: Problem 3\\nn = int(input()) # Number to print\\n\\nfor row in range(n + 1):\\n    # Pad leading blanks\\n    for col in range(1, n - row + 1):\\n        print(\\\"    \\\", end = \\\"\\\")\\n\\n    # Print left half of the row\\n    for col in range(row + 1):\\n        number = 2 ** col\\n        print(format(number, \\\"4d\\\"), end = \\\"\\\")\\n\\n\\n    # Print the right half of the row\\n    for col in range(row - 1, 0 - 1, -1):\\n        number = 2 ** col\\n        print(format(number, \\\"4d\\\"), end = \\\"\\\")\\n\\n    # Start a new line\\n    print()\\n\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616898866000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16475,
    "title": "Lab08_Problem10: Prime Factors",
    "prompt_md": "## Statement\n\nGiven a single input integer, N, write a program that displays all its smallest factors, also known as prime factors.\n\nHint:\n\n*   This problem has several loops\n*   The main outer loop will keep looping until the given input number, such as 120 in the first example below, gets reduced to 1. At that point, the main outer loop will exit.\n*   Within that outer loop, you look for the first factor of 120, which happens to be 2. Once you find it, you print that factor, and you reduce 120 by that factor (so 120 / 2 = 60), and now you continue with 60 as the number.\n*   Next factor is again 2, which makes our number change to 30 (60 / 2 = 30).\n*   Next factor is again 2, which makes our number change to 15 (30 / 2 = 15).\n*   Next factor is now 3, which makes our number change to 5 (15 / 3 = 5).\n*   Next factor is 5, which makes our number change to 1 (5 / 5 = 1).\n*   Now that the number is 1, we exit the outer while loop.\n\n### Example input\n\n```plaintext\n120\n```\n\n### Example output\n\n```plaintext\n2 2 2 3 5\n```\n\n### Example input\n\n```plaintext\n168\n```\n\n### Example output\n\n```plaintext\n2 2 2 3 7 \n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2 2 2 3 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"24\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3 3 11 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"99\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2 2 5 5 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"100\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2 2 2 2 2 2 2 2 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"256\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2 2 47 1321 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"248348\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC7\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"7 7 7 \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"343\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def is_prime(n):\\n    prime = True\\n    \\n    for divisor in range(2, n - 1):\\n        if n % divisor == 0:\\n            prime = False\\n    \\n    return prime\\n\\ndef print_prime_factors(n):\\n    num = 2\\n    while n \\u003e 1:\\n        if (is_prime(num) and n % num == 0):\\n            print(num, end = \\\" \\\")\\n            n /= num\\n        else:\\n            num += 1\\n\\ndef main():\\n    n = int(input())\\n    print_prime_factors(n)\\n\\nmain()\\n\",\"defaultFilePath\":\"main.py\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1616898871000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16476,
    "title": "Lab04_Problem02: Minimum of two numbers",
    "prompt_md": "## Statement\n\nGiven the two integers, print the smaller of them.\n\n### Example input\n\n```plaintext\n3\n7\n```\n\n###  Example output\n\n```plaintext\n3\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n7\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n2\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-8\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"15\\n-8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"-15\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-15\\n-8\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"a = int(input())\\nb = int(input())\\nif a \\u003c b:\\n  print(a)\\nelse:\\n  print(b)\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"# Read an integer:\\n# a = int(input())\\n# Print a value:\\n# print(a)\\n\"],\"t\":1614277789000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 16477,
    "title": "Lab04_Problem01: EvenOdd",
    "prompt_md": "## Statement\n\nGiven an integer, print \"odd\" if it's odd and print \"even\" otherwise.\n\n### Example input #1\n\n```plaintext\n5\n```\n\n###  Example output #1\n\n```plaintext\nodd\n```\n\n###  Example input #2\n\n```plaintext\n6\n```\n\n###  Example output #2\n\n```plaintext\neven\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"TC6\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"even\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"284\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC5\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"odd\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"-891\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"even\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"odd\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"9\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"even\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"6\",\"sourceFile\":\"main.py\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"TC1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"odd\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\",\"sourceFile\":\"main.py\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"if int(input()) % 2 == 0:\\n  print('even')\\nelse:\\n  print('odd')\\n\",\"defaultFilePath\":\"main.py\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"main.py\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"\\n\\n\"],\"t\":1614277784000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 20431,
    "title": "Program 1",
    "prompt_md": "### Important comments on your submission of Program 1\n\nYou Must submit your program at two locations:\n\n1.  Most important is that you submit your Program on Canvas. And at Canvas, you must submit **both** your Python code and the PDF of your algorithm.\n2.  You must **also** submit your solution here and pass the test cases.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Initializing FSC Rent-A-Car Weekly Car Rental Report...\\r\\n\\r\\nPlease enter the number of rented vehicles for Sunday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Monday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Tuesday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Wednesday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Thursday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Friday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Saturday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\n*********              FSC Rent-A-Car Weekly Rental Report             *********\\r\\n--------------------------------------------------------------------------------\\r\\n  SUNDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               58                  16                  78.38%              \\r\\n    Luxury              29                  8                   78.38%              \\r\\n    SUV                 31                  13                  70.45%              \\r\\n  Percentage of vehicles rented: 76.13%\\r\\n\\r\\n  MONDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               61                  13                  82.43%              \\r\\n    Luxury              25                  12                  67.57%              \\r\\n    SUV                 32                  12                  72.73%              \\r\\n  Percentage of vehicles rented: 76.13%\\r\\n\\r\\n  TUESDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               60                  14                  81.08%              \\r\\n    Luxury              30                  7                   81.08%              \\r\\n    SUV                 38                  6                   86.36%              \\r\\n  Percentage of vehicles rented: 82.58%\\r\\n\\r\\n  WEDNESDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               67                  7                   90.54%              \\r\\n    Luxury              27                  10                  72.97%              \\r\\n    SUV                 35                  9                   79.55%              \\r\\n  Percentage of vehicles rented: 83.23%\\r\\n\\r\\n  THURSDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               53                  21                  71.62%              \\r\\n    Luxury              28                  9                   75.68%              \\r\\n    SUV                 37                  7                   84.09%              \\r\\n  Percentage of vehicles rented: 76.13%\\r\\n\\r\\n  FRIDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               72                  2                   97.30%              \\r\\n    Luxury              32                  5                   86.49%              \\r\\n    SUV                 44                  0                   100.00%             \\r\\n  Percentage of vehicles rented: 95.48%\\r\\n\\r\\n  SATURDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               71                  3                   95.95%              \\r\\n    Luxury              37                  0                   100.00%             \\r\\n    SUV                 43                  1                   97.73%              \\r\\n  Percentage of vehicles rented: 97.42%\\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\n\\r\\n  WEEKLY RENTAL REPORT SUMMARY\\r\\n    Sunday:    76.13%\\r\\n    Monday:    76.13%\\r\\n    Tuesday:   82.58%\\r\\n    Wednesday: 83.23%\\r\\n    Thursday:  76.13%\\r\\n    Friday:    95.48%\\r\\n    Saturday:  97.42%\\r\\n\\r\\n  Percentage of Sedans rented during the week:          85.33%\\r\\n  Percentage of Luxury vehicles rented during the week: 80.31%\\r\\n  Percentage of SUVs rented during the week:          84.42%\\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\nEND OF REPORT\\r\\n--------------------------------------------------------------------------------\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"58\\r\\n29\\r\\n31\\r\\n61\\r\\n25\\r\\n32\\r\\n60\\r\\n30\\r\\n38\\r\\n67\\r\\n27\\r\\n35\\r\\n53\\r\\n28\\r\\n37\\r\\n72\\r\\n32\\r\\n44\\r\\n71\\r\\n37\\r\\n43\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Initializing FSC Rent-A-Car Weekly Car Rental Report...\\r\\n\\r\\nPlease enter the number of rented vehicles for Sunday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Monday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Tuesday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Wednesday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Thursday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Friday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Saturday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\n*********              FSC Rent-A-Car Weekly Rental Report             *********\\r\\n--------------------------------------------------------------------------------\\r\\n  SUNDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               20                  54                  27.03%              \\r\\n    Luxury              20                  17                  54.05%              \\r\\n    SUV                 20                  24                  45.45%              \\r\\n  Percentage of vehicles rented: 38.71%\\r\\n\\r\\n  MONDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               30                  44                  40.54%              \\r\\n    Luxury              30                  7                   81.08%              \\r\\n    SUV                 30                  14                  68.18%              \\r\\n  Percentage of vehicles rented: 58.06%\\r\\n\\r\\n  TUESDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               20                  54                  27.03%              \\r\\n    Luxury              20                  17                  54.05%              \\r\\n    SUV                 20                  24                  45.45%              \\r\\n  Percentage of vehicles rented: 38.71%\\r\\n\\r\\n  WEDNESDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               25                  49                  33.78%              \\r\\n    Luxury              25                  12                  67.57%              \\r\\n    SUV                 25                  19                  56.82%              \\r\\n  Percentage of vehicles rented: 48.39%\\r\\n\\r\\n  THURSDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               15                  59                  20.27%              \\r\\n    Luxury              15                  22                  40.54%              \\r\\n    SUV                 15                  29                  34.09%              \\r\\n  Percentage of vehicles rented: 29.03%\\r\\n\\r\\n  FRIDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               10                  64                  13.51%              \\r\\n    Luxury              10                  27                  27.03%              \\r\\n    SUV                 10                  34                  22.73%              \\r\\n  Percentage of vehicles rented: 19.35%\\r\\n\\r\\n  SATURDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               34                  40                  45.95%              \\r\\n    Luxury              34                  3                   91.89%              \\r\\n    SUV                 34                  10                  77.27%              \\r\\n  Percentage of vehicles rented: 65.81%\\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\n\\r\\n  WEEKLY RENTAL REPORT SUMMARY\\r\\n    Sunday:    38.71%\\r\\n    Monday:    58.06%\\r\\n    Tuesday:   38.71%\\r\\n    Wednesday: 48.39%\\r\\n    Thursday:  29.03%\\r\\n    Friday:    19.35%\\r\\n    Saturday:  65.81%\\r\\n\\r\\n  Percentage of Sedans rented during the week:          29.73%\\r\\n  Percentage of Luxury vehicles rented during the week: 59.46%\\r\\n  Percentage of SUVs rented during the week:            50.00%\\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\nEND OF REPORT\\r\\n--------------------------------------------------------------------------------\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"20\\r\\n20\\r\\n20\\r\\n30\\r\\n30\\r\\n30\\r\\n20\\r\\n20\\r\\n20\\r\\n25\\r\\n25\\r\\n25\\r\\n15\\r\\n15\\r\\n15\\r\\n10\\r\\n10\\r\\n10\\r\\n34\\r\\n34\\r\\n34\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc3\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Initializing FSC Rent-A-Car Weekly Car Rental Report...\\r\\n\\r\\nPlease enter the number of rented vehicles for Sunday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Monday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Tuesday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Wednesday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Thursday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Friday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Saturday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\n*********              FSC Rent-A-Car Weekly Rental Report             *********\\r\\n--------------------------------------------------------------------------------\\r\\n  SUNDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               37                  37                  50.00%              \\r\\n    Luxury              27                  10                  72.97%              \\r\\n    SUV                 29                  15                  65.91%              \\r\\n  Percentage of vehicles rented: 60.00%\\r\\n\\r\\n  MONDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               57                  17                  77.03%              \\r\\n    Luxury              20                  17                  54.05%              \\r\\n    SUV                 31                  13                  70.45%              \\r\\n  Percentage of vehicles rented: 69.68%\\r\\n\\r\\n  TUESDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               58                  16                  78.38%              \\r\\n    Luxury              29                  8                   78.38%              \\r\\n    SUV                 31                  13                  70.45%              \\r\\n  Percentage of vehicles rented: 76.13%\\r\\n\\r\\n  WEDNESDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               65                  9                   87.84%              \\r\\n    Luxury              26                  11                  70.27%              \\r\\n    SUV                 30                  14                  68.18%              \\r\\n  Percentage of vehicles rented: 78.06%\\r\\n\\r\\n  THURSDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               59                  15                  79.73%              \\r\\n    Luxury              33                  4                   89.19%              \\r\\n    SUV                 28                  16                  63.64%              \\r\\n  Percentage of vehicles rented: 77.42%\\r\\n\\r\\n  FRIDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               72                  2                   97.30%              \\r\\n    Luxury              33                  4                   89.19%              \\r\\n    SUV                 41                  3                   93.18%              \\r\\n  Percentage of vehicles rented: 94.19%\\r\\n\\r\\n  SATURDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               70                  4                   94.59%              \\r\\n    Luxury              35                  2                   94.59%              \\r\\n    SUV                 40                  4                   90.91%              \\r\\n  Percentage of vehicles rented: 93.55%\\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\n\\r\\n  WEEKLY RENTAL REPORT SUMMARY\\r\\n    Sunday:    60.00%\\r\\n    Monday:    69.68%\\r\\n    Tuesday:   76.13%\\r\\n    Wednesday: 78.06%\\r\\n    Thursday:  77.42%\\r\\n    Friday:    94.19%\\r\\n    Saturday:  93.55%\\r\\n\\r\\n  Percentage of Sedans rented during the week:          80.69%\\r\\n  Percentage of Luxury vehicles rented during the week: 78.38%\\r\\n  Percentage of SUVs rented during the week:          74.68%\\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\nEND OF REPORT\\r\\n--------------------------------------------------------------------------------\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"37\\r\\n27\\r\\n29\\r\\n57\\r\\n20\\r\\n31\\r\\n58\\r\\n29\\r\\n31\\r\\n65\\r\\n26\\r\\n30\\r\\n59\\r\\n33\\r\\n28\\r\\n72\\r\\n33\\r\\n41\\r\\n70\\r\\n35\\r\\n40\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc4\",\"headline\":\"\",\"points\":100,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Initializing FSC Rent-A-Car Weekly Car Rental Report...\\r\\n\\r\\nPlease enter the number of rented vehicles for Sunday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Monday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Tuesday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Wednesday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Thursday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Friday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\nPlease enter the number of rented vehicles for Saturday:\\r\\n    Number of sedan cars rented: \\r\\n    Number of luxury cars rented: \\r\\n    Number of SUVs rented: \\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\n*********              FSC Rent-A-Car Weekly Rental Report             *********\\r\\n--------------------------------------------------------------------------------\\r\\n  SUNDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               37                  37                  50.00%              \\r\\n    Luxury              37                  0                   100.00%             \\r\\n    SUV                 37                  7                   84.09%              \\r\\n  Percentage of vehicles rented: 71.61%\\r\\n\\r\\n  MONDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               29                  45                  39.19%              \\r\\n    Luxury              20                  17                  54.05%              \\r\\n    SUV                 12                  32                  27.27%              \\r\\n  Percentage of vehicles rented: 39.35%\\r\\n\\r\\n  TUESDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               19                  55                  25.68%              \\r\\n    Luxury              14                  23                  37.84%              \\r\\n    SUV                 21                  23                  47.73%              \\r\\n  Percentage of vehicles rented: 34.84%\\r\\n\\r\\n  WEDNESDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               34                  40                  45.95%              \\r\\n    Luxury              21                  16                  56.76%              \\r\\n    SUV                 20                  24                  45.45%              \\r\\n  Percentage of vehicles rented: 48.39%\\r\\n\\r\\n  THURSDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               30                  44                  40.54%              \\r\\n    Luxury              37                  0                   100.00%             \\r\\n    SUV                 20                  24                  45.45%              \\r\\n  Percentage of vehicles rented: 56.13%\\r\\n\\r\\n  FRIDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               18                  56                  24.32%              \\r\\n    Luxury              17                  20                  45.95%              \\r\\n    SUV                 11                  33                  25.00%              \\r\\n  Percentage of vehicles rented: 29.68%\\r\\n\\r\\n  SATURDAY\\r\\n    Vehicle Type        Number Rented       Number Unrented     Percent Rented      \\r\\n    Sedan               33                  41                  44.59%              \\r\\n    Luxury              18                  19                  48.65%              \\r\\n    SUV                 29                  15                  65.91%              \\r\\n  Percentage of vehicles rented: 51.61%\\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\n\\r\\n  WEEKLY RENTAL REPORT SUMMARY\\r\\n    Sunday:    71.61%\\r\\n    Monday:    39.35%\\r\\n    Tuesday:   34.84%\\r\\n    Wednesday: 48.39%\\r\\n    Thursday:  56.13%\\r\\n    Friday:    29.68%\\r\\n    Saturday:  51.61%\\r\\n\\r\\n  Percentage of Sedans rented during the week:          38.61%\\r\\n  Percentage of Luxury vehicles rented during the week: 63.32%\\r\\n  Percentage of SUVs rented during the week:            48.70%\\r\\n\\r\\n--------------------------------------------------------------------------------\\r\\nEND OF REPORT\\r\\n--------------------------------------------------------------------------------\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"37\\r\\n37\\r\\n37\\r\\n29\\r\\n20\\r\\n12\\r\\n19\\r\\n14\\r\\n21\\r\\n34\\r\\n21\\r\\n20\\r\\n30\\r\\n37\\r\\n20\\r\\n18\\r\\n17\\r\\n11\\r\\n33\\r\\n18\\r\\n29\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":null},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1613528918000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 22447,
    "title": "Program 2",
    "prompt_md": "### Important comments on your submission of Program 2\n\nYou Must submit your program at two locations:\n\n1.  Most important is that you submit your Program on Canvas. And at Canvas, you must submit **both** your Python code and the PDF of your algorithm.\n2.  You must **also** submit your solution here and pass the test cases.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"print(\\\"Hello, world! This is Python 3!\\\")\\n\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":null}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"Main Menu Validation 1\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n\\u003e Invalid choice selected. Goodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"make sure this doesn't crash the program\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Main Menu Validation 2\",\"headline\":\"\",\"points\":1,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n\\u003e Invalid choice selected. Goodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Main Menu Validation 3\",\"headline\":\"\",\"points\":1,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n\\u003e Invalid choice selected. Goodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Validate345 - 1\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n++++++++++      Addition Practice       ++++++++++\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\nHow many questions would you like (3, 4, or 5):\\n\\n\\u003e You entered an invalid quantity. Goodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\nmake sure this doesn't crash either\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Validate345 - 2\",\"headline\":\"\",\"points\":1,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n++++++++++      Addition Practice       ++++++++++\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\nHow many questions would you like (3, 4, or 5): \\n\\n\\u003e You entered an invalid quantity. Goodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n6\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Validate345 - 3\",\"headline\":\"\",\"points\":1,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n++++++++++      Addition Practice       ++++++++++\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\nHow many questions would you like (3, 4, or 5): \\n\\n\\u003e You entered an invalid quantity. Goodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Mult-3-Correct\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxx   Multiplication Practice    xxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following three questions: \\n\\n1. 9 x 2 = \\n   Great job! Your answer is correct!\\n\\n2. 10 x 7 = \\n   Great job! Your answer is correct!\\n\\n3. 1 x 6 = \\n   Great job! Your answer is correct!\\n\\nYou answered 3 out of 3 questions correct.\\nYour score is 100.00%.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n3\\n18\\n70\\n6\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Mult-4-Correct\",\"headline\":\"\",\"points\":4,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxx   Multiplication Practice    xxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following four questions: \\n\\n1. 9 x 2 = \\n   Great job! Your answer is correct!\\n\\n2. 10 x 7 = \\n   Great job! Your answer is correct!\\n\\n3. 1 x 6 = \\n   Great job! Your answer is correct!\\n\\n4. 5 x 8 = \\n   Great job! Your answer is correct!\\n\\nYou answered 4 out of 4 questions correct.\\nYour score is 100.00%.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n4\\n18\\n70\\n6\\n40\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Mult-5-Correct\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxx   Multiplication Practice    xxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following five questions: \\n\\n1. 9 x 2 = \\n   Great job! Your answer is correct!\\n\\n2. 10 x 7 = \\n   Great job! Your answer is correct!\\n\\n3. 1 x 6 = \\n   Great job! Your answer is correct!\\n\\n4. 5 x 8 = \\n   Great job! Your answer is correct!\\n\\n5. 12 x 2 = \\n   Great job! Your answer is correct!\\n\\nYou answered 5 out of 5 questions correct.\\nYour score is 100.00%.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n5\\n18\\n70\\n6\\n40\\n24\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Mult-3-2Wrong\",\"headline\":\"\",\"points\":2,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxx   Multiplication Practice    xxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following three questions: \\n\\n1. 9 x 2 = \\n   That is not correct. The correct answer is:\\n   9 x 2 = 18\\n\\n2. 10 x 7 = \\n   That is not correct. The correct answer is:\\n   10 x 7 = 70\\n\\n3. 1 x 6 = \\n   Great job! Your answer is correct!\\n\\nYou answered 1 out of 3 questions correct.\\nYour score is 33.33%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   9 x 2 = 18\\n   10 x 7 = 70\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n3\\n15\\n60\\n6\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Mult-4-3Wrong\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxx   Multiplication Practice    xxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following four questions: \\n\\n1. 9 x 2 = \\n   That is not correct. The correct answer is:\\n   9 x 2 = 18\\n\\n2. 10 x 7 = \\n   That is not correct. The correct answer is:\\n   10 x 7 = 70\\n\\n3. 1 x 6 = \\n   Great job! Your answer is correct!\\n\\n4. 5 x 8 = \\n   That is not correct. The correct answer is:\\n   5 x 8 = 40\\n\\nYou answered 1 out of 4 questions correct.\\nYour score is 25.00%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   9 x 2 = 18\\n   10 x 7 = 70\\n   5 x 8 = 40\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n4\\n10\\n60\\n6\\n18\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Mult-5-AllWrong\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxx   Multiplication Practice    xxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following five questions: \\n\\n1. 9 x 2 = \\n   That is not correct. The correct answer is:\\n   9 x 2 = 18\\n\\n2. 10 x 7 = \\n   That is not correct. The correct answer is:\\n   10 x 7 = 70\\n\\n3. 1 x 6 = \\n   That is not correct. The correct answer is:\\n   1 x 6 = 6\\n\\n4. 5 x 8 = \\n   That is not correct. The correct answer is:\\n   5 x 8 = 40\\n\\n5. 12 x 2 = \\n   That is not correct. The correct answer is:\\n   12 x 2 = 24\\n\\nYou answered 0 out of 5 questions correct.\\nYour score is 0.00%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   9 x 2 = 18\\n   10 x 7 = 70\\n   1 x 6 = 6\\n   5 x 8 = 40\\n   12 x 2 = 24\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n5\\n1\\n1\\n1\\n1\\n1\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Div-3-Correct\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷      Division Practice       ÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following three questions: \\n\\n1. 18 / 9 = \\n   Great job! Your answer is correct!\\n\\n2. 70 / 10 = \\n   Great job! Your answer is correct!\\n\\n3. 6 / 1 = \\n   Great job! Your answer is correct!\\n\\nYou answered 3 out of 3 questions correct.\\nYour score is 100.00%.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n3\\n2\\n7\\n6\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Div-4-Correct\",\"headline\":\"\",\"points\":4,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷      Division Practice       ÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following four questions: \\n\\n1. 18 / 9 = \\n   Great job! Your answer is correct!\\n\\n2. 70 / 10 = \\n   Great job! Your answer is correct!\\n\\n3. 6 / 1 = \\n   Great job! Your answer is correct!\\n\\n4. 40 / 5 = \\n   Great job! Your answer is correct!\\n\\nYou answered 4 out of 4 questions correct.\\nYour score is 100.00%.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n2\\n7\\n6\\n8\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Div-5-Correct\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷      Division Practice       ÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following five questions: \\n\\n1. 18 / 9 = \\n   Great job! Your answer is correct!\\n\\n2. 70 / 10 = \\n   Great job! Your answer is correct!\\n\\n3. 6 / 1 = \\n   Great job! Your answer is correct!\\n\\n4. 40 / 5 = \\n   Great job! Your answer is correct!\\n\\n5. 24 / 12 = \\n   Great job! Your answer is correct!\\n\\nYou answered 5 out of 5 questions correct.\\nYour score is 100.00%.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n5\\n2\\n7\\n6\\n8\\n2\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Div-3-2Wrong\",\"headline\":\"\",\"points\":2,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷      Division Practice       ÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following three questions: \\n\\n1. 18 / 9 = \\n   Great job! Your answer is correct!\\n\\n2. 70 / 10 = \\n   That is not correct. The correct answer is:\\n   70 / 10 = 7\\n\\n3. 6 / 1 = \\n   That is not correct. The correct answer is:\\n   6 / 1 = 6\\n\\nYou answered 1 out of 3 questions correct.\\nYour score is 33.33%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   70 / 10 = 7\\n   6 / 1 = 6\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n3\\n2\\n80\\n5\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Div-4-3Wrong\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷      Division Practice       ÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following four questions: \\n\\n1. 18 / 9 = \\n   That is not correct. The correct answer is:\\n   18 / 9 = 2\\n\\n2. 70 / 10 = \\n   Great job! Your answer is correct!\\n\\n3. 6 / 1 = \\n   That is not correct. The correct answer is:\\n   6 / 1 = 6\\n\\n4. 40 / 5 = \\n   That is not correct. The correct answer is:\\n   40 / 5 = 8\\n\\nYou answered 1 out of 4 questions correct.\\nYour score is 25.00%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   18 / 9 = 2\\n   6 / 1 = 6\\n   40 / 5 = 8\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n4\\n3\\n7\\n1\\n9\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Div-5-AllWrong\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷      Division Practice       ÷÷÷÷÷÷÷÷÷÷\\n÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷÷\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAnswer the following five questions: \\n\\n1. 18 / 9 = \\n   That is not correct. The correct answer is:\\n   18 / 9 = 2\\n\\n2. 70 / 10 = \\n   That is not correct. The correct answer is:\\n   70 / 10 = 7\\n\\n3. 6 / 1 = \\n   That is not correct. The correct answer is:\\n   6 / 1 = 6\\n\\n4. 40 / 5 = \\n   That is not correct. The correct answer is:\\n   40 / 5 = 8\\n\\n5. 24 / 12 = \\n   That is not correct. The correct answer is:\\n   24 / 12 = 2\\n\\nYou answered 0 out of 5 questions correct.\\nYour score is 0.00%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   18 / 9 = 2\\n   70 / 10 = 7\\n   6 / 1 = 6\\n   40 / 5 = 8\\n   24 / 12 = 2\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"4\\n5\\n0\\n0\\n0\\n0\\n0\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Add-one-5-correct\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n++++++++++      Addition Practice       ++++++++++\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nWould you like one or two digit numbers (one/two): \\n\\nAnswer the following five questions: \\n\\n1. 9 + 2 = \\n   Great job! Your answer is correct!\\n\\n2. 7 + 1 = \\n   Great job! Your answer is correct!\\n\\n3. 6 + 5 = \\n   Great job! Your answer is correct!\\n\\n4. 8 + 2 = \\n   Great job! Your answer is correct!\\n\\n5. 4 + 1 = \\n   Great job! Your answer is correct!\\n\\nYou answered 5 out of 5 questions correct.\\nYour score is 100.00%.\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n5\\none\\n11\\n8\\n11\\n10\\n5\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Add-one-5-incorrect\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n++++++++++      Addition Practice       ++++++++++\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nWould you like one or two digit numbers (one/two): \\n\\nAnswer the following five questions: \\n\\n1. 9 + 2 = \\n   That is not correct. The correct answer is:\\n   9 + 2 = 11\\n\\n2. 7 + 1 = \\n   That is not correct. The correct answer is:\\n   7 + 1 = 8\\n\\n3. 6 + 5 = \\n   That is not correct. The correct answer is:\\n   6 + 5 = 11\\n\\n4. 8 + 2 = \\n   That is not correct. The correct answer is:\\n   8 + 2 = 10\\n\\n5. 4 + 1 = \\n   That is not correct. The correct answer is:\\n   4 + 1 = 5\\n\\nYou answered 0 out of 5 questions correct.\\nYour score is 0.00%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   9 + 2 = 11\\n   7 + 1 = 8\\n   6 + 5 = 11\\n   8 + 2 = 10\\n   4 + 1 = 5\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n5\\none\\n0\\n0\\n0\\n0\\n0\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Add-two-5-correct\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n++++++++++      Addition Practice       ++++++++++\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nWould you like one or two digit numbers (one/two): \\n\\nAnswer the following five questions: \\n\\n1. 81 + 19 = \\n   Great job! Your answer is correct!\\n\\n2. 86 + 64 = \\n   Great job! Your answer is correct!\\n\\n3. 16 + 56 = \\n   Great job! Your answer is correct!\\n\\n4. 45 + 67 = \\n   Great job! Your answer is correct!\\n\\n5. 24 + 38 = \\n   Great job! Your answer is correct!\\n\\nYou answered 5 out of 5 questions correct.\\nYour score is 100.00%.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n5\\ntwo\\n100\\n150\\n72\\n112\\n62\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Add-two-5-incorrect\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n++++++++++      Addition Practice       ++++++++++\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nWould you like one or two digit numbers (one/two): \\n\\nAnswer the following five questions: \\n\\n1. 81 + 19 = \\n   That is not correct. The correct answer is:\\n   81 + 19 = 100\\n\\n2. 86 + 64 = \\n   That is not correct. The correct answer is:\\n   86 + 64 = 150\\n\\n3. 16 + 56 = \\n   That is not correct. The correct answer is:\\n   16 + 56 = 72\\n\\n4. 45 + 67 = \\n   That is not correct. The correct answer is:\\n   45 + 67 = 112\\n\\n5. 24 + 38 = \\n   That is not correct. The correct answer is:\\n   24 + 38 = 62\\n\\nYou answered 0 out of 5 questions correct.\\nYour score is 0.00%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   81 + 19 = 100\\n   86 + 64 = 150\\n   16 + 56 = 72\\n   45 + 67 = 112\\n   24 + 38 = 62\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n5\\ntwo\\n0\\n0\\n0\\n0\\n0\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"sub-negok-5-correct\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n--------------------------------------------------\\n----------     Subtraction Practice     ----------\\n--------------------------------------------------\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAre negative answers okay (y/n): \\n\\nAnswer the following five questions: \\n\\n1. 9 - 2 = \\n   Great job! Your answer is correct!\\n\\n2. 10 - 7 = \\n   Great job! Your answer is correct!\\n\\n3. 1 - 6 = \\n   Great job! Your answer is correct!\\n\\n4. 5 - 8 = \\n   Great job! Your answer is correct!\\n\\n5. 12 - 2 = \\n   Great job! Your answer is correct!\\n\\nYou answered 5 out of 5 questions correct.\\nYour score is 100.00%.\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n5\\ny\\n7\\n3\\n-5\\n-3\\n10\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"sub-negok-5-incorrect\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n--------------------------------------------------\\n----------     Subtraction Practice     ----------\\n--------------------------------------------------\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAre negative answers okay (y/n): \\n\\nAnswer the following five questions: \\n\\n1. 9 - 2 = \\n   That is not correct. The correct answer is:\\n   9 - 2 = 7\\n\\n2. 10 - 7 = \\n   That is not correct. The correct answer is:\\n   10 - 7 = 3\\n\\n3. 1 - 6 = \\n   That is not correct. The correct answer is:\\n   1 - 6 = -5\\n\\n4. 5 - 8 = \\n   That is not correct. The correct answer is:\\n   5 - 8 = -3\\n\\n5. 12 - 2 = \\n   That is not correct. The correct answer is:\\n   12 - 2 = 10\\n\\nYou answered 0 out of 5 questions correct.\\nYour score is 0.00%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   9 - 2 = 7\\n   10 - 7 = 3\\n   1 - 6 = -5\\n   5 - 8 = -3\\n   12 - 2 = 10\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n5\\ny\\n0\\n0\\n0\\n0\\n0\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"sub-NoNeg-5-correct\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n--------------------------------------------------\\n----------     Subtraction Practice     ----------\\n--------------------------------------------------\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAre negative answers okay (y/n): \\n\\nAnswer the following five questions: \\n\\n1. 9 - 2 = \\n   Great job! Your answer is correct!\\n\\n2. 10 - 7 = \\n   Great job! Your answer is correct!\\n\\n3. 6 - 1 = \\n   Great job! Your answer is correct!\\n\\n4. 8 - 5 = \\n   Great job! Your answer is correct!\\n\\n5. 12 - 2 = \\n   Great job! Your answer is correct!\\n\\nYou answered 5 out of 5 questions correct.\\nYour score is 100.00%.\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n5\\nn\\n7\\n3\\n5\\n3\\n10\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"sub-NoNeg-5-incorrect\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n--------------------------------------------------\\n----------     Subtraction Practice     ----------\\n--------------------------------------------------\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAre negative answers okay (y/n): \\n\\nAnswer the following five questions: \\n\\n1. 9 - 2 = \\n   That is not correct. The correct answer is:\\n   9 - 2 = 7\\n\\n2. 10 - 7 = \\n   That is not correct. The correct answer is:\\n   10 - 7 = 3\\n\\n3. 6 - 1 = \\n   That is not correct. The correct answer is:\\n   6 - 1 = 5\\n\\n4. 8 - 5 = \\n   That is not correct. The correct answer is:\\n   8 - 5 = 3\\n\\n5. 12 - 2 = \\n   That is not correct. The correct answer is:\\n   12 - 2 = 10\\n\\nYou answered 0 out of 5 questions correct.\\nYour score is 0.00%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   9 - 2 = 7\\n   10 - 7 = 3\\n   6 - 1 = 5\\n   8 - 5 = 3\\n   12 - 2 = 10\\n\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n5\\nn\\n0\\n0\\n0\\n0\\n0\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"extra1\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n++++++++++      Addition Practice       ++++++++++\\n++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nWould you like one or two digit numbers (one/two): \\n\\nAnswer the following four questions: \\n\\n1. 81 + 19 = \\n   Great job! Your answer is correct!\\n\\n2. 86 + 64 = \\n   That is not correct. The correct answer is:\\n   86 + 64 = 150\\n\\n3. 16 + 56 = \\n   Great job! Your answer is correct!\\n\\n4. 45 + 67 = \\n   That is not correct. The correct answer is:\\n   45 + 67 = 112\\n\\nYou answered 2 out of 4 questions correct.\\nYour score is 50.00%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   86 + 64 = 150\\n   45 + 67 = 112\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n4\\ntwo\\n100\\n130\\n72\\n122\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"extra2\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"--------------------------------------------------\\n|             FSC Math Learning Tool             |\\n--------------------------------------------------\\n| Please choose from the following menu:         |\\n|     1. Addition Practice.                      |\\n|     2. Subtraction Practice.                   |\\n|     3. Multiplication Practice.                |\\n|     4. Division Practice.                      |\\n--------------------------------------------------\\n\\n\\u003e Enter your Choice: \\n\\n--------------------------------------------------\\n----------     Subtraction Practice     ----------\\n--------------------------------------------------\\n\\nHow many questions would you like (3, 4, or 5): \\n\\nAre negative answers okay (y/n): \\n\\nAnswer the following four questions: \\n\\n1. 9 - 2 = \\n   Great job! Your answer is correct!\\n\\n2. 10 - 7 = \\n   Great job! Your answer is correct!\\n\\n3. 1 - 6 = \\n   That is not correct. The correct answer is:\\n   1 - 6 = -5\\n\\n4. 5 - 8 = \\n   That is not correct. The correct answer is:\\n   5 - 8 = -3\\n\\nYou answered 2 out of 4 questions correct.\\nYour score is 50.00%.\\n\\n--------------------------------------------------\\n-      Below are the questions you missed.       -\\n-    You should practice them for next time.     -\\n--------------------------------------------------\\n   1 - 6 = -5\\n   5 - 8 = -3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n4\\ny\\n7\\n3\\n4\\n3\\n\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":null},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1615150673000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 26478,
    "title": "Program 3",
    "prompt_md": "### Important comments on your submission of Program 3\n\nYou Must submit your program at two locations:\n\n1.  Most important is that you submit your Program on Canvas. And at Canvas, you must simply submit your Python code (the \\*.py file).\n2.  You must **also** submit your solution here and pass the test cases.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\\n\\n\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"MM Validation 1\",\"headline\":\"\",\"points\":1,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"MM Validation 2\",\"headline\":\"\",\"points\":1,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\nInvalid menu selection. Please try again.\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\nInvalid menu selection. Please try again.\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0\\n4\\n3\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"MM Validation 3\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\nInvalid menu selection. Please try again.\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\nInvalid menu selection. Please try again.\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"make sure you don't crash when users input text here\\ncool, that worked!\\n3\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Nutritional Menu\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+-------------------\\u003e Nutritional Menu \\u003c-------------------+\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+                                                          +\\n+    1. The Original Double Cheese 'n Fries                +\\n+    |    Calories|        Fat|      Carbs|    Protein|    +\\n+    |         770|        45g|        62g|        29g|    +\\n+    --------------------------------------------------    + \\n+                                                          +\\n+    2. Prime Steakburger 'n Fries                         +\\n+    |    Calories|        Fat|      Carbs|    Protein|    +\\n+    |        1020|        57g|        86g|        39g|    +\\n+    --------------------------------------------------    + \\n+                                                          +\\n+    3. Frisco Melt 'n Fries                               +\\n+    |    Calories|        Fat|      Carbs|    Protein|    +\\n+    |        1200|        79g|        81g|        36g|    +\\n+    --------------------------------------------------    + \\n+                                                          +\\n+    4. Steak Frank 'n Fries                               +\\n+    |    Calories|        Fat|      Carbs|    Protein|    +\\n+    |         630|        36g|        62g|        15g|    +\\n+    --------------------------------------------------    + \\n+                                                          +\\n+    5. Chicken Fingers 'n Fries                           +\\n+    |    Calories|        Fat|      Carbs|    Protein|    +\\n+    |         570|        31g|        52g|        23g|    +\\n+    --------------------------------------------------    + \\n+                                                          +\\n+    6. Classic Shake                                      +\\n+    |    Calories|        Fat|      Carbs|    Protein|    +\\n+    |         600|        17g|       101g|        38g|    +\\n+    --------------------------------------------------    + \\n+                                                          +\\n+    7. Soft Drink                                         +\\n+    |    Calories|        Fat|      Carbs|    Protein|    +\\n+    |         100|         0g|        27g|         0g|    +\\n+    --------------------------------------------------    + \\n+                                                          +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"2\\n3\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Food Choice Validation 1\",\"headline\":\"\",\"points\":2,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\nInvalid menu selection. Please try again.\\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\nInvalid menu selection. Please try again.\\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n0\\n8\\nr\\n3\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Food Choice Validation 2\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\nInvalid menu selection. Please try again.\\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\nInvalid menu selection. Please try again.\\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\nmake sure you don't crash when users input text here\\ncool, that worked!\\nr\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Add-on Validation 1\",\"headline\":\"\",\"points\":2,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\nInvalid add-on selection. Please try again.\\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\nInvalid add-on selection. Please try again.\\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n0\\n4\\nc\\ny\\nr\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Add-on Validation 2\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\nInvalid add-on selection. Please try again.\\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\nInvalid add-on selection. Please try again.\\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n3\\nmake sure this doesn't cause a problem if text is entered\\nyeah, that works too!\\nc\\ny\\nr\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Flavor Validation 1\",\"headline\":\"\",\"points\":2,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\nInvalid shake selection. Please try again.\\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\nInvalid shake selection. Please try again.\\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n6\\n0\\n4\\n1\\ny\\nr\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Flavor Validation 2\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\nInvalid shake selection. Please try again.\\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\nInvalid shake selection. Please try again.\\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n6\\nMake sure this doesn't crash your program if the user enters text\\nCool, that worked perfectly!\\n1\\ny\\nr\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Fac/Student Validation 1\",\"headline\":\"\",\"points\":2,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n  Invalid entry. You must enter \\\"S\\\" or \\\"F\\\". Please try again.\\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2021               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. The Original Double Cheese 'n Fries      $ 3.99    +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $ 3.99    +\\n+    Student Discount:                           $ 0.80    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $ 3.19    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+          Your order will be ready in 2 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\nc\\nn\\nasdf\\ns\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Fac/Student Validation 2\",\"headline\":\"\",\"points\":3,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n  Invalid entry. You must enter \\\"S\\\" or \\\"F\\\". Please try again.\\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n  Invalid entry. You must enter \\\"S\\\" or \\\"F\\\". Please try again.\\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2021               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. Soft Drink                               $ 1.95    +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $ 1.95    +\\n+    Student Discount:                           $ 0.39    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $ 1.56    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+          Your order will be ready in 2 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n7\\nn\\njust testing by typing ANYTHING other than s/f\\ncool, that worked!\\ns\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Another Validation\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Invalid entry. You must enter \\\"Y\\\" or \\\"N\\\". Please try again.\\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Invalid entry. You must enter \\\"Y\\\" or \\\"N\\\". Please try again.\\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2021               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. Chicken Fingers 'n Fries                 $ 3.99    +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $ 3.99    +\\n+    Student Discount:                           $ 0.80    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $ 3.19    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+          Your order will be ready in 2 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n5\\nmake sure this doesn't crash if the user enters text\\nCool, that works as well!\\nn\\ns\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"BurgerALLaddOns\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2021               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. The Original Double Cheese 'n Fries      $ 3.99    +\\n+       - Bacon                                  $ 1.00    +\\n+       - Grilled Onions                         $ 0.50    +\\n+       - Jalapenos                              $ 0.50    +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $ 5.99    +\\n+    Faculty/Staff Discount:                     $ 0.90    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $ 5.09    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+          Your order will be ready in 2 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n2\\n3\\nc\\nn\\nf\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Baconator\",\"headline\":\"\",\"points\":5,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2021               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. Prime Steakburger 'n Fries               $ 6.99    +\\n+       - Bacon                                  $ 1.00    +\\n+       - Bacon                                  $ 1.00    +\\n+       - Bacon                                  $ 1.00    +\\n+       - Bacon                                  $ 1.00    +\\n+       - Bacon                                  $ 1.00    +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $11.99    +\\n+    Student Discount:                           $ 2.40    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $ 9.59    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+          Your order will be ready in 2 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n2\\n1\\n1\\n1\\n1\\n1\\nc\\nn\\ns\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"All_Shakes\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2021               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. Classic Shake                            $ 2.99    +\\n+       - Chocolate                                        +\\n+    2. Classic Shake                            $ 2.99    +\\n+       - Vanilla                                          +\\n+    3. Classic Shake                            $ 2.99    +\\n+       - Strawberry                                       +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $ 8.97    +\\n+    Student Discount:                           $ 1.79    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $ 7.18    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+          Your order will be ready in 6 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n6\\n1\\ny\\n6\\n2\\ny\\n6\\n3\\nn\\ns\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"orderONEeachItem\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2021               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. The Original Double Cheese 'n Fries      $ 3.99    +\\n+    2. Prime Steakburger 'n Fries               $ 6.99    +\\n+    3. Frisco Melt 'n Fries                     $ 5.49    +\\n+    4. Steak Frank 'n Fries                     $ 3.99    +\\n+    5. Chicken Fingers 'n Fries                 $ 3.99    +\\n+    6. Classic Shake                            $ 2.99    +\\n+       - Chocolate                                        +\\n+    7. Soft Drink                               $ 1.95    +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $29.39    +\\n+    Faculty/Staff Discount:                     $ 4.41    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $24.98    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+         Your order will be ready in 14 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\nc\\ny\\n2\\nc\\ny\\n3\\nc\\ny\\n4\\ny\\n5\\ny\\n6\\n1\\ny\\n7\\nn\\nf\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"order_comprehensive_1\",\"headline\":\"\",\"points\":20,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2021               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. The Original Double Cheese 'n Fries      $ 3.99    +\\n+       - Bacon                                  $ 1.00    +\\n+       - Grilled Onions                         $ 0.50    +\\n+    2. Classic Shake                            $ 2.99    +\\n+       - Vanilla                                          +\\n+    3. Prime Steakburger 'n Fries               $ 6.99    +\\n+       - Grilled Onions                         $ 0.50    +\\n+    4. Classic Shake                            $ 2.99    +\\n+       - Chocolate                                        +\\n+    5. The Original Double Cheese 'n Fries      $ 3.99    +\\n+       - Grilled Onions                         $ 0.50    +\\n+       - Jalapenos                              $ 0.50    +\\n+    6. Soft Drink                               $ 1.95    +\\n+    7. The Original Double Cheese 'n Fries      $ 3.99    +\\n+    8. The Original Double Cheese 'n Fries      $ 3.99    +\\n+       - Bacon                                  $ 1.00    +\\n+       - Grilled Onions                         $ 0.50    +\\n+       - Jalapenos                              $ 0.50    +\\n+    9. Classic Shake                            $ 2.99    +\\n+       - Strawberry                                       +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $38.87    +\\n+    Faculty/Staff Discount:                     $ 5.83    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $33.04    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+         Your order will be ready in 18 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n1\\n1\\n2\\nc\\ny\\n6\\n2\\ny\\n2\\n2\\nc\\ny\\n6\\n1\\ny\\n1\\n2\\n3\\nc\\ny\\n7\\ny\\n1\\nc\\ny\\n1\\n1\\n2\\n3\\nc\\ny\\n6\\n3\\nn\\nf\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"multi_order\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2021               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. Chicken Fingers 'n Fries                 $ 3.99    +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $ 3.99    +\\n+    Faculty/Staff Discount:                     $ 0.60    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $ 3.39    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+          Your order will be ready in 2 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2022               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. Steak Frank 'n Fries                     $ 3.99    +\\n+    2. Classic Shake                            $ 2.99    +\\n+       - Vanilla                                          +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $ 6.98    +\\n+    Student Discount:                           $ 1.40    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $ 5.58    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+          Your order will be ready in 4 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  ----------------------------------------------------------\\n  Burger Add-ons: \\n    1. Bacon            $1.00\\n    2. Grilled Onions   $0.50\\n    3. Jalapenos        $0.50\\n  ----------------------------------------------------------\\n\\n  You can choose multiple add-ons or none.\\n\\n  Enter the number of your selection (1 - 3) or press the\\n  \\\"c\\\" key to continue with your order\\n\\n  Enter your add-on selection: \\n\\n  Would you like to order another menu item (Y/N): \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2023               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. The Original Double Cheese 'n Fries      $ 3.99    +\\n+       - Grilled Onions                         $ 0.50    +\\n+    2. Classic Shake                            $ 2.99    +\\n+       - Chocolate                                        +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $ 7.48    +\\n+    Faculty/Staff Discount:                     $ 1.12    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $ 6.36    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+          Your order will be ready in 4 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n-------------------------\\u003e  Menu  \\u003c-------------------------\\n    1. The Original Double Cheese 'n Fries         $3.99\\n    2. Prime Steakburger 'n Fries                  $6.99\\n    3. Frisco Melt 'n Fries                        $5.49\\n    4. Steak Frank 'n Fries                        $3.99\\n    5. Chicken Fingers 'n Fries                    $3.99\\n    6. Classic Shake                               $2.99\\n    7. Soft Drink                                  $1.95\\n------------------------------------------------------------\\n\\n  Enter the number of your selection (1 - 7) or press the\\n  \\\"r\\\" key to cancel your order and return to the Main Menu\\n\\nEnter your choice: \\n\\n  ----------------------------------------------------------\\n  Shake Flavor: \\n    1. Chocolate\\n    2. Vanilla\\n    3. Strawberry\\n  ----------------------------------------------------------\\n  Enter your flavor selection (1 - 3): \\n\\n  Would you like to order another menu item (Y/N): \\n\\n  Florida Southern College Discount Program:\\n     Enter \\\"S\\\" for Student or \\\"F\\\" for Faculty/Staff.\\n  Enter your choice: \\n\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+              FSC Steak 'n Shake Order 2024               +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n+    1. Classic Shake                            $ 2.99    +\\n+       - Strawberry                                       +\\n+    --------------------------------------------------    +\\n+    Subtotal:                                   $ 2.99    +\\n+    Faculty/Staff Discount:                     $ 0.45    +\\n+    --------------------------------------------------    +\\n+    Total:                                      $ 2.54    +\\n+    --------------------------------------------------    +\\n+                                                          +\\n+          Your order will be ready in 2 minutes.          +\\n+                Thank you for your order!                 +\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\\n------------------------------------------------------------\\n|                    FSC Steak 'n Shake                    |\\n------------------------------------------------------------\\n| Please choose from the following menu:                   |\\n|     1. Place a food order.                               |\\n|     2. Nutritional Information.                          |\\n|     3. Exit the Ordering System.                         |\\n------------------------------------------------------------\\n\\nEnter your choice: \\n\\n--------------- Exiting the Ordering System ----------------\\nGoodbye.\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1\\n5\\nn\\nf\\n1\\n4\\ny\\n6\\n2\\nn\\ns\\n1\\n1\\n2\\nc\\ny\\n6\\n1\\nn\\nf\\n1\\n6\\n3\\nn\\nf\\n3\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":null},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1616875756000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 30631,
    "title": "Lab10_Problem01: Print Letters",
    "prompt_md": "## Statement\n\nGiven a single String as input from the user, print each character of that String on a new line\n\n### Sample Input\n\n```plaintext\nhello\n```\n\n### Sample Output\n\n```plaintext\nh\ne\nl\nl\no\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"h\\ne\\nl\\nl\\no\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"hello\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"F\\nl\\no\\nr\\ni\\nd\\na\\n \\nS\\no\\nu\\nt\\nh\\ne\\nr\\nn\\n \\nC\\no\\nl\\nl\\ne\\ng\\ne\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Florida Southern College\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc3\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"G\\no\\n \\nM\\no\\nc\\ns\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Go Mocs\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc4\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"C\\nS\\nC\\n \\n2\\n2\\n8\\n0\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"CSC 2280\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def main():\\n    input_line = input()\\n\\n    for i in input_line:\\n        print(i)\\n\\nmain()\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1619174602000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 30632,
    "title": "Lab10_Problem02: Print Every Other Letter",
    "prompt_md": "## Statement\n\nGiven a single String as input from the user, print every other character of that String on a new line, starting from the first character.\n\n### Sample Input\n\n```plaintext\nvirtualization\n```\n\n### Sample Output\n\n```plaintext\nv\nr\nu\nl\nz\nt\no\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"v\\nr\\nu\\nl\\nz\\nt\\no\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"virtualization\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"F\\no\\ni\\na\\nS\\nu\\nh\\nr\\n \\no\\nl\\ng\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Florida Southern College\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc3\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"a\\nd\\n \\ns\\nd\\nj\\nw\\nn\\nk\\nx\\nv\\na\\ni\\nx\\nc\\nk\\ns\\nr\\nb\\nk\\nb\\na\\nd\\nm\\nq\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"asdf asldfjowinlk xcvlawi xvclkvsdr bzkjb asdvmwqe\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc4\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"a\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"ab\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def main():\\n    input_line = input()\\n\\n    for i in range(0, len(input_line), 2):\\n        print(input_line[i])\\n\\nmain()\\n\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1619174990000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 30633,
    "title": "Lab10_Problem03: Print Vowels",
    "prompt_md": "## Statement\n\nGiven a single String as input from the user, print all vowels of that String on a new line, starting from the first character.\n\n### Sample Input\n\n```plaintext\nvirtualization\n```\n\n### Sample Output\n\n```plaintext\ni\nu\na\ni\na\ni\no\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"i\\nu\\na\\ni\\na\\ni\\no\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"virtualization\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"a\\ne\\ni\\no\\nu\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"aeiou\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc3\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"o\\ni\\na\\no\\nu\\ne\\no\\ne\\ne\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Florida Southern College\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc4\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"a\\ne\\ni\\no\\nu\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"abcdefghijklmnopqrstuvwxyz\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def print_vowels(line):\\n    for i in line:\\n        if i == \\\"a\\\" or i == \\\"e\\\" or i == \\\"i\\\" or i == \\\"o\\\" or i == \\\"u\\\":\\n            print(i)\\n\\ndef main():\\n    input_line = input()\\n\\n    print_vowels(input_line)\\n\\nmain()\\n\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1619175464000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 30634,
    "title": "Lab10_Problem04: Print Digits",
    "prompt_md": "## Statement\n\nGiven a single String as input from the user, print each character of that String on a new line IF that character is a digit (is a number).\n\n### Sample Input\n\n```plaintext\na8b93cs0 d83n\n```\n\n### Sample Output\n\n```plaintext\nh\ne\nl\nl\no\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"8\\n9\\n3\\n0\\n8\\n3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"a8b93cs0 d83n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"1\\n8\\n8\\n3\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Florida Southern College was established in 1883.\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc3\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Florida Southern College\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc4\",\"headline\":\"\",\"points\":25,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"0123456789abcdefg\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"def print_digits(line):\\n    for i in line:\\n        if i.isdigit():\\n            print(i)\\n\\ndef main():\\n    input_line = input()\\n\\n    print_digits(input_line)\\n\\nmain()\\n\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1619175686000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 30637,
    "title": "Test",
    "prompt_md": "## Problem Statement\n\nGiven an integer, n, print “Hello World” n times.\n\n### Sample Input\n\n```plaintext\n5\n```\n\n### Sample Output\n\n```plaintext\nHello World\nHello World\nHello World\nHello World\nHello World\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"print(\\\"Hello, world! This is Python 3!\\\")\\n\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":null}},\"grading\":{\"testCases\":[],\"testCaseResults\":null,\"modelSolution\":null},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1619206801000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 30638,
    "title": "test2",
    "prompt_md": "",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"print(\\\"Hello, world! This is Python 3!\\\")\\n\",\"defaultFilePath\":\"\",\"defaultFileType\":\"\",\"extraFiles\":null}},\"grading\":{\"testCases\":[],\"testCaseResults\":null,\"modelSolution\":null}}"
  },
  {
    "id": 30641,
    "title": "Program 5 - Problem 1: String Game",
    "prompt_md": "## Problem Statement\n\nKayla and Stella are playing The String Game!\n\n#### **Game Rules**\n\n*   Both players are given the same string, S.\n*   Both players have to make substrings using the letters of the string.\n*   **Kayla** has to make words starting with **consonants**.\n*   **Stella** has to make words starting with **vowels**.\n*   The game ends when both players have made all possible substrings.\n\n#### **How Scoring Works**\n\n*   A player gets +1 point for each occurrence of the substring in the string S.\n\n#### Example\n\n*   String  = BANANA\n*   An example substring, for Stella, that begins with a vowel: ANA\n*   Here, ANA occurs twice in BANANA. Hence, Stella will get 2 Points.\n*   For better understanding, see the image below:\n\n![](https://codingrooms-user-uploads-us-west-2.s3-us-west-2.amazonaws.com/b1fee8cc-4284-4b0a-b6b2-bd5691550328/image.png)\n\n*   Your task is to determine the winner of the game and their score.\n\n### Input Format\n\nA single line of input containing the String, S. Note: The String, S, will contain only uppercase letters (A - Z).\n\n### Output Format\n\nYou should print the winner's name and score, separated by a space on one line. If there is a tie, simply print the word “Draw”.\n\n### Sample Input\n\n```plaintext\nBANANA\n```\n\n### Sample Output\n\n```plaintext\nKayla 12\n```\n\nSo in the example using the String “BANANA”, Kayla scored 12 points. Stella scored 9 points. Thus, Kayla wins.",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Kayla 12\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"BANANA\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Kayla 23\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"COMPUTER\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc3\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Kayla 19\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Florida\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc4\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Stella 8\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"ASICS\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc5\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Kayla 13\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"GOMOCS\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc6\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Stella 6\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"ABET\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc7\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Draw\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"ABBA\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc8\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Draw\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"ABABBABA\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc9\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Kayla 267\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc10\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"Stella 1\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"E\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":null},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1619376950000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 30642,
    "title": "Program 5 - Problem 2: List Methods",
    "prompt_md": "## Problem Statement\n\nConsider a list (list = \\[\\]). You can perform the following commands on this list:\n\n1.  `insert i e`: Insert integer e at position i.\n2.  `print`: Print the list.\n3.  `remove e`: Delete the first occurrence of integer e.\n4.  `append e`: Insert integer e at the end of the list.\n5.  `sort`: Sort the list.\n6.  `pop`: Pop the last element from the list.\n7.  `reverse`: Reverse the list.  \n    Initialize your list and read in the value of  followed by  lines of commands where each command will be of the  types listed above. Iterate through each command in order and perform the corresponding operation on your list.\n\nYou must create a new empty list called my\\_list. You will then read in an integer, n, from the user, where n represents the number of commands/lines of input that follow. Each of the n lines that follows will be a command from the list of seven commands listed above. You should use the build-in Python list methods to perform the indicated commands on your list.\n\n#### Assume you have the following input:\n\n```plaintext\n4\nappend 1\nappend 2\ninsert 1 3\nprint\n```\n\nThe 4 simply means that you have four lines of commands that follows, which means you will have to loop that many times. Let's look at what happens with each of the commands:\n\n*   append 1: You will simply append 1 to the end of your currently empty list. The result: my\\_list = \\[1\\]\n*   append 2: You will simply append 2 to the end of your list. The result: my\\_list = \\[1, 2\\]\n*   insert 3 1: You will insert 3 at index 1 of your list, and any elements at index 1 and to the right of index 1 will automatically get shifted over one position to the right. The result: my\\_list = \\[1, 3, 2\\]\n*   print: you simply print the list\n\n#### Output\n\n```plaintext\n[1, 3, 2]\n```\n\n### Sample Input\n\n```plaintext\n12\ninsert 0 5\ninsert 1 10\ninsert 0 6\nprint\nremove 6\nappend 9\nappend 1\nsort\nprint\npop\nreverse\nprint\n```\n\n### Sample Output\n\n```plaintext\n[6, 5, 10]\n[1, 5, 9, 10]\n[9, 5, 1]\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":50,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"[6, 5, 10]\\n[1, 5, 9, 10]\\n[9, 5, 1]\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"12\\ninsert 0 5\\ninsert 1 10\\ninsert 0 6\\nprint\\nremove 6\\nappend 9\\nappend 1\\nsort\\nprint\\npop\\nreverse\\nprint\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":50,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"[19, 289, 100, 85]\\n[19, 85, 100, 289]\\n[289, 100, 85, 19]\\n[6, 5, 10, 289, 100, 85, 19]\\n[1, 5, 9, 10, 19, 85, 100, 289]\\n[100, 85, 19, 10, 9, 5, 1]\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"21\\nappend 19\\nappend 289\\nappend 100\\nappend 85\\nprint\\nsort\\nprint\\nreverse\\nprint\\ninsert 0 5\\ninsert 1 10\\ninsert 0 6\\nprint\\nremove 6\\nappend 9\\nappend 1\\nsort\\nprint\\npop\\nreverse\\nprint\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":null},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1619381765000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 30643,
    "title": "Program 5 - Problem 3: Can you do it?",
    "prompt_md": "## Problem Statement\n\nYou are given two lists, A and B, consisting of integers, sorted in non-decreasing order. Check whether it is possible to choose k numbers in list A and choose m numbers in list B so that any number chosen in the first list is strictly less than any number chosen in the second list.\n\n### Input Description\n\nThe first line contains two integers _numA_, numB (1 ≤ _numA_, _numB_ ≤ 10000), separated by a space — the sizes of lists _A_ and _B_, correspondingly.\n\nThe second line contains two integers _k_ and _m_ (1 ≤ _k_ ≤ _numA_, 1 ≤ _m_ ≤ _numB_), separated by a space.\n\nThe third line contains _numA_ numbers _a\\_1, \\_a\\_2, ... \\_anumA_ ( - 1000 ≤ _a\\_1 ≤ \\_a\\_2 ≤ ... ≤ \\_anumA_ ≤ 1000), separated by spaces — elements of list _A_.\n\nThe fourth line contains _numB_ integers _b\\_1, \\_b\\_2, ... \\_bnumB_ ( - 1000 ≤ _b\\_1 ≤ \\_b\\_2 ≤ ... ≤ \\_bnumB_ ≤ 1000), separated by spaces — elements of list _B_.\n\n### Output Description\n\nPrint \"YES\" (without the quotes), if you can choose k numbers in list A and m numbers in list B so that any number chosen in list A was strictly less than any number chosen in list B. Otherwise, print \"NO\" (without the quotes).\n\n### Sample Input #1\n\n```plaintext\n3 3\n2 1\n1 2 3\n3 4 5\n```\n\n### Sample Output #1\n\n```plaintext\nYES\n```\n\n### Sample Input #2\n\n```plaintext\n3 3\n3 3\n1 2 3\n3 4 5\n```\n\n### Sample Output #2\n\n```plaintext\nNO\n```\n\n### Sample Input #3\n\n```plaintext\n5 2\n3 1\n1 1 1 1 1\n2 2\n```\n\n### Sample Output #3\n\n```plaintext\nYES\n```\n\n#### **Note**\n\n*   In the first sample test you can, for example, choose numbers 1 and 2 from list A and number 3 from list B (1 \\< 3 and 2 \\< 3).\n*   In the second sample test the only way to choose k elements in the first list and m elements in the second one is to choose all numbers in both list, but then not all the numbers chosen in A will be less than all the numbers chosen in B (cause 3 is not less than 3).",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"tc1\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3 3\\n2 1\\n1 2 3\\n3 4 5\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc2\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3 3\\n3 3\\n1 2 3\\n3 4 5\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc3\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5 2\\n3 1\\n1 1 1 1 1\\n2 2\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc4\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3 5\\n1 1\\n5 5 5\\n5 5 5 5 5\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc5\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"10 15\\n1 15\\n91 91 91 92 92 94 94 95 98 100\\n92 92 93 93 93 94 95 96 97 98 98 99 99 100 100\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc6\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"5 5\\n4 5\\n2 2 3 4 5\\n5 6 7 8 9\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc7\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"20 30\\n2 8\\n6 7 7 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 10\\n1 1 2 2 2 2 2 2 2 3 3 4 5 5 5 5 6 6 6 6 6 6 7 7 7 8 8 9 10 10\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc8\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"1 1\\n1 1\\n1\\n1\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc9\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"YES\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3 3\\n1 1\\n1 2 3\\n1 2 3\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"tc10\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"NO\",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"3 3\\n2 2\\n1 2 3\\n1 2 3\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":null},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1619382734000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  },
  {
    "id": 30644,
    "title": "Program 5 - Problem 4: WordGuess 3.0!",
    "prompt_md": "## Problem Statement\n\nFor this problem, you'll be coding up your solution to the game, WordGuess 3.0! Before going into more detail, it's probably easiest to follow the SAMPLE RUN of the program below to get a clear picture of what the program is asking you to do.\n\nYou are given a list of words as well as the necessary code to read in a _seed_ from the user. This seed will be used to “seed” our random number generator, thus guaranteeing that the random number match the expected output.\n\nHere's what your program will do:\n\n*   It will first read in in the seed from the user and will then set that seed (this is already coded for you)\n*   You are given a list of words. One of these words will be randomly chosen to be the “Guess Word” for this iteration of the program.\n*   Your program will then randomly generate an index into the list of words, thus allowing you to get a random word from this list.\n*   With that word in hand, you are now ready to play the game!\n*   You should ask the user to guess the word. Imagine the word has five letters. You should ask them this:\n*   `Guess a letter in the following word: * * * * *`\n*   You will then scan their guess and see if it matches any of the letters in the word.\n*   You will then print a message to them letting them know if their guess did NOT match a letter OR if their guess was invalid (if it was more than one character long)\n*   If they did guess a correct letter, you should “unveil” that letter within the hidden word you are displaying\n*   For example, if the hidden word was phone, and if they guess an “e”, you should now ask them this:\n*   `Guess a letter in the following word: * * * * e`\n*   This process repeats until the user guesses all letters in the word.\n*   You should also keep track of the number of how many wrong guesses (misses) they have, although recording the number of invalid entries is not necessary.\n*   Once the user guesses the final letter, an appropriate output is printed to the user.\n*   The user is then asked if they would like to guess another word. If so, you should loop again!\n\n### **HINT**:\n\nOnce you have randomly chosen a word from the list of words, you should make two new lists as follows:\n\n*   convert that word into a list, where EACH character of the word is saved as its own entry in the list\n*   so if the word was “marvel”, you should create a list of those individual characters (\\[\"m\", \"a\", \"r\", \"v\", \"e\", \"l\"\\])\n*   make another list of the EXACT same length, but this list should store an asterisk (\"\\*\") in each position of the list.\n\n### Sample Run of Program\n\n```plaintext\nevolve\n\nLet's play WordGuess 3.0!\n\nGuess a letter in the following word: * * * * * * * * * * * \nEnter your guess: r\n   r is not in the word.\n\nGuess a letter in the following word: * * * * * * * * * * * \nEnter your guess: s\n\nGuess a letter in the following word: * * s s * s s * * * * \nEnter your guess: t\n   t is not in the word.\n\nGuess a letter in the following word: * * s s * s s * * * * \nEnter your guess: a\n   a is not in the word.\n\nGuess a letter in the following word: * * s s * s s * * * * \nEnter your guess: i\n\nGuess a letter in the following word: * i s s i s s i * * i \nEnter your guess: p\n\nGuess a letter in the following word: * i s s i s s i p p i \nEnter your guess: m\n\nYou got it! The hidden word was mississippi.\nYou missed 3 times\n\nDo you want to play again (Y/N): y\n\nLet's play WordGuess 3.0!\n\nGuess a letter in the following word: * * * * * * \nEnter your guess: a\n\nGuess a letter in the following word: * a * * * * \nEnter your guess: r\n\nGuess a letter in the following word: * a r * * * \nEnter your guess: s\n   s is not in the word.\n\nGuess a letter in the following word: * a r * * * \nEnter your guess: t\n   t is not in the word.\n\nGuess a letter in the following word: * a r * * * \nEnter your guess: e\n\nGuess a letter in the following word: * a r * e * \nEnter your guess: l\n\nGuess a letter in the following word: * a r * e l \nEnter your guess: m\n\nGuess a letter in the following word: m a r * e l \nEnter your guess: v\n\nYou got it! The hidden word was marvel.\nYou missed 2 times\n\nDo you want to play again (Y/N): y\n\nLet's play WordGuess 3.0!\n\nGuess a letter in the following word: * * * * \nEnter your guess: a\n\nGuess a letter in the following word: * a * a \nEnter your guess: v\n\nGuess a letter in the following word: * a v a \nEnter your guess: java\n\n   Invalid guess. Please enter a single alphabetical character.\n\nEnter your guess: hello\n\n   Invalid guess. Please enter a single alphabetical character.\n\nEnter your guess: just testing this\n\n   Invalid guess. Please enter a single alphabetical character.\n\nEnter your guess: j\n\nYou got it! The hidden word was java.\nYou missed 0 times\n\nDo you want to play again (Y/N): y\n\nLet's play WordGuess 3.0!\n\nGuess a letter in the following word: * * * * * * * * * * * \nEnter your guess: s\n\nGuess a letter in the following word: * * s s * s s * * * * \nEnter your guess: i\n\nGuess a letter in the following word: * i s s i s s i * * i \nEnter your guess: p\n\nGuess a letter in the following word: * i s s i s s i p p i \nEnter your guess: m\n\nYou got it! The hidden word was mississippi.\nYou missed 0 times\n\nDo you want to play again (Y/N): y\n\nLet's play WordGuess 3.0!\n\nGuess a letter in the following word: * * * * * * * * \nEnter your guess: p\n\nGuess a letter in the following word: * * * p * * * * \nEnter your guess: r\n\nGuess a letter in the following word: * * * p * * * r \nEnter your guess: o\n\nGuess a letter in the following word: * o * p * * * r \nEnter your guess: v\n   v is not in the word.\n\nGuess a letter in the following word: * o * p * * * r \nEnter your guess: c\n\nGuess a letter in the following word: c o * p * * * r \nEnter your guess: m\n\nGuess a letter in the following word: c o m p * * * r \nEnter your guess: u\n\nGuess a letter in the following word: c o m p u * * r \nEnter your guess: t\n\nGuess a letter in the following word: c o m p u t * r \nEnter your guess: t\n   t is already in the word.\n\nGuess a letter in the following word: c o m p u t * r \nEnter your guess: m\n   m is already in the word.\n\nGuess a letter in the following word: c o m p u t * r \nEnter your guess: o\n   o is already in the word.\n\nGuess a letter in the following word: c o m p u t * r \nEnter your guess: c\n   c is already in the word.\n\nGuess a letter in the following word: c o m p u t * r \nEnter your guess: r\n   r is already in the word.\n\nGuess a letter in the following word: c o m p u t * r \nEnter your guess: e\n\nYou got it! The hidden word was computer.\nYou missed 6 times\n\nDo you want to play again (Y/N): y\n\nLet's play WordGuess 3.0!\n\nGuess a letter in the following word: * * * * * * \nEnter your guess: m\n\nGuess a letter in the following word: m * * * * * \nEnter your guess: a\n\nGuess a letter in the following word: m a * * * * \nEnter your guess: r\n\nGuess a letter in the following word: m a r * * * \nEnter your guess: v\n\nGuess a letter in the following word: m a r v * * \nEnter your guess: e\n\nGuess a letter in the following word: m a r v e * \nEnter your guess: l\n\nYou got it! The hidden word was marvel.\nYou missed 0 times\n\nDo you want to play again (Y/N): y\n\nLet's play WordGuess 3.0!\n\nGuess a letter in the following word: * * * * * * * * \nEnter your guess: c\n\nGuess a letter in the following word: c * * * * * * * \nEnter your guess: o\n\nGuess a letter in the following word: c o * * * * * * \nEnter your guess: m\n\nGuess a letter in the following word: c o m * * * * * \nEnter your guess: p\n\nGuess a letter in the following word: c o m p * * * * \nEnter your guess: u\n\nGuess a letter in the following word: c o m p u * * * \nEnter your guess: computer\n\n   Invalid guess. Please enter a single alphabetical character.\n\nEnter your guess: e\n\nGuess a letter in the following word: c o m p u * e * \nEnter your guess: t\n\nGuess a letter in the following word: c o m p u t e * \nEnter your guess: r\n\nYou got it! The hidden word was computer.\nYou missed 0 times\n\nDo you want to play again (Y/N): n\n```",
    "question_type": "single_file_code",
    "single_file_code_data": "{\"common\":{\"template\":{\"primaryCodeLanguage\":\"python3\",\"defaultFileContents\":\"import random\\n\\n# You can make (and then use) a variety of functions that you feel help you solve the problem\\n\\n\\n\\n# Here is your main function\\ndef main():\\n    # | | | | | | | | | |\\n    # | | | | | | | | | |  Do NOT delete the three lines of code below\\n    # v v v v v v v v v v\\n    seed = input()\\n    random.seed(seed)\\n    words = [\\\"program\\\", \\\"computer\\\", \\\"java\\\", \\\"marvel\\\", \\\"mississippi\\\"]\\n    # ^ ^ ^ ^ ^ ^ ^ ^ ^ ^\\n    # | | | | | | | | | |  Do NOT delete the three lines of code above\\n    # | | | | | | | | | |\\n\\n\\n    # YOUR CODE for main() should go on the next line and below...\\n\\n\\n\\n\\nmain()\\n\",\"defaultFilePath\":\"file.py\",\"defaultFileType\":\"text/plain\",\"defaultFileSyntaxLanguage\":\"python3\",\"runType\":\"file\",\"extraFiles\":{}}},\"grading\":{\"testCases\":[{\"type\":\"stdout\",\"title\":\"marvel - no misses\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r v * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r v e * \\nEnter your guess: \\n\\nYou got it! The hidden word was marvel.\\nYou missed 0 times\\n\\nDo you want to play again (Y/N): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Program 5\\nm\\na\\nr\\nv\\ne\\nl\\nn\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"marvel - bad inputs\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * \\nEnter your guess: \\n\\n   Invalid guess. Please enter a single alphabetical character.\\n\\nEnter your guess: \\n\\n   Invalid guess. Please enter a single alphabetical character.\\n\\nEnter your guess: \\n\\nGuess a letter in the following word: m * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r v * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r v e * \\nEnter your guess: \\n\\nYou got it! The hidden word was marvel.\\nYou missed 0 times\\n\\nDo you want to play again (Y/N): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Program 5\\nhello\\nasdf\\nm\\na\\nr\\nv\\ne\\nl\\nn\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"marvel - misses\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * \\nEnter your guess: \\n   x is not in the word.\\n\\nGuess a letter in the following word: * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m * * * * * \\nEnter your guess: \\n   o is not in the word.\\n\\nGuess a letter in the following word: m * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m * r * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m * r * e * \\nEnter your guess: \\n   w is not in the word.\\n\\nGuess a letter in the following word: m * r * e * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r * e * \\nEnter your guess: \\n   t is not in the word.\\n\\nGuess a letter in the following word: m a r * e * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r v e * \\nEnter your guess: \\n\\nYou got it! The hidden word was marvel.\\nYou missed 4 times\\n\\nDo you want to play again (Y/N): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Program 5\\nx\\nm\\no\\nr\\ne\\nw\\na\\nt\\nv\\nl\\nn\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"program - no misses\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: p * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: p r * * r * * \\nEnter your guess: \\n\\nGuess a letter in the following word: p r o * r * * \\nEnter your guess: \\n\\nGuess a letter in the following word: p r o g r * * \\nEnter your guess: \\n\\nGuess a letter in the following word: p r o g r a * \\nEnter your guess: \\n\\nYou got it! The hidden word was program.\\nYou missed 0 times\\n\\nDo you want to play again (Y/N): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"fsc\\np\\nr\\no\\ng\\na\\nm\\nn\\n\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"program - misses\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: * * * * * a * \\nEnter your guess: \\n   e is not in the word.\\n\\nGuess a letter in the following word: * * * * * a * \\nEnter your guess: \\n   i is not in the word.\\n\\nGuess a letter in the following word: * * * * * a * \\nEnter your guess: \\n\\nGuess a letter in the following word: * * o * * a * \\nEnter your guess: \\n   u is not in the word.\\n\\nGuess a letter in the following word: * * o * * a * \\nEnter your guess: \\n\\nGuess a letter in the following word: * r o * r a * \\nEnter your guess: \\n   s is not in the word.\\n\\nGuess a letter in the following word: * r o * r a * \\nEnter your guess: \\n   t is not in the word.\\n\\nGuess a letter in the following word: * r o * r a * \\nEnter your guess: \\n\\nGuess a letter in the following word: * r o * r a m \\nEnter your guess: \\n\\nGuess a letter in the following word: p r o * r a m \\nEnter your guess: \\n\\nYou got it! The hidden word was program.\\nYou missed 5 times\\n\\nDo you want to play again (Y/N): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"fsc\\na\\ne\\ni\\no\\nu\\nr\\ns\\nt\\nm\\np\\ng\\nn\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"java - no misses\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: j * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: j a * a \\nEnter your guess: \\n\\nYou got it! The hidden word was java.\\nYou missed 0 times\\n\\nDo you want to play again (Y/N): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Florida\\nj\\na\\nv\\nn\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"java - misses\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: * a * a \\nEnter your guess: \\n   t is not in the word.\\n\\nGuess a letter in the following word: * a * a \\nEnter your guess: \\n   s is not in the word.\\n\\nGuess a letter in the following word: * a * a \\nEnter your guess: \\n   r is not in the word.\\n\\nGuess a letter in the following word: * a * a \\nEnter your guess: \\n   m is not in the word.\\n\\nGuess a letter in the following word: * a * a \\nEnter your guess: \\n   l is not in the word.\\n\\nGuess a letter in the following word: * a * a \\nEnter your guess: \\n   p is not in the word.\\n\\nGuess a letter in the following word: * a * a \\nEnter your guess: \\n\\nGuess a letter in the following word: j a * a \\nEnter your guess: \\n\\nYou got it! The hidden word was java.\\nYou missed 6 times\\n\\nDo you want to play again (Y/N): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Florida\\na\\nt\\ns\\nr\\nm\\nl\\np\\nj\\nv\\nn\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"computer - no misses\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c * * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m p * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m p u * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m p u t * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m p u t e * \\nEnter your guess: \\n\\nYou got it! The hidden word was computer.\\nYou missed 0 times\\n\\nDo you want to play again (Y/N): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"College\\nc\\no\\nm\\np\\nu\\nt\\ne\\nr\\nn\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"mississippi - no misses\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: * * s s * s s * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: * i s s i s s i * * i \\nEnter your guess: \\n\\nGuess a letter in the following word: * i s s i s s i p p i \\nEnter your guess: \\n\\nYou got it! The hidden word was mississippi.\\nYou missed 0 times\\n\\nDo you want to play again (Y/N): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"cleaner\\ns\\ni\\np\\nm\\nn\",\"sourceFile\":\"\",\"argStr\":\"\"},{\"type\":\"stdout\",\"title\":\"Comprehensive Multi-Game\",\"headline\":\"\",\"points\":10,\"unitTestFlavor\":\"\",\"unitTestCode\":\"\",\"unitTestFilePath\":\"\",\"feedbackOnFailure\":\"\",\"stdout\":\"\\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r v * * \\nEnter your guess: \\n\\nGuess a letter in the following word: m a r v e * \\nEnter your guess: \\n\\nYou got it! The hidden word was marvel.\\nYou missed 0 times\\n\\nDo you want to play again (Y/N): \\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * * * \\nEnter your guess: \\n   a is not in the word.\\n\\nGuess a letter in the following word: * * * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: * * * * * * e * \\nEnter your guess: \\n   s is not in the word.\\n\\nGuess a letter in the following word: * * * * * * e * \\nEnter your guess: \\n\\nGuess a letter in the following word: * * * * * * e r \\nEnter your guess: \\n\\nGuess a letter in the following word: * * * * * t e r \\nEnter your guess: \\n   t is already in the word.\\n\\nGuess a letter in the following word: * * * * * t e r \\nEnter your guess: \\n\\nGuess a letter in the following word: c * * * * t e r \\nEnter your guess: \\n\\nGuess a letter in the following word: c o * * * t e r \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m * * t e r \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m p * t e r \\nEnter your guess: \\n   p is already in the word.\\n\\nGuess a letter in the following word: c o m p * t e r \\nEnter your guess: \\n\\nYou got it! The hidden word was computer.\\nYou missed 4 times\\n\\nDo you want to play again (Y/N): \\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: * a * a \\nEnter your guess: \\n   t is not in the word.\\n\\nGuess a letter in the following word: * a * a \\nEnter your guess: \\n   a is already in the word.\\n\\nGuess a letter in the following word: * a * a \\nEnter your guess: \\n\\nGuess a letter in the following word: j a * a \\nEnter your guess: \\n\\nYou got it! The hidden word was java.\\nYou missed 2 times\\n\\nDo you want to play again (Y/N): \\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * * \\nEnter your guess: \\n   c is not in the word.\\n\\nGuess a letter in the following word: * * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: * * o * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: * * o * * * m \\nEnter your guess: \\n\\n   Invalid guess. Please enter a single alphabetical character.\\n\\nEnter your guess: \\n\\n   Invalid guess. Please enter a single alphabetical character.\\n\\nEnter your guess: \\n\\nGuess a letter in the following word: p * o * * * m \\nEnter your guess: \\n\\nGuess a letter in the following word: p r o * r * m \\nEnter your guess: \\n\\nGuess a letter in the following word: p r o g r * m \\nEnter your guess: \\n   r is already in the word.\\n\\nGuess a letter in the following word: p r o g r * m \\nEnter your guess: \\n   r is already in the word.\\n\\nGuess a letter in the following word: p r o g r * m \\nEnter your guess: \\n\\nYou got it! The hidden word was program.\\nYou missed 3 times\\n\\nDo you want to play again (Y/N): \\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c * * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m p * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m p u * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m p u t * * \\nEnter your guess: \\n\\nGuess a letter in the following word: c o m p u t e * \\nEnter your guess: \\n\\nYou got it! The hidden word was computer.\\nYou missed 0 times\\n\\nDo you want to play again (Y/N): \\n\\nLet's play WordGuess 3.0!\\n\\nGuess a letter in the following word: * * * * * * * * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: * * s s * s s * * * * \\nEnter your guess: \\n\\nGuess a letter in the following word: * i s s i s s i * * i \\nEnter your guess: \\n\\nGuess a letter in the following word: * i s s i s s i p p i \\nEnter your guess: \\n   s is already in the word.\\n\\nGuess a letter in the following word: * i s s i s s i p p i \\nEnter your guess: \\n   i is already in the word.\\n\\nGuess a letter in the following word: * i s s i s s i p p i \\nEnter your guess: \\n   p is already in the word.\\n\\nGuess a letter in the following word: * i s s i s s i p p i \\nEnter your guess: \\n\\nYou got it! The hidden word was mississippi.\\nYou missed 3 times\\n\\nDo you want to play again (Y/N): \",\"stdoutCompareMethod\":\"equals_flexible\",\"stdin\":\"Program 5\\nm\\na\\nr\\nv\\ne\\nl\\ny\\na\\ne\\ns\\nr\\nt\\nt\\nc\\no\\nm\\np\\np\\nu\\ny\\na\\nt\\na\\nj\\nv\\ny\\nc\\no\\nm\\nasdf\\nblah\\np\\nr\\ng\\nr\\nr\\na\\ny\\nc\\no\\nm\\np\\nu\\nt\\ne\\nr\\ny\\ns\\ni\\np\\ns\\ni\\np\\nm\\nn\",\"sourceFile\":\"\",\"argStr\":\"\"}],\"testCaseResults\":null,\"modelSolution\":null},\"response\":{\"_codeFirepad\":{\"_defaultFilePath\":\"\",\"files\":{},\"history\":{\"A0\":{\"a\":\"1\",\"o\":[\"print(\\\"Hello, world! This is Python 3!\\\")\\n\"],\"t\":1619383740000}},\"users\":{\"1\":{\"color\":\"#80ff95\",\"name\":\"Exam Admin\"}}}}}"
  }
]